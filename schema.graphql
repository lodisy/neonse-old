# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""地址"""
type Address {
  Profile: Profile
  city: String!
  company: String
  country: String!
  createdAt: DateTime!
  customFields: JSON
  default: Boolean
  district: String
  email: String
  fullname: String!
  id: ID!
  phone: String
  postalCode: String
  profileId: String
  state: String
  streetLine1: String!
  streetLine2: String
  updatedAt: DateTime!
}

type AddressCountAggregate {
  _all: Int!
  city: Int!
  company: Int!
  country: Int!
  createdAt: Int!
  customFields: Int!
  default: Int!
  district: Int!
  email: Int!
  fullname: Int!
  id: Int!
  phone: Int!
  postalCode: Int!
  profileId: Int!
  state: Int!
  streetLine1: Int!
  streetLine2: Int!
  updatedAt: Int!
}

input AddressCreateManyProfileInput {
  city: String!
  company: String
  country: String!
  createdAt: DateTime
  customFields: JSON
  default: Boolean
  district: String
  email: String
  fullname: String!
  id: String
  phone: String
  postalCode: String
  state: String
  streetLine1: String!
  streetLine2: String
  updatedAt: DateTime
}

input AddressCreateManyProfileInputEnvelope {
  data: [AddressCreateManyProfileInput!]!
  skipDuplicates: Boolean
}

input AddressCreateNestedManyWithoutProfileInput {
  connect: [AddressWhereUniqueInput!]
  connectOrCreate: [AddressCreateOrConnectWithoutProfileInput!]
  create: [AddressCreateWithoutProfileInput!]
  createMany: AddressCreateManyProfileInputEnvelope
}

input AddressCreateOrConnectWithoutProfileInput {
  create: AddressCreateWithoutProfileInput!
  where: AddressWhereUniqueInput!
}

input AddressCreateWithoutProfileInput {
  city: String!
  company: String
  country: String!
  createdAt: DateTime
  customFields: JSON
  default: Boolean
  district: String
  email: String
  fullname: String!
  id: String
  phone: String
  postalCode: String
  state: String
  streetLine1: String!
  streetLine2: String
  updatedAt: DateTime
}

input AddressListRelationFilter {
  every: AddressWhereInput
  none: AddressWhereInput
  some: AddressWhereInput
}

type AddressMaxAggregate {
  city: String
  company: String
  country: String
  createdAt: DateTime
  default: Boolean
  district: String
  email: String
  fullname: String
  id: String
  phone: String
  postalCode: String
  profileId: String
  state: String
  streetLine1: String
  streetLine2: String
  updatedAt: DateTime
}

type AddressMinAggregate {
  city: String
  company: String
  country: String
  createdAt: DateTime
  default: Boolean
  district: String
  email: String
  fullname: String
  id: String
  phone: String
  postalCode: String
  profileId: String
  state: String
  streetLine1: String
  streetLine2: String
  updatedAt: DateTime
}

input AddressScalarWhereInput {
  AND: [AddressScalarWhereInput!]
  NOT: [AddressScalarWhereInput!]
  OR: [AddressScalarWhereInput!]
  city: StringFilter
  company: StringNullableFilter
  country: StringFilter
  createdAt: DateTimeFilter
  customFields: JsonNullableFilter
  default: BoolNullableFilter
  district: StringNullableFilter
  email: StringNullableFilter
  fullname: StringFilter
  id: StringFilter
  phone: StringNullableFilter
  postalCode: StringNullableFilter
  profileId: StringNullableFilter
  state: StringNullableFilter
  streetLine1: StringFilter
  streetLine2: StringNullableFilter
  updatedAt: DateTimeFilter
}

input AddressUpdateManyMutationInput {
  city: StringFieldUpdateOperationsInput
  company: NullableStringFieldUpdateOperationsInput
  country: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  customFields: JSON
  default: NullableBoolFieldUpdateOperationsInput
  district: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  fullname: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  postalCode: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  streetLine1: StringFieldUpdateOperationsInput
  streetLine2: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AddressUpdateManyWithWhereWithoutProfileInput {
  data: AddressUpdateManyMutationInput!
  where: AddressScalarWhereInput!
}

input AddressUpdateManyWithoutProfileInput {
  connect: [AddressWhereUniqueInput!]
  connectOrCreate: [AddressCreateOrConnectWithoutProfileInput!]
  create: [AddressCreateWithoutProfileInput!]
  createMany: AddressCreateManyProfileInputEnvelope
  delete: [AddressWhereUniqueInput!]
  deleteMany: [AddressScalarWhereInput!]
  disconnect: [AddressWhereUniqueInput!]
  set: [AddressWhereUniqueInput!]
  update: [AddressUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [AddressUpdateManyWithWhereWithoutProfileInput!]
  upsert: [AddressUpsertWithWhereUniqueWithoutProfileInput!]
}

input AddressUpdateWithWhereUniqueWithoutProfileInput {
  data: AddressUpdateWithoutProfileInput!
  where: AddressWhereUniqueInput!
}

input AddressUpdateWithoutProfileInput {
  city: StringFieldUpdateOperationsInput
  company: NullableStringFieldUpdateOperationsInput
  country: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  customFields: JSON
  default: NullableBoolFieldUpdateOperationsInput
  district: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  fullname: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  postalCode: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  streetLine1: StringFieldUpdateOperationsInput
  streetLine2: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AddressUpsertWithWhereUniqueWithoutProfileInput {
  create: AddressCreateWithoutProfileInput!
  update: AddressUpdateWithoutProfileInput!
  where: AddressWhereUniqueInput!
}

input AddressWhereInput {
  AND: [AddressWhereInput!]
  NOT: [AddressWhereInput!]
  OR: [AddressWhereInput!]
  Profile: ProfileRelationFilter
  city: StringFilter
  company: StringNullableFilter
  country: StringFilter
  createdAt: DateTimeFilter
  customFields: JsonNullableFilter
  default: BoolNullableFilter
  district: StringNullableFilter
  email: StringNullableFilter
  fullname: StringFilter
  id: StringFilter
  phone: StringNullableFilter
  postalCode: StringNullableFilter
  profileId: StringNullableFilter
  state: StringNullableFilter
  streetLine1: StringFilter
  streetLine2: StringNullableFilter
  updatedAt: DateTimeFilter
}

input AddressWhereUniqueInput {
  id: String
}

"""登入方式"""
type AuthenticationMethod {
  User: User!
  createdAt: DateTime!
  id: ID!
  strategy: AuthenticationStrategy!
  updatedAt: DateTime!
  userId: String!
}

type AuthenticationMethodCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  strategy: Int!
  updatedAt: Int!
  userId: Int!
}

input AuthenticationMethodCreateManyUserInput {
  createdAt: DateTime
  id: String
  strategy: AuthenticationStrategy
  updatedAt: DateTime
}

input AuthenticationMethodCreateManyUserInputEnvelope {
  data: [AuthenticationMethodCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input AuthenticationMethodCreateNestedManyWithoutUserInput {
  connect: [AuthenticationMethodWhereUniqueInput!]
  connectOrCreate: [AuthenticationMethodCreateOrConnectWithoutUserInput!]
  create: [AuthenticationMethodCreateWithoutUserInput!]
  createMany: AuthenticationMethodCreateManyUserInputEnvelope
}

input AuthenticationMethodCreateOrConnectWithoutUserInput {
  create: AuthenticationMethodCreateWithoutUserInput!
  where: AuthenticationMethodWhereUniqueInput!
}

input AuthenticationMethodCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  strategy: AuthenticationStrategy
  updatedAt: DateTime
}

input AuthenticationMethodListRelationFilter {
  every: AuthenticationMethodWhereInput
  none: AuthenticationMethodWhereInput
  some: AuthenticationMethodWhereInput
}

type AuthenticationMethodMaxAggregate {
  createdAt: DateTime
  id: String
  strategy: AuthenticationStrategy
  updatedAt: DateTime
  userId: String
}

type AuthenticationMethodMinAggregate {
  createdAt: DateTime
  id: String
  strategy: AuthenticationStrategy
  updatedAt: DateTime
  userId: String
}

input AuthenticationMethodScalarWhereInput {
  AND: [AuthenticationMethodScalarWhereInput!]
  NOT: [AuthenticationMethodScalarWhereInput!]
  OR: [AuthenticationMethodScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  strategy: EnumAuthenticationStrategyFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input AuthenticationMethodUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  strategy: EnumAuthenticationStrategyFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AuthenticationMethodUpdateManyWithWhereWithoutUserInput {
  data: AuthenticationMethodUpdateManyMutationInput!
  where: AuthenticationMethodScalarWhereInput!
}

input AuthenticationMethodUpdateManyWithoutUserInput {
  connect: [AuthenticationMethodWhereUniqueInput!]
  connectOrCreate: [AuthenticationMethodCreateOrConnectWithoutUserInput!]
  create: [AuthenticationMethodCreateWithoutUserInput!]
  createMany: AuthenticationMethodCreateManyUserInputEnvelope
  delete: [AuthenticationMethodWhereUniqueInput!]
  deleteMany: [AuthenticationMethodScalarWhereInput!]
  disconnect: [AuthenticationMethodWhereUniqueInput!]
  set: [AuthenticationMethodWhereUniqueInput!]
  update: [AuthenticationMethodUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [AuthenticationMethodUpdateManyWithWhereWithoutUserInput!]
  upsert: [AuthenticationMethodUpsertWithWhereUniqueWithoutUserInput!]
}

input AuthenticationMethodUpdateWithWhereUniqueWithoutUserInput {
  data: AuthenticationMethodUpdateWithoutUserInput!
  where: AuthenticationMethodWhereUniqueInput!
}

input AuthenticationMethodUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  strategy: EnumAuthenticationStrategyFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AuthenticationMethodUpsertWithWhereUniqueWithoutUserInput {
  create: AuthenticationMethodCreateWithoutUserInput!
  update: AuthenticationMethodUpdateWithoutUserInput!
  where: AuthenticationMethodWhereUniqueInput!
}

input AuthenticationMethodWhereInput {
  AND: [AuthenticationMethodWhereInput!]
  NOT: [AuthenticationMethodWhereInput!]
  OR: [AuthenticationMethodWhereInput!]
  User: UserRelationFilter
  createdAt: DateTimeFilter
  id: StringFilter
  strategy: EnumAuthenticationStrategyFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input AuthenticationMethodWhereUniqueInput {
  id: String
}

enum AuthenticationStrategy {
  JWT
  Local
  SMS
  Wechat
}

input BigIntFieldUpdateOperationsInput {
  decrement: String
  divide: String
  increment: String
  multiply: String
  set: String
}

input BigIntFilter {
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedBigIntFilter
  notIn: [String!]
}

input BigIntNullableFilter {
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedBigIntNullableFilter
  notIn: [String!]
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

"""品牌"""
type Brand {
  country: String
  createdAt: DateTime!
  description: String
  founders: [Profile!]
  id: ID!
  languageCode: LanguageCode!
  name: String!
  products: [Product!]
  slug: String!
  translations: [BrandTranslation!]
  updatedAt: DateTime!
  year: Int
}

type BrandAvgAggregate {
  year: Float
}

type BrandCountAggregate {
  _all: Int!
  country: Int!
  createdAt: Int!
  description: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  slug: Int!
  updatedAt: Int!
  year: Int!
}

input BrandCreateNestedManyWithoutFoundersInput {
  connect: [BrandWhereUniqueInput!]
  connectOrCreate: [BrandCreateOrConnectWithoutFoundersInput!]
  create: [BrandCreateWithoutFoundersInput!]
}

input BrandCreateNestedManyWithoutProductsInput {
  connect: [BrandWhereUniqueInput!]
  connectOrCreate: [BrandCreateOrConnectWithoutProductsInput!]
  create: [BrandCreateWithoutProductsInput!]
}

input BrandCreateOrConnectWithoutFoundersInput {
  create: BrandCreateWithoutFoundersInput!
  where: BrandWhereUniqueInput!
}

input BrandCreateOrConnectWithoutProductsInput {
  create: BrandCreateWithoutProductsInput!
  where: BrandWhereUniqueInput!
}

input BrandCreateWithoutFoundersInput {
  country: String
  createdAt: DateTime
  description: String
  id: String
  languageCode: LanguageCode
  name: String!
  products: ProductCreateNestedManyWithoutBrandsInput
  slug: String!
  translations: BrandTranslationCreateNestedManyWithoutBrandInput
  updatedAt: DateTime
  year: Int
}

input BrandCreateWithoutProductsInput {
  country: String
  createdAt: DateTime
  description: String
  founders: ProfileCreateNestedManyWithoutBrandsInput
  id: String
  languageCode: LanguageCode
  name: String!
  slug: String!
  translations: BrandTranslationCreateNestedManyWithoutBrandInput
  updatedAt: DateTime
  year: Int
}

input BrandListRelationFilter {
  every: BrandWhereInput
  none: BrandWhereInput
  some: BrandWhereInput
}

type BrandMaxAggregate {
  country: String
  createdAt: DateTime
  description: String
  id: String
  languageCode: LanguageCode
  name: String
  slug: String
  updatedAt: DateTime
  year: Int
}

type BrandMinAggregate {
  country: String
  createdAt: DateTime
  description: String
  id: String
  languageCode: LanguageCode
  name: String
  slug: String
  updatedAt: DateTime
  year: Int
}

input BrandRelationFilter {
  is: BrandWhereInput
  isNot: BrandWhereInput
}

input BrandScalarWhereInput {
  AND: [BrandScalarWhereInput!]
  NOT: [BrandScalarWhereInput!]
  OR: [BrandScalarWhereInput!]
  country: StringNullableFilter
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  slug: StringFilter
  updatedAt: DateTimeFilter
  year: IntNullableFilter
}

type BrandSumAggregate {
  year: Int
}

type BrandTranslation {
  brand: Brand!
  brandId: String!
  country: String
  description: String
  id: ID!
  languageCode: LanguageCode!
  name: String!
}

type BrandTranslationCountAggregate {
  _all: Int!
  brandId: Int!
  country: Int!
  description: Int!
  id: Int!
  languageCode: Int!
  name: Int!
}

input BrandTranslationCreateManyBrandInput {
  country: String
  description: String
  id: String
  languageCode: LanguageCode
  name: String!
}

input BrandTranslationCreateManyBrandInputEnvelope {
  data: [BrandTranslationCreateManyBrandInput!]!
  skipDuplicates: Boolean
}

input BrandTranslationCreateNestedManyWithoutBrandInput {
  connect: [BrandTranslationWhereUniqueInput!]
  connectOrCreate: [BrandTranslationCreateOrConnectWithoutBrandInput!]
  create: [BrandTranslationCreateWithoutBrandInput!]
  createMany: BrandTranslationCreateManyBrandInputEnvelope
}

input BrandTranslationCreateOrConnectWithoutBrandInput {
  create: BrandTranslationCreateWithoutBrandInput!
  where: BrandTranslationWhereUniqueInput!
}

input BrandTranslationCreateWithoutBrandInput {
  country: String
  description: String
  id: String
  languageCode: LanguageCode
  name: String!
}

input BrandTranslationListRelationFilter {
  every: BrandTranslationWhereInput
  none: BrandTranslationWhereInput
  some: BrandTranslationWhereInput
}

type BrandTranslationMaxAggregate {
  brandId: String
  country: String
  description: String
  id: String
  languageCode: LanguageCode
  name: String
}

type BrandTranslationMinAggregate {
  brandId: String
  country: String
  description: String
  id: String
  languageCode: LanguageCode
  name: String
}

input BrandTranslationScalarWhereInput {
  AND: [BrandTranslationScalarWhereInput!]
  NOT: [BrandTranslationScalarWhereInput!]
  OR: [BrandTranslationScalarWhereInput!]
  brandId: StringFilter
  country: StringNullableFilter
  description: StringNullableFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
}

input BrandTranslationUpdateManyMutationInput {
  country: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input BrandTranslationUpdateManyWithWhereWithoutBrandInput {
  data: BrandTranslationUpdateManyMutationInput!
  where: BrandTranslationScalarWhereInput!
}

input BrandTranslationUpdateManyWithoutBrandInput {
  connect: [BrandTranslationWhereUniqueInput!]
  connectOrCreate: [BrandTranslationCreateOrConnectWithoutBrandInput!]
  create: [BrandTranslationCreateWithoutBrandInput!]
  createMany: BrandTranslationCreateManyBrandInputEnvelope
  delete: [BrandTranslationWhereUniqueInput!]
  deleteMany: [BrandTranslationScalarWhereInput!]
  disconnect: [BrandTranslationWhereUniqueInput!]
  set: [BrandTranslationWhereUniqueInput!]
  update: [BrandTranslationUpdateWithWhereUniqueWithoutBrandInput!]
  updateMany: [BrandTranslationUpdateManyWithWhereWithoutBrandInput!]
  upsert: [BrandTranslationUpsertWithWhereUniqueWithoutBrandInput!]
}

input BrandTranslationUpdateWithWhereUniqueWithoutBrandInput {
  data: BrandTranslationUpdateWithoutBrandInput!
  where: BrandTranslationWhereUniqueInput!
}

input BrandTranslationUpdateWithoutBrandInput {
  country: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input BrandTranslationUpsertWithWhereUniqueWithoutBrandInput {
  create: BrandTranslationCreateWithoutBrandInput!
  update: BrandTranslationUpdateWithoutBrandInput!
  where: BrandTranslationWhereUniqueInput!
}

input BrandTranslationWhereInput {
  AND: [BrandTranslationWhereInput!]
  NOT: [BrandTranslationWhereInput!]
  OR: [BrandTranslationWhereInput!]
  brand: BrandRelationFilter
  brandId: StringFilter
  country: StringNullableFilter
  description: StringNullableFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
}

input BrandTranslationWhereUniqueInput {
  id: String
}

input BrandUpdateManyMutationInput {
  country: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input BrandUpdateManyWithWhereWithoutFoundersInput {
  data: BrandUpdateManyMutationInput!
  where: BrandScalarWhereInput!
}

input BrandUpdateManyWithWhereWithoutProductsInput {
  data: BrandUpdateManyMutationInput!
  where: BrandScalarWhereInput!
}

input BrandUpdateManyWithoutFoundersInput {
  connect: [BrandWhereUniqueInput!]
  connectOrCreate: [BrandCreateOrConnectWithoutFoundersInput!]
  create: [BrandCreateWithoutFoundersInput!]
  delete: [BrandWhereUniqueInput!]
  deleteMany: [BrandScalarWhereInput!]
  disconnect: [BrandWhereUniqueInput!]
  set: [BrandWhereUniqueInput!]
  update: [BrandUpdateWithWhereUniqueWithoutFoundersInput!]
  updateMany: [BrandUpdateManyWithWhereWithoutFoundersInput!]
  upsert: [BrandUpsertWithWhereUniqueWithoutFoundersInput!]
}

input BrandUpdateManyWithoutProductsInput {
  connect: [BrandWhereUniqueInput!]
  connectOrCreate: [BrandCreateOrConnectWithoutProductsInput!]
  create: [BrandCreateWithoutProductsInput!]
  delete: [BrandWhereUniqueInput!]
  deleteMany: [BrandScalarWhereInput!]
  disconnect: [BrandWhereUniqueInput!]
  set: [BrandWhereUniqueInput!]
  update: [BrandUpdateWithWhereUniqueWithoutProductsInput!]
  updateMany: [BrandUpdateManyWithWhereWithoutProductsInput!]
  upsert: [BrandUpsertWithWhereUniqueWithoutProductsInput!]
}

input BrandUpdateWithWhereUniqueWithoutFoundersInput {
  data: BrandUpdateWithoutFoundersInput!
  where: BrandWhereUniqueInput!
}

input BrandUpdateWithWhereUniqueWithoutProductsInput {
  data: BrandUpdateWithoutProductsInput!
  where: BrandWhereUniqueInput!
}

input BrandUpdateWithoutFoundersInput {
  country: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: ProductUpdateManyWithoutBrandsInput
  slug: StringFieldUpdateOperationsInput
  translations: BrandTranslationUpdateManyWithoutBrandInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input BrandUpdateWithoutProductsInput {
  country: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  founders: ProfileUpdateManyWithoutBrandsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  translations: BrandTranslationUpdateManyWithoutBrandInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input BrandUpsertWithWhereUniqueWithoutFoundersInput {
  create: BrandCreateWithoutFoundersInput!
  update: BrandUpdateWithoutFoundersInput!
  where: BrandWhereUniqueInput!
}

input BrandUpsertWithWhereUniqueWithoutProductsInput {
  create: BrandCreateWithoutProductsInput!
  update: BrandUpdateWithoutProductsInput!
  where: BrandWhereUniqueInput!
}

input BrandWhereInput {
  AND: [BrandWhereInput!]
  NOT: [BrandWhereInput!]
  OR: [BrandWhereInput!]
  country: StringNullableFilter
  createdAt: DateTimeFilter
  description: StringNullableFilter
  founders: ProfileListRelationFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  products: ProductListRelationFilter
  slug: StringFilter
  translations: BrandTranslationListRelationFilter
  updatedAt: DateTimeFilter
  year: IntNullableFilter
}

input BrandWhereUniqueInput {
  id: String
  slug: String
}

"""信用卡"""
type Card {
  bank: String
  createdAt: DateTime!
  expiration: DateTime!
  id: ID!
  name: String!
  number: String!
  profile: Profile
  profileId: String
  updatedAt: DateTime!
}

type CardAvgAggregate {
  number: Float
}

type CardCountAggregate {
  _all: Int!
  bank: Int!
  createdAt: Int!
  expiration: Int!
  id: Int!
  name: Int!
  number: Int!
  profileId: Int!
  updatedAt: Int!
}

input CardCreateManyProfileInput {
  bank: String
  createdAt: DateTime
  expiration: DateTime!
  id: String
  name: String!
  number: String!
  updatedAt: DateTime
}

input CardCreateManyProfileInputEnvelope {
  data: [CardCreateManyProfileInput!]!
  skipDuplicates: Boolean
}

input CardCreateNestedManyWithoutProfileInput {
  connect: [CardWhereUniqueInput!]
  connectOrCreate: [CardCreateOrConnectWithoutProfileInput!]
  create: [CardCreateWithoutProfileInput!]
  createMany: CardCreateManyProfileInputEnvelope
}

input CardCreateOrConnectWithoutProfileInput {
  create: CardCreateWithoutProfileInput!
  where: CardWhereUniqueInput!
}

input CardCreateWithoutProfileInput {
  bank: String
  createdAt: DateTime
  expiration: DateTime!
  id: String
  name: String!
  number: String!
  updatedAt: DateTime
}

input CardListRelationFilter {
  every: CardWhereInput
  none: CardWhereInput
  some: CardWhereInput
}

type CardMaxAggregate {
  bank: String
  createdAt: DateTime
  expiration: DateTime
  id: String
  name: String
  number: String
  profileId: String
  updatedAt: DateTime
}

type CardMinAggregate {
  bank: String
  createdAt: DateTime
  expiration: DateTime
  id: String
  name: String
  number: String
  profileId: String
  updatedAt: DateTime
}

input CardScalarWhereInput {
  AND: [CardScalarWhereInput!]
  NOT: [CardScalarWhereInput!]
  OR: [CardScalarWhereInput!]
  bank: StringNullableFilter
  createdAt: DateTimeFilter
  expiration: DateTimeFilter
  id: StringFilter
  name: StringFilter
  number: BigIntFilter
  profileId: StringNullableFilter
  updatedAt: DateTimeFilter
}

type CardSumAggregate {
  number: String
}

input CardUpdateManyMutationInput {
  bank: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expiration: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  number: BigIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CardUpdateManyWithWhereWithoutProfileInput {
  data: CardUpdateManyMutationInput!
  where: CardScalarWhereInput!
}

input CardUpdateManyWithoutProfileInput {
  connect: [CardWhereUniqueInput!]
  connectOrCreate: [CardCreateOrConnectWithoutProfileInput!]
  create: [CardCreateWithoutProfileInput!]
  createMany: CardCreateManyProfileInputEnvelope
  delete: [CardWhereUniqueInput!]
  deleteMany: [CardScalarWhereInput!]
  disconnect: [CardWhereUniqueInput!]
  set: [CardWhereUniqueInput!]
  update: [CardUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [CardUpdateManyWithWhereWithoutProfileInput!]
  upsert: [CardUpsertWithWhereUniqueWithoutProfileInput!]
}

input CardUpdateWithWhereUniqueWithoutProfileInput {
  data: CardUpdateWithoutProfileInput!
  where: CardWhereUniqueInput!
}

input CardUpdateWithoutProfileInput {
  bank: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  expiration: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  number: BigIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CardUpsertWithWhereUniqueWithoutProfileInput {
  create: CardCreateWithoutProfileInput!
  update: CardUpdateWithoutProfileInput!
  where: CardWhereUniqueInput!
}

input CardWhereInput {
  AND: [CardWhereInput!]
  NOT: [CardWhereInput!]
  OR: [CardWhereInput!]
  bank: StringNullableFilter
  createdAt: DateTimeFilter
  expiration: DateTimeFilter
  id: StringFilter
  name: StringFilter
  number: BigIntFilter
  profile: ProfileRelationFilter
  profileId: StringNullableFilter
  updatedAt: DateTimeFilter
}

input CardWhereUniqueInput {
  id: String
  number: String
}

"""渠道端 比如微信端、英文网站、中文网站等"""
type Channel {
  Role: Role
  code: String!
  createdAt: DateTime!
  currencyCode: CurrencyCode!
  customFields: JSON
  defaultLanguageCode: LanguageCode!
  id: ID!
  priceIncludeTax: Boolean
  productVariant: ProductVariant
  productVariantId: String
  roleId: String
  token: String!
  updatedAt: DateTime!
}

type ChannelCountAggregate {
  _all: Int!
  code: Int!
  createdAt: Int!
  currencyCode: Int!
  customFields: Int!
  defaultLanguageCode: Int!
  id: Int!
  priceIncludeTax: Int!
  productVariantId: Int!
  roleId: Int!
  token: Int!
  updatedAt: Int!
}

input ChannelCreateManyProductVariantInput {
  code: String!
  createdAt: DateTime
  currencyCode: CurrencyCode
  customFields: JSON
  defaultLanguageCode: LanguageCode
  id: String
  priceIncludeTax: Boolean
  roleId: String
  token: String!
  updatedAt: DateTime
}

input ChannelCreateManyProductVariantInputEnvelope {
  data: [ChannelCreateManyProductVariantInput!]!
  skipDuplicates: Boolean
}

input ChannelCreateManyRoleInput {
  code: String!
  createdAt: DateTime
  currencyCode: CurrencyCode
  customFields: JSON
  defaultLanguageCode: LanguageCode
  id: String
  priceIncludeTax: Boolean
  productVariantId: String
  token: String!
  updatedAt: DateTime
}

input ChannelCreateManyRoleInputEnvelope {
  data: [ChannelCreateManyRoleInput!]!
  skipDuplicates: Boolean
}

input ChannelCreateNestedManyWithoutProductVariantInput {
  connect: [ChannelWhereUniqueInput!]
  connectOrCreate: [ChannelCreateOrConnectWithoutProductVariantInput!]
  create: [ChannelCreateWithoutProductVariantInput!]
  createMany: ChannelCreateManyProductVariantInputEnvelope
}

input ChannelCreateNestedManyWithoutRoleInput {
  connect: [ChannelWhereUniqueInput!]
  connectOrCreate: [ChannelCreateOrConnectWithoutRoleInput!]
  create: [ChannelCreateWithoutRoleInput!]
  createMany: ChannelCreateManyRoleInputEnvelope
}

input ChannelCreateOrConnectWithoutProductVariantInput {
  create: ChannelCreateWithoutProductVariantInput!
  where: ChannelWhereUniqueInput!
}

input ChannelCreateOrConnectWithoutRoleInput {
  create: ChannelCreateWithoutRoleInput!
  where: ChannelWhereUniqueInput!
}

input ChannelCreateWithoutProductVariantInput {
  Role: RoleCreateNestedOneWithoutChannelsInput
  code: String!
  createdAt: DateTime
  currencyCode: CurrencyCode
  customFields: JSON
  defaultLanguageCode: LanguageCode
  id: String
  priceIncludeTax: Boolean
  token: String!
  updatedAt: DateTime
}

input ChannelCreateWithoutRoleInput {
  code: String!
  createdAt: DateTime
  currencyCode: CurrencyCode
  customFields: JSON
  defaultLanguageCode: LanguageCode
  id: String
  priceIncludeTax: Boolean
  productVariant: ProductVariantCreateNestedOneWithoutChannelsInput
  token: String!
  updatedAt: DateTime
}

input ChannelListRelationFilter {
  every: ChannelWhereInput
  none: ChannelWhereInput
  some: ChannelWhereInput
}

type ChannelMaxAggregate {
  code: String
  createdAt: DateTime
  currencyCode: CurrencyCode
  defaultLanguageCode: LanguageCode
  id: String
  priceIncludeTax: Boolean
  productVariantId: String
  roleId: String
  token: String
  updatedAt: DateTime
}

type ChannelMinAggregate {
  code: String
  createdAt: DateTime
  currencyCode: CurrencyCode
  defaultLanguageCode: LanguageCode
  id: String
  priceIncludeTax: Boolean
  productVariantId: String
  roleId: String
  token: String
  updatedAt: DateTime
}

input ChannelScalarWhereInput {
  AND: [ChannelScalarWhereInput!]
  NOT: [ChannelScalarWhereInput!]
  OR: [ChannelScalarWhereInput!]
  code: StringFilter
  createdAt: DateTimeFilter
  currencyCode: EnumCurrencyCodeFilter
  customFields: JsonNullableFilter
  defaultLanguageCode: EnumLanguageCodeFilter
  id: StringFilter
  priceIncludeTax: BoolNullableFilter
  productVariantId: StringNullableFilter
  roleId: StringNullableFilter
  token: StringFilter
  updatedAt: DateTimeFilter
}

input ChannelUpdateManyMutationInput {
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  currencyCode: EnumCurrencyCodeFieldUpdateOperationsInput
  customFields: JSON
  defaultLanguageCode: EnumLanguageCodeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  priceIncludeTax: NullableBoolFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ChannelUpdateManyWithWhereWithoutProductVariantInput {
  data: ChannelUpdateManyMutationInput!
  where: ChannelScalarWhereInput!
}

input ChannelUpdateManyWithWhereWithoutRoleInput {
  data: ChannelUpdateManyMutationInput!
  where: ChannelScalarWhereInput!
}

input ChannelUpdateManyWithoutProductVariantInput {
  connect: [ChannelWhereUniqueInput!]
  connectOrCreate: [ChannelCreateOrConnectWithoutProductVariantInput!]
  create: [ChannelCreateWithoutProductVariantInput!]
  createMany: ChannelCreateManyProductVariantInputEnvelope
  delete: [ChannelWhereUniqueInput!]
  deleteMany: [ChannelScalarWhereInput!]
  disconnect: [ChannelWhereUniqueInput!]
  set: [ChannelWhereUniqueInput!]
  update: [ChannelUpdateWithWhereUniqueWithoutProductVariantInput!]
  updateMany: [ChannelUpdateManyWithWhereWithoutProductVariantInput!]
  upsert: [ChannelUpsertWithWhereUniqueWithoutProductVariantInput!]
}

input ChannelUpdateManyWithoutRoleInput {
  connect: [ChannelWhereUniqueInput!]
  connectOrCreate: [ChannelCreateOrConnectWithoutRoleInput!]
  create: [ChannelCreateWithoutRoleInput!]
  createMany: ChannelCreateManyRoleInputEnvelope
  delete: [ChannelWhereUniqueInput!]
  deleteMany: [ChannelScalarWhereInput!]
  disconnect: [ChannelWhereUniqueInput!]
  set: [ChannelWhereUniqueInput!]
  update: [ChannelUpdateWithWhereUniqueWithoutRoleInput!]
  updateMany: [ChannelUpdateManyWithWhereWithoutRoleInput!]
  upsert: [ChannelUpsertWithWhereUniqueWithoutRoleInput!]
}

input ChannelUpdateWithWhereUniqueWithoutProductVariantInput {
  data: ChannelUpdateWithoutProductVariantInput!
  where: ChannelWhereUniqueInput!
}

input ChannelUpdateWithWhereUniqueWithoutRoleInput {
  data: ChannelUpdateWithoutRoleInput!
  where: ChannelWhereUniqueInput!
}

input ChannelUpdateWithoutProductVariantInput {
  Role: RoleUpdateOneWithoutChannelsInput
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  currencyCode: EnumCurrencyCodeFieldUpdateOperationsInput
  customFields: JSON
  defaultLanguageCode: EnumLanguageCodeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  priceIncludeTax: NullableBoolFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ChannelUpdateWithoutRoleInput {
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  currencyCode: EnumCurrencyCodeFieldUpdateOperationsInput
  customFields: JSON
  defaultLanguageCode: EnumLanguageCodeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  priceIncludeTax: NullableBoolFieldUpdateOperationsInput
  productVariant: ProductVariantUpdateOneWithoutChannelsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ChannelUpsertWithWhereUniqueWithoutProductVariantInput {
  create: ChannelCreateWithoutProductVariantInput!
  update: ChannelUpdateWithoutProductVariantInput!
  where: ChannelWhereUniqueInput!
}

input ChannelUpsertWithWhereUniqueWithoutRoleInput {
  create: ChannelCreateWithoutRoleInput!
  update: ChannelUpdateWithoutRoleInput!
  where: ChannelWhereUniqueInput!
}

input ChannelWhereInput {
  AND: [ChannelWhereInput!]
  NOT: [ChannelWhereInput!]
  OR: [ChannelWhereInput!]
  Role: RoleRelationFilter
  code: StringFilter
  createdAt: DateTimeFilter
  currencyCode: EnumCurrencyCodeFilter
  customFields: JsonNullableFilter
  defaultLanguageCode: EnumLanguageCodeFilter
  id: StringFilter
  priceIncludeTax: BoolNullableFilter
  productVariant: ProductVariantRelationFilter
  productVariantId: StringNullableFilter
  roleId: StringNullableFilter
  token: StringFilter
  updatedAt: DateTimeFilter
}

input ChannelWhereUniqueInput {
  code: String
  id: String
  token: String
}

"""评论（匿名）"""
type Comment {
  by: Profile
  content: String!
  createdAt: DateTime!
  email: String!
  id: ID!
  name: String!
  profileId: String
  updatedAt: DateTime!
}

type CommentCountAggregate {
  _all: Int!
  content: Int!
  createdAt: Int!
  email: Int!
  id: Int!
  name: Int!
  profileId: Int!
  updatedAt: Int!
}

input CommentCreateManyByInput {
  content: String!
  createdAt: DateTime
  email: String!
  id: String
  name: String!
  updatedAt: DateTime
}

input CommentCreateManyByInputEnvelope {
  data: [CommentCreateManyByInput!]!
  skipDuplicates: Boolean
}

input CommentCreateNestedManyWithoutByInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutByInput!]
  create: [CommentCreateWithoutByInput!]
  createMany: CommentCreateManyByInputEnvelope
}

input CommentCreateOrConnectWithoutByInput {
  create: CommentCreateWithoutByInput!
  where: CommentWhereUniqueInput!
}

input CommentCreateWithoutByInput {
  content: String!
  createdAt: DateTime
  email: String!
  id: String
  name: String!
  updatedAt: DateTime
}

input CommentListRelationFilter {
  every: CommentWhereInput
  none: CommentWhereInput
  some: CommentWhereInput
}

type CommentMaxAggregate {
  content: String
  createdAt: DateTime
  email: String
  id: String
  name: String
  profileId: String
  updatedAt: DateTime
}

type CommentMinAggregate {
  content: String
  createdAt: DateTime
  email: String
  id: String
  name: String
  profileId: String
  updatedAt: DateTime
}

input CommentScalarWhereInput {
  AND: [CommentScalarWhereInput!]
  NOT: [CommentScalarWhereInput!]
  OR: [CommentScalarWhereInput!]
  content: StringFilter
  createdAt: DateTimeFilter
  email: StringFilter
  id: StringFilter
  name: StringFilter
  profileId: StringNullableFilter
  updatedAt: DateTimeFilter
}

input CommentUpdateManyMutationInput {
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUpdateManyWithWhereWithoutByInput {
  data: CommentUpdateManyMutationInput!
  where: CommentScalarWhereInput!
}

input CommentUpdateManyWithoutByInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutByInput!]
  create: [CommentCreateWithoutByInput!]
  createMany: CommentCreateManyByInputEnvelope
  delete: [CommentWhereUniqueInput!]
  deleteMany: [CommentScalarWhereInput!]
  disconnect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutByInput!]
  updateMany: [CommentUpdateManyWithWhereWithoutByInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutByInput!]
}

input CommentUpdateWithWhereUniqueWithoutByInput {
  data: CommentUpdateWithoutByInput!
  where: CommentWhereUniqueInput!
}

input CommentUpdateWithoutByInput {
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUpsertWithWhereUniqueWithoutByInput {
  create: CommentCreateWithoutByInput!
  update: CommentUpdateWithoutByInput!
  where: CommentWhereUniqueInput!
}

input CommentWhereInput {
  AND: [CommentWhereInput!]
  NOT: [CommentWhereInput!]
  OR: [CommentWhereInput!]
  by: ProfileRelationFilter
  content: StringFilter
  createdAt: DateTimeFilter
  email: StringFilter
  id: StringFilter
  name: StringFilter
  profileId: StringNullableFilter
  updatedAt: DateTimeFilter
}

input CommentWhereUniqueInput {
  id: String
  profileId: String
}

"""内容类型"""
enum ContentType {
  ARTICLE
  BRAND
  LOOKBOOK
  PRODUCT
}

"""支持运送的国家"""
type Country {
  code: String!
  createdAt: DateTime!
  enabled: Boolean!
  id: ID!
  languageCode: LanguageCode!
  name: String!
  translations: [CountryTranslation!]
  updatedAt: DateTime!
}

type CountryCountAggregate {
  _all: Int!
  code: Int!
  createdAt: Int!
  enabled: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  updatedAt: Int!
}

type CountryMaxAggregate {
  code: String
  createdAt: DateTime
  enabled: Boolean
  id: String
  languageCode: LanguageCode
  name: String
  updatedAt: DateTime
}

type CountryMinAggregate {
  code: String
  createdAt: DateTime
  enabled: Boolean
  id: String
  languageCode: LanguageCode
  name: String
  updatedAt: DateTime
}

type CountryTranslation {
  country: Country
  countryId: String
  createdAt: DateTime!
  id: ID!
  languageCode: LanguageCode!
  name: String!
  updatedAt: DateTime!
}

type CountryTranslationCountAggregate {
  _all: Int!
  countryId: Int!
  id: Int!
  languageCode: Int!
  name: Int!
}

type CountryTranslationMaxAggregate {
  countryId: String
  id: String
  languageCode: LanguageCode
  name: String
}

type CountryTranslationMinAggregate {
  countryId: String
  id: String
  languageCode: LanguageCode
  name: String
}

"""货币"""
enum CurrencyCode {
  CNY
  EUR
  GBP
  HKD
  USD
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input EnumAuthenticationStrategyFieldUpdateOperationsInput {
  set: AuthenticationStrategy
}

input EnumAuthenticationStrategyFilter {
  equals: AuthenticationStrategy
  in: [AuthenticationStrategy!]
  not: NestedEnumAuthenticationStrategyFilter
  notIn: [AuthenticationStrategy!]
}

input EnumContentTypeFieldUpdateOperationsInput {
  set: ContentType
}

input EnumContentTypeFilter {
  equals: ContentType
  in: [ContentType!]
  not: NestedEnumContentTypeFilter
  notIn: [ContentType!]
}

input EnumCurrencyCodeFieldUpdateOperationsInput {
  set: CurrencyCode
}

input EnumCurrencyCodeFilter {
  equals: CurrencyCode
  in: [CurrencyCode!]
  not: NestedEnumCurrencyCodeFilter
  notIn: [CurrencyCode!]
}

input EnumFileTypeFieldUpdateOperationsInput {
  set: FileType
}

input EnumFileTypeFilter {
  equals: FileType
  in: [FileType!]
  not: NestedEnumFileTypeFilter
  notIn: [FileType!]
}

input EnumLanguageCodeFieldUpdateOperationsInput {
  set: LanguageCode
}

input EnumLanguageCodeFilter {
  equals: LanguageCode
  in: [LanguageCode!]
  not: NestedEnumLanguageCodeFilter
  notIn: [LanguageCode!]
}

input EnumOrderStatusFieldUpdateOperationsInput {
  set: OrderStatus
}

input EnumOrderStatusFilter {
  equals: OrderStatus
  in: [OrderStatus!]
  not: NestedEnumOrderStatusFilter
  notIn: [OrderStatus!]
}

input EnumPaymentMethodFieldUpdateOperationsInput {
  set: PaymentMethod
}

input EnumPaymentMethodFilter {
  equals: PaymentMethod
  in: [PaymentMethod!]
  not: NestedEnumPaymentMethodFilter
  notIn: [PaymentMethod!]
}

input EnumPermissionNullableListFilter {
  equals: [Permission!]
  has: Permission
  hasEvery: [Permission!]
  hasSome: [Permission!]
  isEmpty: Boolean
}

input EnumRoleStatusNullableFilter {
  equals: RoleStatus
  in: [RoleStatus!]
  not: NestedEnumRoleStatusNullableFilter
  notIn: [RoleStatus!]
}

"""文件"""
type File {
  OrderItem: [OrderItem!]
  Product: Product
  ProductVariant: ProductVariant
  ProductVariantStyle: [ProductVariantStyle!]
  Review: Review
  alt: String
  autoPlay: Boolean
  caption: String
  createdAt: DateTime!
  customFields: JSON
  format: FileType!
  height: Int
  id: ID!
  mimeType: String!
  name: String!
  productId: String
  productVariantId: String
  profile: Profile
  profileAvatar: Profile
  profileAvatarId: String
  profileId: String
  reviewId: String
  size: String!
  source: Source
  sourceId: String
  title: String
  updatedAt: DateTime!
  url: String!
  width: Int
}

type FileAvgAggregate {
  height: Float
  size: Float
  width: Float
}

type FileCountAggregate {
  _all: Int!
  alt: Int!
  autoPlay: Int!
  caption: Int!
  createdAt: Int!
  customFields: Int!
  format: Int!
  height: Int!
  id: Int!
  mimeType: Int!
  name: Int!
  productId: Int!
  productVariantId: Int!
  profileAvatarId: Int!
  profileId: Int!
  reviewId: Int!
  size: Int!
  sourceId: Int!
  title: Int!
  updatedAt: Int!
  url: Int!
  width: Int!
}

input FileCreateManyProductInput {
  alt: String
  autoPlay: Boolean
  caption: String
  createdAt: DateTime
  customFields: JSON
  format: FileType!
  height: Int
  id: String
  mimeType: String!
  name: String!
  productVariantId: String
  profileAvatarId: String
  profileId: String
  reviewId: String
  size: Int
  sourceId: String
  title: String
  updatedAt: DateTime
  url: String!
  width: Int
}

input FileCreateManyProductInputEnvelope {
  data: [FileCreateManyProductInput!]!
  skipDuplicates: Boolean
}

input FileCreateManyProductVariantInput {
  alt: String
  autoPlay: Boolean
  caption: String
  createdAt: DateTime
  customFields: JSON
  format: FileType!
  height: Int
  id: String
  mimeType: String!
  name: String!
  productId: String
  profileAvatarId: String
  profileId: String
  reviewId: String
  size: Int
  sourceId: String
  title: String
  updatedAt: DateTime
  url: String!
  width: Int
}

input FileCreateManyProductVariantInputEnvelope {
  data: [FileCreateManyProductVariantInput!]!
  skipDuplicates: Boolean
}

input FileCreateManyProfileInput {
  alt: String
  autoPlay: Boolean
  caption: String
  createdAt: DateTime
  customFields: JSON
  format: FileType!
  height: Int
  id: String
  mimeType: String!
  name: String!
  productId: String
  productVariantId: String
  profileAvatarId: String
  reviewId: String
  size: Int
  sourceId: String
  title: String
  updatedAt: DateTime
  url: String!
  width: Int
}

input FileCreateManyProfileInputEnvelope {
  data: [FileCreateManyProfileInput!]!
  skipDuplicates: Boolean
}

input FileCreateManyReviewInput {
  alt: String
  autoPlay: Boolean
  caption: String
  createdAt: DateTime
  customFields: JSON
  format: FileType!
  height: Int
  id: String
  mimeType: String!
  name: String!
  productId: String
  productVariantId: String
  profileAvatarId: String
  profileId: String
  size: Int
  sourceId: String
  title: String
  updatedAt: DateTime
  url: String!
  width: Int
}

input FileCreateManyReviewInputEnvelope {
  data: [FileCreateManyReviewInput!]!
  skipDuplicates: Boolean
}

input FileCreateNestedManyWithoutProductInput {
  connect: [FileWhereUniqueInput!]
  connectOrCreate: [FileCreateOrConnectWithoutProductInput!]
  create: [FileCreateWithoutProductInput!]
  createMany: FileCreateManyProductInputEnvelope
}

input FileCreateNestedManyWithoutProductVariantInput {
  connect: [FileWhereUniqueInput!]
  connectOrCreate: [FileCreateOrConnectWithoutProductVariantInput!]
  create: [FileCreateWithoutProductVariantInput!]
  createMany: FileCreateManyProductVariantInputEnvelope
}

input FileCreateNestedManyWithoutProfileInput {
  connect: [FileWhereUniqueInput!]
  connectOrCreate: [FileCreateOrConnectWithoutProfileInput!]
  create: [FileCreateWithoutProfileInput!]
  createMany: FileCreateManyProfileInputEnvelope
}

input FileCreateNestedManyWithoutReviewInput {
  connect: [FileWhereUniqueInput!]
  connectOrCreate: [FileCreateOrConnectWithoutReviewInput!]
  create: [FileCreateWithoutReviewInput!]
  createMany: FileCreateManyReviewInputEnvelope
}

input FileCreateNestedOneWithoutProductVariantStyleInput {
  connect: FileWhereUniqueInput
  connectOrCreate: FileCreateOrConnectWithoutProductVariantStyleInput
  create: FileCreateWithoutProductVariantStyleInput
}

input FileCreateNestedOneWithoutProfileAvatarInput {
  connect: FileWhereUniqueInput
  connectOrCreate: FileCreateOrConnectWithoutProfileAvatarInput
  create: FileCreateWithoutProfileAvatarInput
}

input FileCreateOrConnectWithoutProductInput {
  create: FileCreateWithoutProductInput!
  where: FileWhereUniqueInput!
}

input FileCreateOrConnectWithoutProductVariantInput {
  create: FileCreateWithoutProductVariantInput!
  where: FileWhereUniqueInput!
}

input FileCreateOrConnectWithoutProductVariantStyleInput {
  create: FileCreateWithoutProductVariantStyleInput!
  where: FileWhereUniqueInput!
}

input FileCreateOrConnectWithoutProfileAvatarInput {
  create: FileCreateWithoutProfileAvatarInput!
  where: FileWhereUniqueInput!
}

input FileCreateOrConnectWithoutProfileInput {
  create: FileCreateWithoutProfileInput!
  where: FileWhereUniqueInput!
}

input FileCreateOrConnectWithoutReviewInput {
  create: FileCreateWithoutReviewInput!
  where: FileWhereUniqueInput!
}

input FileCreateWithoutProductInput {
  OrderItem: OrderItemCreateNestedManyWithoutImageInput
  ProductVariant: ProductVariantCreateNestedOneWithoutAssetsInput
  ProductVariantStyle: ProductVariantStyleCreateNestedManyWithoutAssetInput
  Review: ReviewCreateNestedOneWithoutUploadsInput
  alt: String
  autoPlay: Boolean
  caption: String
  createdAt: DateTime
  customFields: JSON
  format: FileType!
  height: Int
  id: String
  mimeType: String!
  name: String!
  profile: ProfileCreateNestedOneWithoutUploadsInput
  profileAvatar: ProfileCreateNestedOneWithoutAvatarInput
  size: Int
  source: SourceCreateNestedOneWithoutFileInput
  title: String
  updatedAt: DateTime
  url: String!
  width: Int
}

input FileCreateWithoutProductVariantInput {
  OrderItem: OrderItemCreateNestedManyWithoutImageInput
  Product: ProductCreateNestedOneWithoutAssetsInput
  ProductVariantStyle: ProductVariantStyleCreateNestedManyWithoutAssetInput
  Review: ReviewCreateNestedOneWithoutUploadsInput
  alt: String
  autoPlay: Boolean
  caption: String
  createdAt: DateTime
  customFields: JSON
  format: FileType!
  height: Int
  id: String
  mimeType: String!
  name: String!
  profile: ProfileCreateNestedOneWithoutUploadsInput
  profileAvatar: ProfileCreateNestedOneWithoutAvatarInput
  size: Int
  source: SourceCreateNestedOneWithoutFileInput
  title: String
  updatedAt: DateTime
  url: String!
  width: Int
}

input FileCreateWithoutProductVariantStyleInput {
  OrderItem: OrderItemCreateNestedManyWithoutImageInput
  Product: ProductCreateNestedOneWithoutAssetsInput
  ProductVariant: ProductVariantCreateNestedOneWithoutAssetsInput
  Review: ReviewCreateNestedOneWithoutUploadsInput
  alt: String
  autoPlay: Boolean
  caption: String
  createdAt: DateTime
  customFields: JSON
  format: FileType!
  height: Int
  id: String
  mimeType: String!
  name: String!
  profile: ProfileCreateNestedOneWithoutUploadsInput
  profileAvatar: ProfileCreateNestedOneWithoutAvatarInput
  size: Int
  source: SourceCreateNestedOneWithoutFileInput
  title: String
  updatedAt: DateTime
  url: String!
  width: Int
}

input FileCreateWithoutProfileAvatarInput {
  OrderItem: OrderItemCreateNestedManyWithoutImageInput
  Product: ProductCreateNestedOneWithoutAssetsInput
  ProductVariant: ProductVariantCreateNestedOneWithoutAssetsInput
  ProductVariantStyle: ProductVariantStyleCreateNestedManyWithoutAssetInput
  Review: ReviewCreateNestedOneWithoutUploadsInput
  alt: String
  autoPlay: Boolean
  caption: String
  createdAt: DateTime
  customFields: JSON
  format: FileType!
  height: Int
  id: String
  mimeType: String!
  name: String!
  profile: ProfileCreateNestedOneWithoutUploadsInput
  size: Int
  source: SourceCreateNestedOneWithoutFileInput
  title: String
  updatedAt: DateTime
  url: String!
  width: Int
}

input FileCreateWithoutProfileInput {
  OrderItem: OrderItemCreateNestedManyWithoutImageInput
  Product: ProductCreateNestedOneWithoutAssetsInput
  ProductVariant: ProductVariantCreateNestedOneWithoutAssetsInput
  ProductVariantStyle: ProductVariantStyleCreateNestedManyWithoutAssetInput
  Review: ReviewCreateNestedOneWithoutUploadsInput
  alt: String
  autoPlay: Boolean
  caption: String
  createdAt: DateTime
  customFields: JSON
  format: FileType!
  height: Int
  id: String
  mimeType: String!
  name: String!
  profileAvatar: ProfileCreateNestedOneWithoutAvatarInput
  size: Int
  source: SourceCreateNestedOneWithoutFileInput
  title: String
  updatedAt: DateTime
  url: String!
  width: Int
}

input FileCreateWithoutReviewInput {
  OrderItem: OrderItemCreateNestedManyWithoutImageInput
  Product: ProductCreateNestedOneWithoutAssetsInput
  ProductVariant: ProductVariantCreateNestedOneWithoutAssetsInput
  ProductVariantStyle: ProductVariantStyleCreateNestedManyWithoutAssetInput
  alt: String
  autoPlay: Boolean
  caption: String
  createdAt: DateTime
  customFields: JSON
  format: FileType!
  height: Int
  id: String
  mimeType: String!
  name: String!
  profile: ProfileCreateNestedOneWithoutUploadsInput
  profileAvatar: ProfileCreateNestedOneWithoutAvatarInput
  size: Int
  source: SourceCreateNestedOneWithoutFileInput
  title: String
  updatedAt: DateTime
  url: String!
  width: Int
}

input FileListRelationFilter {
  every: FileWhereInput
  none: FileWhereInput
  some: FileWhereInput
}

type FileMaxAggregate {
  alt: String
  autoPlay: Boolean
  caption: String
  createdAt: DateTime
  format: FileType
  height: Int
  id: String
  mimeType: String
  name: String
  productId: String
  productVariantId: String
  profileAvatarId: String
  profileId: String
  reviewId: String
  size: Int
  sourceId: String
  title: String
  updatedAt: DateTime
  url: String
  width: Int
}

type FileMinAggregate {
  alt: String
  autoPlay: Boolean
  caption: String
  createdAt: DateTime
  format: FileType
  height: Int
  id: String
  mimeType: String
  name: String
  productId: String
  productVariantId: String
  profileAvatarId: String
  profileId: String
  reviewId: String
  size: Int
  sourceId: String
  title: String
  updatedAt: DateTime
  url: String
  width: Int
}

input FileRelationFilter {
  is: FileWhereInput
  isNot: FileWhereInput
}

input FileScalarWhereInput {
  AND: [FileScalarWhereInput!]
  NOT: [FileScalarWhereInput!]
  OR: [FileScalarWhereInput!]
  alt: StringNullableFilter
  autoPlay: BoolNullableFilter
  caption: StringNullableFilter
  createdAt: DateTimeFilter
  customFields: JsonNullableFilter
  format: EnumFileTypeFilter
  height: IntNullableFilter
  id: StringFilter
  mimeType: StringFilter
  name: StringFilter
  productId: StringNullableFilter
  productVariantId: StringNullableFilter
  profileAvatarId: StringNullableFilter
  profileId: StringNullableFilter
  reviewId: StringNullableFilter
  size: IntNullableFilter
  sourceId: StringNullableFilter
  title: StringNullableFilter
  updatedAt: DateTimeFilter
  url: StringFilter
  width: IntNullableFilter
}

type FileSumAggregate {
  height: Int
  size: Int
  width: Int
}

"""文件类型"""
enum FileType {
  BINARY
  IMAGE
  SOUND
  VIDEO
}

input FileUpdateManyMutationInput {
  alt: NullableStringFieldUpdateOperationsInput
  autoPlay: NullableBoolFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  customFields: JSON
  format: EnumFileTypeFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mimeType: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  size: NullableIntFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input FileUpdateManyWithWhereWithoutProductInput {
  data: FileUpdateManyMutationInput!
  where: FileScalarWhereInput!
}

input FileUpdateManyWithWhereWithoutProductVariantInput {
  data: FileUpdateManyMutationInput!
  where: FileScalarWhereInput!
}

input FileUpdateManyWithWhereWithoutProfileInput {
  data: FileUpdateManyMutationInput!
  where: FileScalarWhereInput!
}

input FileUpdateManyWithWhereWithoutReviewInput {
  data: FileUpdateManyMutationInput!
  where: FileScalarWhereInput!
}

input FileUpdateManyWithoutProductInput {
  connect: [FileWhereUniqueInput!]
  connectOrCreate: [FileCreateOrConnectWithoutProductInput!]
  create: [FileCreateWithoutProductInput!]
  createMany: FileCreateManyProductInputEnvelope
  delete: [FileWhereUniqueInput!]
  deleteMany: [FileScalarWhereInput!]
  disconnect: [FileWhereUniqueInput!]
  set: [FileWhereUniqueInput!]
  update: [FileUpdateWithWhereUniqueWithoutProductInput!]
  updateMany: [FileUpdateManyWithWhereWithoutProductInput!]
  upsert: [FileUpsertWithWhereUniqueWithoutProductInput!]
}

input FileUpdateManyWithoutProductVariantInput {
  connect: [FileWhereUniqueInput!]
  connectOrCreate: [FileCreateOrConnectWithoutProductVariantInput!]
  create: [FileCreateWithoutProductVariantInput!]
  createMany: FileCreateManyProductVariantInputEnvelope
  delete: [FileWhereUniqueInput!]
  deleteMany: [FileScalarWhereInput!]
  disconnect: [FileWhereUniqueInput!]
  set: [FileWhereUniqueInput!]
  update: [FileUpdateWithWhereUniqueWithoutProductVariantInput!]
  updateMany: [FileUpdateManyWithWhereWithoutProductVariantInput!]
  upsert: [FileUpsertWithWhereUniqueWithoutProductVariantInput!]
}

input FileUpdateManyWithoutProfileInput {
  connect: [FileWhereUniqueInput!]
  connectOrCreate: [FileCreateOrConnectWithoutProfileInput!]
  create: [FileCreateWithoutProfileInput!]
  createMany: FileCreateManyProfileInputEnvelope
  delete: [FileWhereUniqueInput!]
  deleteMany: [FileScalarWhereInput!]
  disconnect: [FileWhereUniqueInput!]
  set: [FileWhereUniqueInput!]
  update: [FileUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [FileUpdateManyWithWhereWithoutProfileInput!]
  upsert: [FileUpsertWithWhereUniqueWithoutProfileInput!]
}

input FileUpdateManyWithoutReviewInput {
  connect: [FileWhereUniqueInput!]
  connectOrCreate: [FileCreateOrConnectWithoutReviewInput!]
  create: [FileCreateWithoutReviewInput!]
  createMany: FileCreateManyReviewInputEnvelope
  delete: [FileWhereUniqueInput!]
  deleteMany: [FileScalarWhereInput!]
  disconnect: [FileWhereUniqueInput!]
  set: [FileWhereUniqueInput!]
  update: [FileUpdateWithWhereUniqueWithoutReviewInput!]
  updateMany: [FileUpdateManyWithWhereWithoutReviewInput!]
  upsert: [FileUpsertWithWhereUniqueWithoutReviewInput!]
}

input FileUpdateOneRequiredWithoutProductVariantStyleInput {
  connect: FileWhereUniqueInput
  connectOrCreate: FileCreateOrConnectWithoutProductVariantStyleInput
  create: FileCreateWithoutProductVariantStyleInput
  update: FileUpdateWithoutProductVariantStyleInput
  upsert: FileUpsertWithoutProductVariantStyleInput
}

input FileUpdateOneWithoutProfileAvatarInput {
  connect: FileWhereUniqueInput
  connectOrCreate: FileCreateOrConnectWithoutProfileAvatarInput
  create: FileCreateWithoutProfileAvatarInput
  delete: Boolean
  disconnect: Boolean
  update: FileUpdateWithoutProfileAvatarInput
  upsert: FileUpsertWithoutProfileAvatarInput
}

input FileUpdateWithWhereUniqueWithoutProductInput {
  data: FileUpdateWithoutProductInput!
  where: FileWhereUniqueInput!
}

input FileUpdateWithWhereUniqueWithoutProductVariantInput {
  data: FileUpdateWithoutProductVariantInput!
  where: FileWhereUniqueInput!
}

input FileUpdateWithWhereUniqueWithoutProfileInput {
  data: FileUpdateWithoutProfileInput!
  where: FileWhereUniqueInput!
}

input FileUpdateWithWhereUniqueWithoutReviewInput {
  data: FileUpdateWithoutReviewInput!
  where: FileWhereUniqueInput!
}

input FileUpdateWithoutProductInput {
  OrderItem: OrderItemUpdateManyWithoutImageInput
  ProductVariant: ProductVariantUpdateOneWithoutAssetsInput
  ProductVariantStyle: ProductVariantStyleUpdateManyWithoutAssetInput
  Review: ReviewUpdateOneWithoutUploadsInput
  alt: NullableStringFieldUpdateOperationsInput
  autoPlay: NullableBoolFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  customFields: JSON
  format: EnumFileTypeFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mimeType: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profile: ProfileUpdateOneWithoutUploadsInput
  profileAvatar: ProfileUpdateOneWithoutAvatarInput
  size: NullableIntFieldUpdateOperationsInput
  source: SourceUpdateOneWithoutFileInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input FileUpdateWithoutProductVariantInput {
  OrderItem: OrderItemUpdateManyWithoutImageInput
  Product: ProductUpdateOneWithoutAssetsInput
  ProductVariantStyle: ProductVariantStyleUpdateManyWithoutAssetInput
  Review: ReviewUpdateOneWithoutUploadsInput
  alt: NullableStringFieldUpdateOperationsInput
  autoPlay: NullableBoolFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  customFields: JSON
  format: EnumFileTypeFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mimeType: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profile: ProfileUpdateOneWithoutUploadsInput
  profileAvatar: ProfileUpdateOneWithoutAvatarInput
  size: NullableIntFieldUpdateOperationsInput
  source: SourceUpdateOneWithoutFileInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input FileUpdateWithoutProductVariantStyleInput {
  OrderItem: OrderItemUpdateManyWithoutImageInput
  Product: ProductUpdateOneWithoutAssetsInput
  ProductVariant: ProductVariantUpdateOneWithoutAssetsInput
  Review: ReviewUpdateOneWithoutUploadsInput
  alt: NullableStringFieldUpdateOperationsInput
  autoPlay: NullableBoolFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  customFields: JSON
  format: EnumFileTypeFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mimeType: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profile: ProfileUpdateOneWithoutUploadsInput
  profileAvatar: ProfileUpdateOneWithoutAvatarInput
  size: NullableIntFieldUpdateOperationsInput
  source: SourceUpdateOneWithoutFileInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input FileUpdateWithoutProfileAvatarInput {
  OrderItem: OrderItemUpdateManyWithoutImageInput
  Product: ProductUpdateOneWithoutAssetsInput
  ProductVariant: ProductVariantUpdateOneWithoutAssetsInput
  ProductVariantStyle: ProductVariantStyleUpdateManyWithoutAssetInput
  Review: ReviewUpdateOneWithoutUploadsInput
  alt: NullableStringFieldUpdateOperationsInput
  autoPlay: NullableBoolFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  customFields: JSON
  format: EnumFileTypeFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mimeType: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profile: ProfileUpdateOneWithoutUploadsInput
  size: NullableIntFieldUpdateOperationsInput
  source: SourceUpdateOneWithoutFileInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input FileUpdateWithoutProfileInput {
  OrderItem: OrderItemUpdateManyWithoutImageInput
  Product: ProductUpdateOneWithoutAssetsInput
  ProductVariant: ProductVariantUpdateOneWithoutAssetsInput
  ProductVariantStyle: ProductVariantStyleUpdateManyWithoutAssetInput
  Review: ReviewUpdateOneWithoutUploadsInput
  alt: NullableStringFieldUpdateOperationsInput
  autoPlay: NullableBoolFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  customFields: JSON
  format: EnumFileTypeFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mimeType: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profileAvatar: ProfileUpdateOneWithoutAvatarInput
  size: NullableIntFieldUpdateOperationsInput
  source: SourceUpdateOneWithoutFileInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input FileUpdateWithoutReviewInput {
  OrderItem: OrderItemUpdateManyWithoutImageInput
  Product: ProductUpdateOneWithoutAssetsInput
  ProductVariant: ProductVariantUpdateOneWithoutAssetsInput
  ProductVariantStyle: ProductVariantStyleUpdateManyWithoutAssetInput
  alt: NullableStringFieldUpdateOperationsInput
  autoPlay: NullableBoolFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  customFields: JSON
  format: EnumFileTypeFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mimeType: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profile: ProfileUpdateOneWithoutUploadsInput
  profileAvatar: ProfileUpdateOneWithoutAvatarInput
  size: NullableIntFieldUpdateOperationsInput
  source: SourceUpdateOneWithoutFileInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input FileUpsertWithWhereUniqueWithoutProductInput {
  create: FileCreateWithoutProductInput!
  update: FileUpdateWithoutProductInput!
  where: FileWhereUniqueInput!
}

input FileUpsertWithWhereUniqueWithoutProductVariantInput {
  create: FileCreateWithoutProductVariantInput!
  update: FileUpdateWithoutProductVariantInput!
  where: FileWhereUniqueInput!
}

input FileUpsertWithWhereUniqueWithoutProfileInput {
  create: FileCreateWithoutProfileInput!
  update: FileUpdateWithoutProfileInput!
  where: FileWhereUniqueInput!
}

input FileUpsertWithWhereUniqueWithoutReviewInput {
  create: FileCreateWithoutReviewInput!
  update: FileUpdateWithoutReviewInput!
  where: FileWhereUniqueInput!
}

input FileUpsertWithoutProductVariantStyleInput {
  create: FileCreateWithoutProductVariantStyleInput!
  update: FileUpdateWithoutProductVariantStyleInput!
}

input FileUpsertWithoutProfileAvatarInput {
  create: FileCreateWithoutProfileAvatarInput!
  update: FileUpdateWithoutProfileAvatarInput!
}

input FileWhereInput {
  AND: [FileWhereInput!]
  NOT: [FileWhereInput!]
  OR: [FileWhereInput!]
  OrderItem: OrderItemListRelationFilter
  Product: ProductRelationFilter
  ProductVariant: ProductVariantRelationFilter
  ProductVariantStyle: ProductVariantStyleListRelationFilter
  Review: ReviewRelationFilter
  alt: StringNullableFilter
  autoPlay: BoolNullableFilter
  caption: StringNullableFilter
  createdAt: DateTimeFilter
  customFields: JsonNullableFilter
  format: EnumFileTypeFilter
  height: IntNullableFilter
  id: StringFilter
  mimeType: StringFilter
  name: StringFilter
  productId: StringNullableFilter
  productVariantId: StringNullableFilter
  profile: ProfileRelationFilter
  profileAvatar: ProfileRelationFilter
  profileAvatarId: StringNullableFilter
  profileId: StringNullableFilter
  reviewId: StringNullableFilter
  size: IntNullableFilter
  source: SourceRelationFilter
  sourceId: StringNullableFilter
  title: StringNullableFilter
  updatedAt: DateTimeFilter
  url: StringFilter
  width: IntNullableFilter
}

input FileWhereUniqueInput {
  id: String
  sourceId: String
  url: String
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

input JsonNullableFilter {
  equals: JSON
  not: JSON
}

"""语言"""
enum LanguageCode {
  de
  en
  zh_Hans
  zh_Hant
}

"""喜欢收藏"""
type Like {
  by: Profile!
  createdAt: DateTime!
  id: ID!
  product: Product
  productId: String
  profileId: String!
  type: ContentType!
  updatedAt: DateTime!
}

type LikeCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  productId: Int!
  profileId: Int!
  type: Int!
  updatedAt: Int!
}

input LikeCreateManyByInput {
  createdAt: DateTime
  id: String
  productId: String
  type: ContentType!
  updatedAt: DateTime
}

input LikeCreateManyByInputEnvelope {
  data: [LikeCreateManyByInput!]!
  skipDuplicates: Boolean
}

input LikeCreateManyProductInput {
  createdAt: DateTime
  id: String
  profileId: String!
  type: ContentType!
  updatedAt: DateTime
}

input LikeCreateManyProductInputEnvelope {
  data: [LikeCreateManyProductInput!]!
  skipDuplicates: Boolean
}

input LikeCreateNestedManyWithoutByInput {
  connect: [LikeWhereUniqueInput!]
  connectOrCreate: [LikeCreateOrConnectWithoutByInput!]
  create: [LikeCreateWithoutByInput!]
  createMany: LikeCreateManyByInputEnvelope
}

input LikeCreateNestedManyWithoutProductInput {
  connect: [LikeWhereUniqueInput!]
  connectOrCreate: [LikeCreateOrConnectWithoutProductInput!]
  create: [LikeCreateWithoutProductInput!]
  createMany: LikeCreateManyProductInputEnvelope
}

input LikeCreateOrConnectWithoutByInput {
  create: LikeCreateWithoutByInput!
  where: LikeWhereUniqueInput!
}

input LikeCreateOrConnectWithoutProductInput {
  create: LikeCreateWithoutProductInput!
  where: LikeWhereUniqueInput!
}

input LikeCreateWithoutByInput {
  createdAt: DateTime
  id: String
  product: ProductCreateNestedOneWithoutLikesInput
  type: ContentType!
  updatedAt: DateTime
}

input LikeCreateWithoutProductInput {
  by: ProfileCreateNestedOneWithoutLikesInput!
  createdAt: DateTime
  id: String
  type: ContentType!
  updatedAt: DateTime
}

input LikeListRelationFilter {
  every: LikeWhereInput
  none: LikeWhereInput
  some: LikeWhereInput
}

type LikeMaxAggregate {
  createdAt: DateTime
  id: String
  productId: String
  profileId: String
  type: ContentType
  updatedAt: DateTime
}

type LikeMinAggregate {
  createdAt: DateTime
  id: String
  productId: String
  profileId: String
  type: ContentType
  updatedAt: DateTime
}

input LikeScalarWhereInput {
  AND: [LikeScalarWhereInput!]
  NOT: [LikeScalarWhereInput!]
  OR: [LikeScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  productId: StringNullableFilter
  profileId: StringFilter
  type: EnumContentTypeFilter
  updatedAt: DateTimeFilter
}

input LikeUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  type: EnumContentTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LikeUpdateManyWithWhereWithoutByInput {
  data: LikeUpdateManyMutationInput!
  where: LikeScalarWhereInput!
}

input LikeUpdateManyWithWhereWithoutProductInput {
  data: LikeUpdateManyMutationInput!
  where: LikeScalarWhereInput!
}

input LikeUpdateManyWithoutByInput {
  connect: [LikeWhereUniqueInput!]
  connectOrCreate: [LikeCreateOrConnectWithoutByInput!]
  create: [LikeCreateWithoutByInput!]
  createMany: LikeCreateManyByInputEnvelope
  delete: [LikeWhereUniqueInput!]
  deleteMany: [LikeScalarWhereInput!]
  disconnect: [LikeWhereUniqueInput!]
  set: [LikeWhereUniqueInput!]
  update: [LikeUpdateWithWhereUniqueWithoutByInput!]
  updateMany: [LikeUpdateManyWithWhereWithoutByInput!]
  upsert: [LikeUpsertWithWhereUniqueWithoutByInput!]
}

input LikeUpdateManyWithoutProductInput {
  connect: [LikeWhereUniqueInput!]
  connectOrCreate: [LikeCreateOrConnectWithoutProductInput!]
  create: [LikeCreateWithoutProductInput!]
  createMany: LikeCreateManyProductInputEnvelope
  delete: [LikeWhereUniqueInput!]
  deleteMany: [LikeScalarWhereInput!]
  disconnect: [LikeWhereUniqueInput!]
  set: [LikeWhereUniqueInput!]
  update: [LikeUpdateWithWhereUniqueWithoutProductInput!]
  updateMany: [LikeUpdateManyWithWhereWithoutProductInput!]
  upsert: [LikeUpsertWithWhereUniqueWithoutProductInput!]
}

input LikeUpdateWithWhereUniqueWithoutByInput {
  data: LikeUpdateWithoutByInput!
  where: LikeWhereUniqueInput!
}

input LikeUpdateWithWhereUniqueWithoutProductInput {
  data: LikeUpdateWithoutProductInput!
  where: LikeWhereUniqueInput!
}

input LikeUpdateWithoutByInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutLikesInput
  type: EnumContentTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LikeUpdateWithoutProductInput {
  by: ProfileUpdateOneRequiredWithoutLikesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  type: EnumContentTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LikeUpsertWithWhereUniqueWithoutByInput {
  create: LikeCreateWithoutByInput!
  update: LikeUpdateWithoutByInput!
  where: LikeWhereUniqueInput!
}

input LikeUpsertWithWhereUniqueWithoutProductInput {
  create: LikeCreateWithoutProductInput!
  update: LikeUpdateWithoutProductInput!
  where: LikeWhereUniqueInput!
}

input LikeWhereInput {
  AND: [LikeWhereInput!]
  NOT: [LikeWhereInput!]
  OR: [LikeWhereInput!]
  by: ProfileRelationFilter
  createdAt: DateTimeFilter
  id: StringFilter
  product: ProductRelationFilter
  productId: StringNullableFilter
  profileId: StringFilter
  type: EnumContentTypeFilter
  updatedAt: DateTimeFilter
}

input LikeWhereUniqueInput {
  id: String
  productId: String
  profileId: String
}

type Mutation {
  """后台批量发布或批量取消发布商品"""
  bulkToggleDraft(draft: Boolean!, where: ProductWhereInput!): Product

  """创建商品"""
  createProduct(data: ProductCreateInput!): Product!

  """创建商品分类"""
  createProductType(data: ProductTypeCreateInput!): ProductType!

  """根据 SKU 删除指定商品"""
  deleteProduct(sku: String!): Product

  """根据 SKU 发布或取消单个商品"""
  toggleDraft(sku: String!): Product!

  """根据 SKU 修改指定商品信息"""
  updateProduct(data: ProductUpdateInput!, sku: String!): Product!
}

input NestedBigIntFilter {
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedBigIntFilter
  notIn: [String!]
}

input NestedBigIntNullableFilter {
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedBigIntNullableFilter
  notIn: [String!]
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedEnumAuthenticationStrategyFilter {
  equals: AuthenticationStrategy
  in: [AuthenticationStrategy!]
  not: NestedEnumAuthenticationStrategyFilter
  notIn: [AuthenticationStrategy!]
}

input NestedEnumContentTypeFilter {
  equals: ContentType
  in: [ContentType!]
  not: NestedEnumContentTypeFilter
  notIn: [ContentType!]
}

input NestedEnumCurrencyCodeFilter {
  equals: CurrencyCode
  in: [CurrencyCode!]
  not: NestedEnumCurrencyCodeFilter
  notIn: [CurrencyCode!]
}

input NestedEnumFileTypeFilter {
  equals: FileType
  in: [FileType!]
  not: NestedEnumFileTypeFilter
  notIn: [FileType!]
}

input NestedEnumLanguageCodeFilter {
  equals: LanguageCode
  in: [LanguageCode!]
  not: NestedEnumLanguageCodeFilter
  notIn: [LanguageCode!]
}

input NestedEnumOrderStatusFilter {
  equals: OrderStatus
  in: [OrderStatus!]
  not: NestedEnumOrderStatusFilter
  notIn: [OrderStatus!]
}

input NestedEnumPaymentMethodFilter {
  equals: PaymentMethod
  in: [PaymentMethod!]
  not: NestedEnumPaymentMethodFilter
  notIn: [PaymentMethod!]
}

input NestedEnumRoleStatusNullableFilter {
  equals: RoleStatus
  in: [RoleStatus!]
  not: NestedEnumRoleStatusNullableFilter
  notIn: [RoleStatus!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableBigIntFieldUpdateOperationsInput {
  decrement: String
  divide: String
  increment: String
  multiply: String
  set: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableEnumRoleStatusFieldUpdateOperationsInput {
  set: RoleStatus
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

"""订单"""
type Order {
  address: OrderAddress
  code: String!
  createdAt: DateTime!
  id: ID!
  items: [OrderItem!]
  payment: Payment
  pending: Boolean!
  placedAt: DateTime!
  status: OrderStatus!
  subTotal: Int!
  subTotalWithTax: Int!
  total: Int!
  totalQuantity: Int!
  totalWithTax: Int!
  tracking: String
  updatedAt: DateTime!
}

type OrderAddress {
  city: String!
  company: String
  country: String!
  customFields: JSON
  district: String
  email: ID!
  fullname: String!
  order: Order!
  orderId: String!
  phone: String
  postalCode: String
  state: String
  streetLine1: String!
  streetLine2: String
}

type OrderAddressCountAggregate {
  _all: Int!
  city: Int!
  company: Int!
  country: Int!
  customFields: Int!
  district: Int!
  email: Int!
  fullname: Int!
  orderId: Int!
  phone: Int!
  postalCode: Int!
  state: Int!
  streetLine1: Int!
  streetLine2: Int!
}

input OrderAddressCreateNestedOneWithoutOrderInput {
  connect: OrderAddressWhereUniqueInput
  connectOrCreate: OrderAddressCreateOrConnectWithoutOrderInput
  create: OrderAddressCreateWithoutOrderInput
}

input OrderAddressCreateOrConnectWithoutOrderInput {
  create: OrderAddressCreateWithoutOrderInput!
  where: OrderAddressWhereUniqueInput!
}

input OrderAddressCreateWithoutOrderInput {
  city: String!
  company: String
  country: String!
  customFields: JSON
  district: String
  email: String!
  fullname: String!
  phone: String
  postalCode: String
  state: String
  streetLine1: String!
  streetLine2: String
}

type OrderAddressMaxAggregate {
  city: String
  company: String
  country: String
  district: String
  email: String
  fullname: String
  orderId: String
  phone: String
  postalCode: String
  state: String
  streetLine1: String
  streetLine2: String
}

type OrderAddressMinAggregate {
  city: String
  company: String
  country: String
  district: String
  email: String
  fullname: String
  orderId: String
  phone: String
  postalCode: String
  state: String
  streetLine1: String
  streetLine2: String
}

input OrderAddressRelationFilter {
  is: OrderAddressWhereInput
  isNot: OrderAddressWhereInput
}

input OrderAddressUpdateOneWithoutOrderInput {
  connect: OrderAddressWhereUniqueInput
  connectOrCreate: OrderAddressCreateOrConnectWithoutOrderInput
  create: OrderAddressCreateWithoutOrderInput
  delete: Boolean
  disconnect: Boolean
  update: OrderAddressUpdateWithoutOrderInput
  upsert: OrderAddressUpsertWithoutOrderInput
}

input OrderAddressUpdateWithoutOrderInput {
  city: StringFieldUpdateOperationsInput
  company: NullableStringFieldUpdateOperationsInput
  country: StringFieldUpdateOperationsInput
  customFields: JSON
  district: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fullname: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  postalCode: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  streetLine1: StringFieldUpdateOperationsInput
  streetLine2: NullableStringFieldUpdateOperationsInput
}

input OrderAddressUpsertWithoutOrderInput {
  create: OrderAddressCreateWithoutOrderInput!
  update: OrderAddressUpdateWithoutOrderInput!
}

input OrderAddressWhereInput {
  AND: [OrderAddressWhereInput!]
  NOT: [OrderAddressWhereInput!]
  OR: [OrderAddressWhereInput!]
  city: StringFilter
  company: StringNullableFilter
  country: StringFilter
  customFields: JsonNullableFilter
  district: StringNullableFilter
  email: StringFilter
  fullname: StringFilter
  order: OrderRelationFilter
  orderId: StringFilter
  phone: StringNullableFilter
  postalCode: StringNullableFilter
  state: StringNullableFilter
  streetLine1: StringFilter
  streetLine2: StringNullableFilter
}

input OrderAddressWhereUniqueInput {
  email: String
}

type OrderAvgAggregate {
  subTotal: Float
  subTotalWithTax: Float
  total: Float
  totalQuantity: Float
  totalWithTax: Float
}

type OrderCountAggregate {
  _all: Int!
  code: Int!
  createdAt: Int!
  id: Int!
  pending: Int!
  placedAt: Int!
  status: Int!
  subTotal: Int!
  subTotalWithTax: Int!
  total: Int!
  totalQuantity: Int!
  totalWithTax: Int!
  tracking: Int!
  updatedAt: Int!
}

input OrderCreateNestedOneWithoutItemsInput {
  connect: OrderWhereUniqueInput
  connectOrCreate: OrderCreateOrConnectWithoutItemsInput
  create: OrderCreateWithoutItemsInput
}

input OrderCreateOrConnectWithoutItemsInput {
  create: OrderCreateWithoutItemsInput!
  where: OrderWhereUniqueInput!
}

input OrderCreateWithoutItemsInput {
  address: OrderAddressCreateNestedOneWithoutOrderInput
  code: String!
  createdAt: DateTime
  id: String
  payment: PaymentCreateNestedOneWithoutOrderInput
  pending: Boolean
  placedAt: DateTime!
  status: OrderStatus
  subTotal: Int!
  subTotalWithTax: Int!
  total: Int!
  totalQuantity: Int!
  totalWithTax: Int!
  tracking: String
  updatedAt: DateTime
}

type OrderItem {
  brands: String!
  color: String
  createdAt: DateTime!
  discountedUnitPrice: Int!
  discountedUnitPriceWithTax: Int!
  fileId: String!
  id: ID!
  image: File!
  name: String!
  order: Order
  orderId: String
  quantity: Int!
  size: String
  sku: String!
  style: String
  unitPrice: Int!
  unitPriceWithTax: Int!
  updatedAt: DateTime!
}

type OrderItemAvgAggregate {
  discountedUnitPrice: Float
  discountedUnitPriceWithTax: Float
  quantity: Float
  unitPrice: Float
  unitPriceWithTax: Float
}

type OrderItemCountAggregate {
  _all: Int!
  brands: Int!
  color: Int!
  createdAt: Int!
  discountedUnitPrice: Int!
  discountedUnitPriceWithTax: Int!
  fileId: Int!
  id: Int!
  name: Int!
  orderId: Int!
  quantity: Int!
  size: Int!
  sku: Int!
  style: Int!
  unitPrice: Int!
  unitPriceWithTax: Int!
  updatedAt: Int!
}

input OrderItemCreateManyImageInput {
  brands: String!
  color: String
  createdAt: DateTime
  discountedUnitPrice: Int!
  discountedUnitPriceWithTax: Int!
  id: String
  name: String!
  orderId: String
  quantity: Int!
  size: String
  sku: String!
  style: String
  unitPrice: Int!
  unitPriceWithTax: Int!
  updatedAt: DateTime
}

input OrderItemCreateManyImageInputEnvelope {
  data: [OrderItemCreateManyImageInput!]!
  skipDuplicates: Boolean
}

input OrderItemCreateNestedManyWithoutImageInput {
  connect: [OrderItemWhereUniqueInput!]
  connectOrCreate: [OrderItemCreateOrConnectWithoutImageInput!]
  create: [OrderItemCreateWithoutImageInput!]
  createMany: OrderItemCreateManyImageInputEnvelope
}

input OrderItemCreateOrConnectWithoutImageInput {
  create: OrderItemCreateWithoutImageInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemCreateWithoutImageInput {
  brands: String!
  color: String
  createdAt: DateTime
  discountedUnitPrice: Int!
  discountedUnitPriceWithTax: Int!
  id: String
  name: String!
  order: OrderCreateNestedOneWithoutItemsInput
  quantity: Int!
  size: String
  sku: String!
  style: String
  unitPrice: Int!
  unitPriceWithTax: Int!
  updatedAt: DateTime
}

input OrderItemListRelationFilter {
  every: OrderItemWhereInput
  none: OrderItemWhereInput
  some: OrderItemWhereInput
}

type OrderItemMaxAggregate {
  brands: String
  color: String
  createdAt: DateTime
  discountedUnitPrice: Int
  discountedUnitPriceWithTax: Int
  fileId: String
  id: String
  name: String
  orderId: String
  quantity: Int
  size: String
  sku: String
  style: String
  unitPrice: Int
  unitPriceWithTax: Int
  updatedAt: DateTime
}

type OrderItemMinAggregate {
  brands: String
  color: String
  createdAt: DateTime
  discountedUnitPrice: Int
  discountedUnitPriceWithTax: Int
  fileId: String
  id: String
  name: String
  orderId: String
  quantity: Int
  size: String
  sku: String
  style: String
  unitPrice: Int
  unitPriceWithTax: Int
  updatedAt: DateTime
}

input OrderItemScalarWhereInput {
  AND: [OrderItemScalarWhereInput!]
  NOT: [OrderItemScalarWhereInput!]
  OR: [OrderItemScalarWhereInput!]
  brands: StringFilter
  color: StringNullableFilter
  createdAt: DateTimeFilter
  discountedUnitPrice: IntFilter
  discountedUnitPriceWithTax: IntFilter
  fileId: StringFilter
  id: StringFilter
  name: StringFilter
  orderId: StringNullableFilter
  quantity: IntFilter
  size: StringNullableFilter
  sku: StringFilter
  style: StringNullableFilter
  unitPrice: IntFilter
  unitPriceWithTax: IntFilter
  updatedAt: DateTimeFilter
}

type OrderItemSumAggregate {
  discountedUnitPrice: Int
  discountedUnitPriceWithTax: Int
  quantity: Int
  unitPrice: Int
  unitPriceWithTax: Int
}

input OrderItemUpdateManyMutationInput {
  brands: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discountedUnitPrice: IntFieldUpdateOperationsInput
  discountedUnitPriceWithTax: IntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  size: NullableStringFieldUpdateOperationsInput
  sku: StringFieldUpdateOperationsInput
  style: NullableStringFieldUpdateOperationsInput
  unitPrice: IntFieldUpdateOperationsInput
  unitPriceWithTax: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OrderItemUpdateManyWithWhereWithoutImageInput {
  data: OrderItemUpdateManyMutationInput!
  where: OrderItemScalarWhereInput!
}

input OrderItemUpdateManyWithoutImageInput {
  connect: [OrderItemWhereUniqueInput!]
  connectOrCreate: [OrderItemCreateOrConnectWithoutImageInput!]
  create: [OrderItemCreateWithoutImageInput!]
  createMany: OrderItemCreateManyImageInputEnvelope
  delete: [OrderItemWhereUniqueInput!]
  deleteMany: [OrderItemScalarWhereInput!]
  disconnect: [OrderItemWhereUniqueInput!]
  set: [OrderItemWhereUniqueInput!]
  update: [OrderItemUpdateWithWhereUniqueWithoutImageInput!]
  updateMany: [OrderItemUpdateManyWithWhereWithoutImageInput!]
  upsert: [OrderItemUpsertWithWhereUniqueWithoutImageInput!]
}

input OrderItemUpdateWithWhereUniqueWithoutImageInput {
  data: OrderItemUpdateWithoutImageInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemUpdateWithoutImageInput {
  brands: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discountedUnitPrice: IntFieldUpdateOperationsInput
  discountedUnitPriceWithTax: IntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: OrderUpdateOneWithoutItemsInput
  quantity: IntFieldUpdateOperationsInput
  size: NullableStringFieldUpdateOperationsInput
  sku: StringFieldUpdateOperationsInput
  style: NullableStringFieldUpdateOperationsInput
  unitPrice: IntFieldUpdateOperationsInput
  unitPriceWithTax: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OrderItemUpsertWithWhereUniqueWithoutImageInput {
  create: OrderItemCreateWithoutImageInput!
  update: OrderItemUpdateWithoutImageInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemWhereInput {
  AND: [OrderItemWhereInput!]
  NOT: [OrderItemWhereInput!]
  OR: [OrderItemWhereInput!]
  brands: StringFilter
  color: StringNullableFilter
  createdAt: DateTimeFilter
  discountedUnitPrice: IntFilter
  discountedUnitPriceWithTax: IntFilter
  fileId: StringFilter
  id: StringFilter
  image: FileRelationFilter
  name: StringFilter
  order: OrderRelationFilter
  orderId: StringNullableFilter
  quantity: IntFilter
  size: StringNullableFilter
  sku: StringFilter
  style: StringNullableFilter
  unitPrice: IntFilter
  unitPriceWithTax: IntFilter
  updatedAt: DateTimeFilter
}

input OrderItemWhereUniqueInput {
  id: String
  sku: String
}

type OrderMaxAggregate {
  code: String
  createdAt: DateTime
  id: String
  pending: Boolean
  placedAt: DateTime
  status: OrderStatus
  subTotal: Int
  subTotalWithTax: Int
  total: Int
  totalQuantity: Int
  totalWithTax: Int
  tracking: String
  updatedAt: DateTime
}

type OrderMinAggregate {
  code: String
  createdAt: DateTime
  id: String
  pending: Boolean
  placedAt: DateTime
  status: OrderStatus
  subTotal: Int
  subTotalWithTax: Int
  total: Int
  totalQuantity: Int
  totalWithTax: Int
  tracking: String
  updatedAt: DateTime
}

input OrderRelationFilter {
  is: OrderWhereInput
  isNot: OrderWhereInput
}

enum OrderStatus {
  archived
  cancelled
  completed
  delivered
  exchangeRequest
  pending
  processing
  received
  refunded
  requestAccepted
  requestDenied
  requestPending
  returnRequest
  returning
  shipped
}

type OrderSumAggregate {
  subTotal: Int
  subTotalWithTax: Int
  total: Int
  totalQuantity: Int
  totalWithTax: Int
}

input OrderUpdateOneWithoutItemsInput {
  connect: OrderWhereUniqueInput
  connectOrCreate: OrderCreateOrConnectWithoutItemsInput
  create: OrderCreateWithoutItemsInput
  delete: Boolean
  disconnect: Boolean
  update: OrderUpdateWithoutItemsInput
  upsert: OrderUpsertWithoutItemsInput
}

input OrderUpdateWithoutItemsInput {
  address: OrderAddressUpdateOneWithoutOrderInput
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  payment: PaymentUpdateOneWithoutOrderInput
  pending: BoolFieldUpdateOperationsInput
  placedAt: DateTimeFieldUpdateOperationsInput
  status: EnumOrderStatusFieldUpdateOperationsInput
  subTotal: IntFieldUpdateOperationsInput
  subTotalWithTax: IntFieldUpdateOperationsInput
  total: IntFieldUpdateOperationsInput
  totalQuantity: IntFieldUpdateOperationsInput
  totalWithTax: IntFieldUpdateOperationsInput
  tracking: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OrderUpsertWithoutItemsInput {
  create: OrderCreateWithoutItemsInput!
  update: OrderUpdateWithoutItemsInput!
}

input OrderWhereInput {
  AND: [OrderWhereInput!]
  NOT: [OrderWhereInput!]
  OR: [OrderWhereInput!]
  address: OrderAddressRelationFilter
  code: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  items: OrderItemListRelationFilter
  payment: PaymentRelationFilter
  pending: BoolFilter
  placedAt: DateTimeFilter
  status: EnumOrderStatusFilter
  subTotal: IntFilter
  subTotalWithTax: IntFilter
  total: IntFilter
  totalQuantity: IntFilter
  totalWithTax: IntFilter
  tracking: StringNullableFilter
  updatedAt: DateTimeFilter
}

input OrderWhereUniqueInput {
  code: String
  id: String
}

"""支付"""
type Payment {
  createdAt: DateTime!
  errorMessage: String!
  id: ID!
  metadata: JSON
  method: PaymentMethod!
  order: Order!
  orderId: String!
  status: String!
  transactionId: String!
  updatedAt: DateTime!
}

type PaymentCountAggregate {
  _all: Int!
  createdAt: Int!
  errorMessage: Int!
  id: Int!
  metadata: Int!
  method: Int!
  orderId: Int!
  status: Int!
  transactionId: Int!
  updatedAt: Int!
}

input PaymentCreateNestedOneWithoutOrderInput {
  connect: PaymentWhereUniqueInput
  connectOrCreate: PaymentCreateOrConnectWithoutOrderInput
  create: PaymentCreateWithoutOrderInput
}

input PaymentCreateOrConnectWithoutOrderInput {
  create: PaymentCreateWithoutOrderInput!
  where: PaymentWhereUniqueInput!
}

input PaymentCreateWithoutOrderInput {
  createdAt: DateTime
  errorMessage: String!
  id: String
  metadata: JSON
  method: PaymentMethod!
  status: String!
  transactionId: String!
  updatedAt: DateTime
}

type PaymentMaxAggregate {
  createdAt: DateTime
  errorMessage: String
  id: String
  method: PaymentMethod
  orderId: String
  status: String
  transactionId: String
  updatedAt: DateTime
}

enum PaymentMethod {
  Alipay
  PayPal
  Stripe
  WechatPay
}

type PaymentMinAggregate {
  createdAt: DateTime
  errorMessage: String
  id: String
  method: PaymentMethod
  orderId: String
  status: String
  transactionId: String
  updatedAt: DateTime
}

input PaymentRelationFilter {
  is: PaymentWhereInput
  isNot: PaymentWhereInput
}

input PaymentUpdateOneWithoutOrderInput {
  connect: PaymentWhereUniqueInput
  connectOrCreate: PaymentCreateOrConnectWithoutOrderInput
  create: PaymentCreateWithoutOrderInput
  delete: Boolean
  disconnect: Boolean
  update: PaymentUpdateWithoutOrderInput
  upsert: PaymentUpsertWithoutOrderInput
}

input PaymentUpdateWithoutOrderInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  errorMessage: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  metadata: JSON
  method: EnumPaymentMethodFieldUpdateOperationsInput
  status: StringFieldUpdateOperationsInput
  transactionId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PaymentUpsertWithoutOrderInput {
  create: PaymentCreateWithoutOrderInput!
  update: PaymentUpdateWithoutOrderInput!
}

input PaymentWhereInput {
  AND: [PaymentWhereInput!]
  NOT: [PaymentWhereInput!]
  OR: [PaymentWhereInput!]
  createdAt: DateTimeFilter
  errorMessage: StringFilter
  id: StringFilter
  metadata: JsonNullableFilter
  method: EnumPaymentMethodFilter
  order: OrderRelationFilter
  orderId: StringFilter
  status: StringFilter
  transactionId: StringFilter
  updatedAt: DateTimeFilter
}

input PaymentWhereUniqueInput {
  id: String
  transactionId: String
}

"""权限"""
enum Permission {
  Authenticated
  CreateAdministrator
  CreateAsset
  CreateContents
  CreateOrder
  CreatePaymentMethod
  CreateProduct
  CreateSettings
  DeleteAdministrator
  DeleteAsset
  DeleteContents
  DeleteOrder
  DeletePaymentMethod
  DeleteProduct
  DeleteSettings
  Owner
  Public
  ReadAdministrator
  ReadAsset
  ReadContents
  ReadOrder
  ReadPaymentMethod
  ReadProduct
  ReadSettings
  SuperAdmin
  UpdateAdministrator
  UpdateAsset
  UpdateContents
  UpdateOrder
  UpdatePaymentMethod
  UpdateProduct
  UpdateSettings
}

"""商品"""
type Product {
  assets: [File!]
  brands: [Brand!]
  categories: [ProductCategory!]
  createdAt: DateTime!
  discription: String
  draft: Boolean
  featured: Boolean
  id: ID!
  languageCode: LanguageCode!
  likes: [Like!]
  name: String!
  price: Int!
  reviews: [Review!]
  sku: String!
  sold: Int
  stock: Int!
  translations: [ProductTranslation!]
  types: [ProductType!]
  updatedAt: DateTime
  variants: [ProductVariant!]
}

type ProductAvgAggregate {
  price: Float
  sold: Float
  stock: Float
}

"""商品种类"""
type ProductCategory {
  children: [ProductCategory!]
  createdAt: DateTime!
  id: ID!
  languageCode: LanguageCode!
  name: String!
  parent: ProductCategory
  parentId: String
  products: [Product!]
  slug: String!
  translations: [ProductCategoryTranslation!]
  types: [ProductType!]
  updatedAt: DateTime!
}

type ProductCategoryCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  parentId: Int!
  slug: Int!
  updatedAt: Int!
}

input ProductCategoryCreateManyParentInput {
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String!
  slug: String!
  updatedAt: DateTime
}

input ProductCategoryCreateManyParentInputEnvelope {
  data: [ProductCategoryCreateManyParentInput!]!
  skipDuplicates: Boolean
}

input ProductCategoryCreateNestedManyWithoutParentInput {
  connect: [ProductCategoryWhereUniqueInput!]
  connectOrCreate: [ProductCategoryCreateOrConnectWithoutParentInput!]
  create: [ProductCategoryCreateWithoutParentInput!]
  createMany: ProductCategoryCreateManyParentInputEnvelope
}

input ProductCategoryCreateNestedManyWithoutProductsInput {
  connect: [ProductCategoryWhereUniqueInput!]
  connectOrCreate: [ProductCategoryCreateOrConnectWithoutProductsInput!]
  create: [ProductCategoryCreateWithoutProductsInput!]
}

input ProductCategoryCreateNestedManyWithoutTypesInput {
  connect: [ProductCategoryWhereUniqueInput!]
  connectOrCreate: [ProductCategoryCreateOrConnectWithoutTypesInput!]
  create: [ProductCategoryCreateWithoutTypesInput!]
}

input ProductCategoryCreateNestedOneWithoutChildrenInput {
  connect: ProductCategoryWhereUniqueInput
  connectOrCreate: ProductCategoryCreateOrConnectWithoutChildrenInput
  create: ProductCategoryCreateWithoutChildrenInput
}

input ProductCategoryCreateOrConnectWithoutChildrenInput {
  create: ProductCategoryCreateWithoutChildrenInput!
  where: ProductCategoryWhereUniqueInput!
}

input ProductCategoryCreateOrConnectWithoutParentInput {
  create: ProductCategoryCreateWithoutParentInput!
  where: ProductCategoryWhereUniqueInput!
}

input ProductCategoryCreateOrConnectWithoutProductsInput {
  create: ProductCategoryCreateWithoutProductsInput!
  where: ProductCategoryWhereUniqueInput!
}

input ProductCategoryCreateOrConnectWithoutTypesInput {
  create: ProductCategoryCreateWithoutTypesInput!
  where: ProductCategoryWhereUniqueInput!
}

input ProductCategoryCreateWithoutChildrenInput {
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String!
  parent: ProductCategoryCreateNestedOneWithoutChildrenInput
  products: ProductCreateNestedManyWithoutCategoriesInput
  slug: String!
  translations: ProductCategoryTranslationCreateNestedManyWithoutProductCategoryInput
  types: ProductTypeCreateNestedManyWithoutCategoriesInput
  updatedAt: DateTime
}

input ProductCategoryCreateWithoutParentInput {
  children: ProductCategoryCreateNestedManyWithoutParentInput
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String!
  products: ProductCreateNestedManyWithoutCategoriesInput
  slug: String!
  translations: ProductCategoryTranslationCreateNestedManyWithoutProductCategoryInput
  types: ProductTypeCreateNestedManyWithoutCategoriesInput
  updatedAt: DateTime
}

input ProductCategoryCreateWithoutProductsInput {
  children: ProductCategoryCreateNestedManyWithoutParentInput
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String!
  parent: ProductCategoryCreateNestedOneWithoutChildrenInput
  slug: String!
  translations: ProductCategoryTranslationCreateNestedManyWithoutProductCategoryInput
  types: ProductTypeCreateNestedManyWithoutCategoriesInput
  updatedAt: DateTime
}

input ProductCategoryCreateWithoutTypesInput {
  children: ProductCategoryCreateNestedManyWithoutParentInput
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String!
  parent: ProductCategoryCreateNestedOneWithoutChildrenInput
  products: ProductCreateNestedManyWithoutCategoriesInput
  slug: String!
  translations: ProductCategoryTranslationCreateNestedManyWithoutProductCategoryInput
  updatedAt: DateTime
}

input ProductCategoryListRelationFilter {
  every: ProductCategoryWhereInput
  none: ProductCategoryWhereInput
  some: ProductCategoryWhereInput
}

type ProductCategoryMaxAggregate {
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String
  parentId: String
  slug: String
  updatedAt: DateTime
}

type ProductCategoryMinAggregate {
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String
  parentId: String
  slug: String
  updatedAt: DateTime
}

input ProductCategoryRelationFilter {
  is: ProductCategoryWhereInput
  isNot: ProductCategoryWhereInput
}

input ProductCategoryScalarWhereInput {
  AND: [ProductCategoryScalarWhereInput!]
  NOT: [ProductCategoryScalarWhereInput!]
  OR: [ProductCategoryScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  parentId: StringNullableFilter
  slug: StringFilter
  updatedAt: DateTimeFilter
}

type ProductCategoryTranslation {
  createdAt: DateTime!
  id: ID!
  languageCode: LanguageCode!
  name: String!
  productCategory: ProductCategory
  productCategoryId: String
}

type ProductCategoryTranslationCountAggregate {
  _all: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  productCategoryId: Int!
}

input ProductCategoryTranslationCreateManyProductCategoryInput {
  id: String
  languageCode: LanguageCode
  name: String!
}

input ProductCategoryTranslationCreateManyProductCategoryInputEnvelope {
  data: [ProductCategoryTranslationCreateManyProductCategoryInput!]!
  skipDuplicates: Boolean
}

input ProductCategoryTranslationCreateNestedManyWithoutProductCategoryInput {
  connect: [ProductCategoryTranslationWhereUniqueInput!]
  connectOrCreate: [ProductCategoryTranslationCreateOrConnectWithoutProductCategoryInput!]
  create: [ProductCategoryTranslationCreateWithoutProductCategoryInput!]
  createMany: ProductCategoryTranslationCreateManyProductCategoryInputEnvelope
}

input ProductCategoryTranslationCreateOrConnectWithoutProductCategoryInput {
  create: ProductCategoryTranslationCreateWithoutProductCategoryInput!
  where: ProductCategoryTranslationWhereUniqueInput!
}

input ProductCategoryTranslationCreateWithoutProductCategoryInput {
  id: String
  languageCode: LanguageCode
  name: String!
}

input ProductCategoryTranslationListRelationFilter {
  every: ProductCategoryTranslationWhereInput
  none: ProductCategoryTranslationWhereInput
  some: ProductCategoryTranslationWhereInput
}

type ProductCategoryTranslationMaxAggregate {
  id: String
  languageCode: LanguageCode
  name: String
  productCategoryId: String
}

type ProductCategoryTranslationMinAggregate {
  id: String
  languageCode: LanguageCode
  name: String
  productCategoryId: String
}

input ProductCategoryTranslationScalarWhereInput {
  AND: [ProductCategoryTranslationScalarWhereInput!]
  NOT: [ProductCategoryTranslationScalarWhereInput!]
  OR: [ProductCategoryTranslationScalarWhereInput!]
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  productCategoryId: StringNullableFilter
}

input ProductCategoryTranslationUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProductCategoryTranslationUpdateManyWithWhereWithoutProductCategoryInput {
  data: ProductCategoryTranslationUpdateManyMutationInput!
  where: ProductCategoryTranslationScalarWhereInput!
}

input ProductCategoryTranslationUpdateManyWithoutProductCategoryInput {
  connect: [ProductCategoryTranslationWhereUniqueInput!]
  connectOrCreate: [ProductCategoryTranslationCreateOrConnectWithoutProductCategoryInput!]
  create: [ProductCategoryTranslationCreateWithoutProductCategoryInput!]
  createMany: ProductCategoryTranslationCreateManyProductCategoryInputEnvelope
  delete: [ProductCategoryTranslationWhereUniqueInput!]
  deleteMany: [ProductCategoryTranslationScalarWhereInput!]
  disconnect: [ProductCategoryTranslationWhereUniqueInput!]
  set: [ProductCategoryTranslationWhereUniqueInput!]
  update: [ProductCategoryTranslationUpdateWithWhereUniqueWithoutProductCategoryInput!]
  updateMany: [ProductCategoryTranslationUpdateManyWithWhereWithoutProductCategoryInput!]
  upsert: [ProductCategoryTranslationUpsertWithWhereUniqueWithoutProductCategoryInput!]
}

input ProductCategoryTranslationUpdateWithWhereUniqueWithoutProductCategoryInput {
  data: ProductCategoryTranslationUpdateWithoutProductCategoryInput!
  where: ProductCategoryTranslationWhereUniqueInput!
}

input ProductCategoryTranslationUpdateWithoutProductCategoryInput {
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProductCategoryTranslationUpsertWithWhereUniqueWithoutProductCategoryInput {
  create: ProductCategoryTranslationCreateWithoutProductCategoryInput!
  update: ProductCategoryTranslationUpdateWithoutProductCategoryInput!
  where: ProductCategoryTranslationWhereUniqueInput!
}

input ProductCategoryTranslationWhereInput {
  AND: [ProductCategoryTranslationWhereInput!]
  NOT: [ProductCategoryTranslationWhereInput!]
  OR: [ProductCategoryTranslationWhereInput!]
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  productCategory: ProductCategoryRelationFilter
  productCategoryId: StringNullableFilter
}

input ProductCategoryTranslationWhereUniqueInput {
  id: String
}

input ProductCategoryUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProductCategoryUpdateManyWithWhereWithoutParentInput {
  data: ProductCategoryUpdateManyMutationInput!
  where: ProductCategoryScalarWhereInput!
}

input ProductCategoryUpdateManyWithWhereWithoutProductsInput {
  data: ProductCategoryUpdateManyMutationInput!
  where: ProductCategoryScalarWhereInput!
}

input ProductCategoryUpdateManyWithWhereWithoutTypesInput {
  data: ProductCategoryUpdateManyMutationInput!
  where: ProductCategoryScalarWhereInput!
}

input ProductCategoryUpdateManyWithoutParentInput {
  connect: [ProductCategoryWhereUniqueInput!]
  connectOrCreate: [ProductCategoryCreateOrConnectWithoutParentInput!]
  create: [ProductCategoryCreateWithoutParentInput!]
  createMany: ProductCategoryCreateManyParentInputEnvelope
  delete: [ProductCategoryWhereUniqueInput!]
  deleteMany: [ProductCategoryScalarWhereInput!]
  disconnect: [ProductCategoryWhereUniqueInput!]
  set: [ProductCategoryWhereUniqueInput!]
  update: [ProductCategoryUpdateWithWhereUniqueWithoutParentInput!]
  updateMany: [ProductCategoryUpdateManyWithWhereWithoutParentInput!]
  upsert: [ProductCategoryUpsertWithWhereUniqueWithoutParentInput!]
}

input ProductCategoryUpdateManyWithoutProductsInput {
  connect: [ProductCategoryWhereUniqueInput!]
  connectOrCreate: [ProductCategoryCreateOrConnectWithoutProductsInput!]
  create: [ProductCategoryCreateWithoutProductsInput!]
  delete: [ProductCategoryWhereUniqueInput!]
  deleteMany: [ProductCategoryScalarWhereInput!]
  disconnect: [ProductCategoryWhereUniqueInput!]
  set: [ProductCategoryWhereUniqueInput!]
  update: [ProductCategoryUpdateWithWhereUniqueWithoutProductsInput!]
  updateMany: [ProductCategoryUpdateManyWithWhereWithoutProductsInput!]
  upsert: [ProductCategoryUpsertWithWhereUniqueWithoutProductsInput!]
}

input ProductCategoryUpdateManyWithoutTypesInput {
  connect: [ProductCategoryWhereUniqueInput!]
  connectOrCreate: [ProductCategoryCreateOrConnectWithoutTypesInput!]
  create: [ProductCategoryCreateWithoutTypesInput!]
  delete: [ProductCategoryWhereUniqueInput!]
  deleteMany: [ProductCategoryScalarWhereInput!]
  disconnect: [ProductCategoryWhereUniqueInput!]
  set: [ProductCategoryWhereUniqueInput!]
  update: [ProductCategoryUpdateWithWhereUniqueWithoutTypesInput!]
  updateMany: [ProductCategoryUpdateManyWithWhereWithoutTypesInput!]
  upsert: [ProductCategoryUpsertWithWhereUniqueWithoutTypesInput!]
}

input ProductCategoryUpdateOneWithoutChildrenInput {
  connect: ProductCategoryWhereUniqueInput
  connectOrCreate: ProductCategoryCreateOrConnectWithoutChildrenInput
  create: ProductCategoryCreateWithoutChildrenInput
  delete: Boolean
  disconnect: Boolean
  update: ProductCategoryUpdateWithoutChildrenInput
  upsert: ProductCategoryUpsertWithoutChildrenInput
}

input ProductCategoryUpdateWithWhereUniqueWithoutParentInput {
  data: ProductCategoryUpdateWithoutParentInput!
  where: ProductCategoryWhereUniqueInput!
}

input ProductCategoryUpdateWithWhereUniqueWithoutProductsInput {
  data: ProductCategoryUpdateWithoutProductsInput!
  where: ProductCategoryWhereUniqueInput!
}

input ProductCategoryUpdateWithWhereUniqueWithoutTypesInput {
  data: ProductCategoryUpdateWithoutTypesInput!
  where: ProductCategoryWhereUniqueInput!
}

input ProductCategoryUpdateWithoutChildrenInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: ProductCategoryUpdateOneWithoutChildrenInput
  products: ProductUpdateManyWithoutCategoriesInput
  slug: StringFieldUpdateOperationsInput
  translations: ProductCategoryTranslationUpdateManyWithoutProductCategoryInput
  types: ProductTypeUpdateManyWithoutCategoriesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProductCategoryUpdateWithoutParentInput {
  children: ProductCategoryUpdateManyWithoutParentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: ProductUpdateManyWithoutCategoriesInput
  slug: StringFieldUpdateOperationsInput
  translations: ProductCategoryTranslationUpdateManyWithoutProductCategoryInput
  types: ProductTypeUpdateManyWithoutCategoriesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProductCategoryUpdateWithoutProductsInput {
  children: ProductCategoryUpdateManyWithoutParentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: ProductCategoryUpdateOneWithoutChildrenInput
  slug: StringFieldUpdateOperationsInput
  translations: ProductCategoryTranslationUpdateManyWithoutProductCategoryInput
  types: ProductTypeUpdateManyWithoutCategoriesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProductCategoryUpdateWithoutTypesInput {
  children: ProductCategoryUpdateManyWithoutParentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: ProductCategoryUpdateOneWithoutChildrenInput
  products: ProductUpdateManyWithoutCategoriesInput
  slug: StringFieldUpdateOperationsInput
  translations: ProductCategoryTranslationUpdateManyWithoutProductCategoryInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProductCategoryUpsertWithWhereUniqueWithoutParentInput {
  create: ProductCategoryCreateWithoutParentInput!
  update: ProductCategoryUpdateWithoutParentInput!
  where: ProductCategoryWhereUniqueInput!
}

input ProductCategoryUpsertWithWhereUniqueWithoutProductsInput {
  create: ProductCategoryCreateWithoutProductsInput!
  update: ProductCategoryUpdateWithoutProductsInput!
  where: ProductCategoryWhereUniqueInput!
}

input ProductCategoryUpsertWithWhereUniqueWithoutTypesInput {
  create: ProductCategoryCreateWithoutTypesInput!
  update: ProductCategoryUpdateWithoutTypesInput!
  where: ProductCategoryWhereUniqueInput!
}

input ProductCategoryUpsertWithoutChildrenInput {
  create: ProductCategoryCreateWithoutChildrenInput!
  update: ProductCategoryUpdateWithoutChildrenInput!
}

input ProductCategoryWhereInput {
  AND: [ProductCategoryWhereInput!]
  NOT: [ProductCategoryWhereInput!]
  OR: [ProductCategoryWhereInput!]
  children: ProductCategoryListRelationFilter
  createdAt: DateTimeFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  parent: ProductCategoryRelationFilter
  parentId: StringNullableFilter
  products: ProductListRelationFilter
  slug: StringFilter
  translations: ProductCategoryTranslationListRelationFilter
  types: ProductTypeListRelationFilter
  updatedAt: DateTimeFilter
}

input ProductCategoryWhereUniqueInput {
  id: String
  slug: String
}

type ProductCountAggregate {
  _all: Int!
  createdAt: Int!
  discription: Int!
  draft: Int!
  featured: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  price: Int!
  sku: Int!
  sold: Int!
  stock: Int!
  updatedAt: Int!
}

input ProductCreateInput {
  assets: FileCreateNestedManyWithoutProductInput
  brands: BrandCreateNestedManyWithoutProductsInput
  categories: ProductCategoryCreateNestedManyWithoutProductsInput
  createdAt: DateTime
  discription: String
  draft: Boolean
  featured: Boolean
  id: String
  languageCode: LanguageCode
  likes: LikeCreateNestedManyWithoutProductInput
  name: String!
  price: Int!
  reviews: ReviewCreateNestedManyWithoutProductInput
  sku: String!
  sold: Int
  stock: Int!
  translations: ProductTranslationCreateNestedManyWithoutProductInput
  types: ProductTypeCreateNestedManyWithoutProductsInput
  updatedAt: DateTime
  variants: ProductVariantCreateNestedManyWithoutProductInput
}

input ProductCreateNestedManyWithoutBrandsInput {
  connect: [ProductWhereUniqueInput!]
  connectOrCreate: [ProductCreateOrConnectWithoutBrandsInput!]
  create: [ProductCreateWithoutBrandsInput!]
}

input ProductCreateNestedManyWithoutCategoriesInput {
  connect: [ProductWhereUniqueInput!]
  connectOrCreate: [ProductCreateOrConnectWithoutCategoriesInput!]
  create: [ProductCreateWithoutCategoriesInput!]
}

input ProductCreateNestedManyWithoutTypesInput {
  connect: [ProductWhereUniqueInput!]
  connectOrCreate: [ProductCreateOrConnectWithoutTypesInput!]
  create: [ProductCreateWithoutTypesInput!]
}

input ProductCreateNestedOneWithoutAssetsInput {
  connect: ProductWhereUniqueInput
  connectOrCreate: ProductCreateOrConnectWithoutAssetsInput
  create: ProductCreateWithoutAssetsInput
}

input ProductCreateNestedOneWithoutLikesInput {
  connect: ProductWhereUniqueInput
  connectOrCreate: ProductCreateOrConnectWithoutLikesInput
  create: ProductCreateWithoutLikesInput
}

input ProductCreateNestedOneWithoutReviewsInput {
  connect: ProductWhereUniqueInput
  connectOrCreate: ProductCreateOrConnectWithoutReviewsInput
  create: ProductCreateWithoutReviewsInput
}

input ProductCreateNestedOneWithoutVariantsInput {
  connect: ProductWhereUniqueInput
  connectOrCreate: ProductCreateOrConnectWithoutVariantsInput
  create: ProductCreateWithoutVariantsInput
}

input ProductCreateOrConnectWithoutAssetsInput {
  create: ProductCreateWithoutAssetsInput!
  where: ProductWhereUniqueInput!
}

input ProductCreateOrConnectWithoutBrandsInput {
  create: ProductCreateWithoutBrandsInput!
  where: ProductWhereUniqueInput!
}

input ProductCreateOrConnectWithoutCategoriesInput {
  create: ProductCreateWithoutCategoriesInput!
  where: ProductWhereUniqueInput!
}

input ProductCreateOrConnectWithoutLikesInput {
  create: ProductCreateWithoutLikesInput!
  where: ProductWhereUniqueInput!
}

input ProductCreateOrConnectWithoutReviewsInput {
  create: ProductCreateWithoutReviewsInput!
  where: ProductWhereUniqueInput!
}

input ProductCreateOrConnectWithoutTypesInput {
  create: ProductCreateWithoutTypesInput!
  where: ProductWhereUniqueInput!
}

input ProductCreateOrConnectWithoutVariantsInput {
  create: ProductCreateWithoutVariantsInput!
  where: ProductWhereUniqueInput!
}

input ProductCreateWithoutAssetsInput {
  brands: BrandCreateNestedManyWithoutProductsInput
  categories: ProductCategoryCreateNestedManyWithoutProductsInput
  createdAt: DateTime
  discription: String
  draft: Boolean
  featured: Boolean
  id: String
  languageCode: LanguageCode
  likes: LikeCreateNestedManyWithoutProductInput
  name: String!
  price: Int!
  reviews: ReviewCreateNestedManyWithoutProductInput
  sku: String!
  sold: Int
  stock: Int!
  translations: ProductTranslationCreateNestedManyWithoutProductInput
  types: ProductTypeCreateNestedManyWithoutProductsInput
  updatedAt: DateTime
  variants: ProductVariantCreateNestedManyWithoutProductInput
}

input ProductCreateWithoutBrandsInput {
  assets: FileCreateNestedManyWithoutProductInput
  categories: ProductCategoryCreateNestedManyWithoutProductsInput
  createdAt: DateTime
  discription: String
  draft: Boolean
  featured: Boolean
  id: String
  languageCode: LanguageCode
  likes: LikeCreateNestedManyWithoutProductInput
  name: String!
  price: Int!
  reviews: ReviewCreateNestedManyWithoutProductInput
  sku: String!
  sold: Int
  stock: Int!
  translations: ProductTranslationCreateNestedManyWithoutProductInput
  types: ProductTypeCreateNestedManyWithoutProductsInput
  updatedAt: DateTime
  variants: ProductVariantCreateNestedManyWithoutProductInput
}

input ProductCreateWithoutCategoriesInput {
  assets: FileCreateNestedManyWithoutProductInput
  brands: BrandCreateNestedManyWithoutProductsInput
  createdAt: DateTime
  discription: String
  draft: Boolean
  featured: Boolean
  id: String
  languageCode: LanguageCode
  likes: LikeCreateNestedManyWithoutProductInput
  name: String!
  price: Int!
  reviews: ReviewCreateNestedManyWithoutProductInput
  sku: String!
  sold: Int
  stock: Int!
  translations: ProductTranslationCreateNestedManyWithoutProductInput
  types: ProductTypeCreateNestedManyWithoutProductsInput
  updatedAt: DateTime
  variants: ProductVariantCreateNestedManyWithoutProductInput
}

input ProductCreateWithoutLikesInput {
  assets: FileCreateNestedManyWithoutProductInput
  brands: BrandCreateNestedManyWithoutProductsInput
  categories: ProductCategoryCreateNestedManyWithoutProductsInput
  createdAt: DateTime
  discription: String
  draft: Boolean
  featured: Boolean
  id: String
  languageCode: LanguageCode
  name: String!
  price: Int!
  reviews: ReviewCreateNestedManyWithoutProductInput
  sku: String!
  sold: Int
  stock: Int!
  translations: ProductTranslationCreateNestedManyWithoutProductInput
  types: ProductTypeCreateNestedManyWithoutProductsInput
  updatedAt: DateTime
  variants: ProductVariantCreateNestedManyWithoutProductInput
}

input ProductCreateWithoutReviewsInput {
  assets: FileCreateNestedManyWithoutProductInput
  brands: BrandCreateNestedManyWithoutProductsInput
  categories: ProductCategoryCreateNestedManyWithoutProductsInput
  createdAt: DateTime
  discription: String
  draft: Boolean
  featured: Boolean
  id: String
  languageCode: LanguageCode
  likes: LikeCreateNestedManyWithoutProductInput
  name: String!
  price: Int!
  sku: String!
  sold: Int
  stock: Int!
  translations: ProductTranslationCreateNestedManyWithoutProductInput
  types: ProductTypeCreateNestedManyWithoutProductsInput
  updatedAt: DateTime
  variants: ProductVariantCreateNestedManyWithoutProductInput
}

input ProductCreateWithoutTypesInput {
  assets: FileCreateNestedManyWithoutProductInput
  brands: BrandCreateNestedManyWithoutProductsInput
  categories: ProductCategoryCreateNestedManyWithoutProductsInput
  createdAt: DateTime
  discription: String
  draft: Boolean
  featured: Boolean
  id: String
  languageCode: LanguageCode
  likes: LikeCreateNestedManyWithoutProductInput
  name: String!
  price: Int!
  reviews: ReviewCreateNestedManyWithoutProductInput
  sku: String!
  sold: Int
  stock: Int!
  translations: ProductTranslationCreateNestedManyWithoutProductInput
  updatedAt: DateTime
  variants: ProductVariantCreateNestedManyWithoutProductInput
}

input ProductCreateWithoutVariantsInput {
  assets: FileCreateNestedManyWithoutProductInput
  brands: BrandCreateNestedManyWithoutProductsInput
  categories: ProductCategoryCreateNestedManyWithoutProductsInput
  createdAt: DateTime
  discription: String
  draft: Boolean
  featured: Boolean
  id: String
  languageCode: LanguageCode
  likes: LikeCreateNestedManyWithoutProductInput
  name: String!
  price: Int!
  reviews: ReviewCreateNestedManyWithoutProductInput
  sku: String!
  sold: Int
  stock: Int!
  translations: ProductTranslationCreateNestedManyWithoutProductInput
  types: ProductTypeCreateNestedManyWithoutProductsInput
  updatedAt: DateTime
}

input ProductListRelationFilter {
  every: ProductWhereInput
  none: ProductWhereInput
  some: ProductWhereInput
}

type ProductMaxAggregate {
  createdAt: DateTime
  discription: String
  draft: Boolean
  featured: Boolean
  id: String
  languageCode: LanguageCode
  name: String
  price: Int
  sku: String
  sold: Int
  stock: Int
  updatedAt: DateTime
}

type ProductMinAggregate {
  createdAt: DateTime
  discription: String
  draft: Boolean
  featured: Boolean
  id: String
  languageCode: LanguageCode
  name: String
  price: Int
  sku: String
  sold: Int
  stock: Int
  updatedAt: DateTime
}

input ProductOrderByInput {
  createdAt: SortOrder
  discription: SortOrder
  draft: SortOrder
  featured: SortOrder
  id: SortOrder
  languageCode: SortOrder
  name: SortOrder
  price: SortOrder
  sku: SortOrder
  sold: SortOrder
  stock: SortOrder
  updatedAt: SortOrder
}

input ProductRelationFilter {
  is: ProductWhereInput
  isNot: ProductWhereInput
}

input ProductScalarWhereInput {
  AND: [ProductScalarWhereInput!]
  NOT: [ProductScalarWhereInput!]
  OR: [ProductScalarWhereInput!]
  createdAt: DateTimeFilter
  discription: StringNullableFilter
  draft: BoolNullableFilter
  featured: BoolNullableFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  price: IntFilter
  sku: StringFilter
  sold: IntNullableFilter
  stock: IntFilter
  updatedAt: DateTimeFilter
}

type ProductSumAggregate {
  price: Int
  sold: Int
  stock: Int
}

type ProductTranslation {
  createdAt: DateTime!
  discription: String
  id: ID!
  languageCode: LanguageCode!
  name: String!
  product: Product
  productId: String
  updatedAt: DateTime!
}

type ProductTranslationCountAggregate {
  _all: Int!
  discription: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  productId: Int!
}

input ProductTranslationCreateManyProductInput {
  discription: String
  id: String
  languageCode: LanguageCode
  name: String!
}

input ProductTranslationCreateManyProductInputEnvelope {
  data: [ProductTranslationCreateManyProductInput!]!
  skipDuplicates: Boolean
}

input ProductTranslationCreateNestedManyWithoutProductInput {
  connect: [ProductTranslationWhereUniqueInput!]
  connectOrCreate: [ProductTranslationCreateOrConnectWithoutProductInput!]
  create: [ProductTranslationCreateWithoutProductInput!]
  createMany: ProductTranslationCreateManyProductInputEnvelope
}

input ProductTranslationCreateOrConnectWithoutProductInput {
  create: ProductTranslationCreateWithoutProductInput!
  where: ProductTranslationWhereUniqueInput!
}

input ProductTranslationCreateWithoutProductInput {
  discription: String
  id: String
  languageCode: LanguageCode
  name: String!
}

input ProductTranslationListRelationFilter {
  every: ProductTranslationWhereInput
  none: ProductTranslationWhereInput
  some: ProductTranslationWhereInput
}

type ProductTranslationMaxAggregate {
  discription: String
  id: String
  languageCode: LanguageCode
  name: String
  productId: String
}

type ProductTranslationMinAggregate {
  discription: String
  id: String
  languageCode: LanguageCode
  name: String
  productId: String
}

input ProductTranslationScalarWhereInput {
  AND: [ProductTranslationScalarWhereInput!]
  NOT: [ProductTranslationScalarWhereInput!]
  OR: [ProductTranslationScalarWhereInput!]
  discription: StringNullableFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  productId: StringNullableFilter
}

input ProductTranslationUpdateManyMutationInput {
  discription: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProductTranslationUpdateManyWithWhereWithoutProductInput {
  data: ProductTranslationUpdateManyMutationInput!
  where: ProductTranslationScalarWhereInput!
}

input ProductTranslationUpdateManyWithoutProductInput {
  connect: [ProductTranslationWhereUniqueInput!]
  connectOrCreate: [ProductTranslationCreateOrConnectWithoutProductInput!]
  create: [ProductTranslationCreateWithoutProductInput!]
  createMany: ProductTranslationCreateManyProductInputEnvelope
  delete: [ProductTranslationWhereUniqueInput!]
  deleteMany: [ProductTranslationScalarWhereInput!]
  disconnect: [ProductTranslationWhereUniqueInput!]
  set: [ProductTranslationWhereUniqueInput!]
  update: [ProductTranslationUpdateWithWhereUniqueWithoutProductInput!]
  updateMany: [ProductTranslationUpdateManyWithWhereWithoutProductInput!]
  upsert: [ProductTranslationUpsertWithWhereUniqueWithoutProductInput!]
}

input ProductTranslationUpdateWithWhereUniqueWithoutProductInput {
  data: ProductTranslationUpdateWithoutProductInput!
  where: ProductTranslationWhereUniqueInput!
}

input ProductTranslationUpdateWithoutProductInput {
  discription: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProductTranslationUpsertWithWhereUniqueWithoutProductInput {
  create: ProductTranslationCreateWithoutProductInput!
  update: ProductTranslationUpdateWithoutProductInput!
  where: ProductTranslationWhereUniqueInput!
}

input ProductTranslationWhereInput {
  AND: [ProductTranslationWhereInput!]
  NOT: [ProductTranslationWhereInput!]
  OR: [ProductTranslationWhereInput!]
  discription: StringNullableFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  product: ProductRelationFilter
  productId: StringNullableFilter
}

input ProductTranslationWhereUniqueInput {
  id: String
}

"""商品分类（男装、女装等）"""
type ProductType {
  categories: [ProductCategory!]
  createdAt: DateTime!
  id: ID!
  languageCode: LanguageCode!
  name: String!
  products: [Product!]
  slug: String!
  translations: [ProductTypeTranslation!]
  updatedAt: DateTime
}

type ProductTypeCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  slug: Int!
  updatedAt: Int!
}

input ProductTypeCreateInput {
  categories: ProductCategoryCreateNestedManyWithoutTypesInput
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String!
  products: ProductCreateNestedManyWithoutTypesInput
  slug: String!
  translations: ProductTypeTranslationCreateNestedManyWithoutProductTypeInput
  updatedAt: DateTime
}

input ProductTypeCreateNestedManyWithoutCategoriesInput {
  connect: [ProductTypeWhereUniqueInput!]
  connectOrCreate: [ProductTypeCreateOrConnectWithoutCategoriesInput!]
  create: [ProductTypeCreateWithoutCategoriesInput!]
}

input ProductTypeCreateNestedManyWithoutProductsInput {
  connect: [ProductTypeWhereUniqueInput!]
  connectOrCreate: [ProductTypeCreateOrConnectWithoutProductsInput!]
  create: [ProductTypeCreateWithoutProductsInput!]
}

input ProductTypeCreateOrConnectWithoutCategoriesInput {
  create: ProductTypeCreateWithoutCategoriesInput!
  where: ProductTypeWhereUniqueInput!
}

input ProductTypeCreateOrConnectWithoutProductsInput {
  create: ProductTypeCreateWithoutProductsInput!
  where: ProductTypeWhereUniqueInput!
}

input ProductTypeCreateWithoutCategoriesInput {
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String!
  products: ProductCreateNestedManyWithoutTypesInput
  slug: String!
  translations: ProductTypeTranslationCreateNestedManyWithoutProductTypeInput
  updatedAt: DateTime
}

input ProductTypeCreateWithoutProductsInput {
  categories: ProductCategoryCreateNestedManyWithoutTypesInput
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String!
  slug: String!
  translations: ProductTypeTranslationCreateNestedManyWithoutProductTypeInput
  updatedAt: DateTime
}

input ProductTypeListRelationFilter {
  every: ProductTypeWhereInput
  none: ProductTypeWhereInput
  some: ProductTypeWhereInput
}

type ProductTypeMaxAggregate {
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String
  slug: String
  updatedAt: DateTime
}

type ProductTypeMinAggregate {
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String
  slug: String
  updatedAt: DateTime
}

input ProductTypeRelationFilter {
  is: ProductTypeWhereInput
  isNot: ProductTypeWhereInput
}

input ProductTypeScalarWhereInput {
  AND: [ProductTypeScalarWhereInput!]
  NOT: [ProductTypeScalarWhereInput!]
  OR: [ProductTypeScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  slug: StringFilter
  updatedAt: DateTimeNullableFilter
}

type ProductTypeTranslation {
  createdAt: DateTime!
  id: ID!
  languageCode: LanguageCode!
  name: String!
  productType: ProductType
  productTypeId: String
  updatedAt: DateTime
}

type ProductTypeTranslationCountAggregate {
  _all: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  productTypeId: Int!
}

input ProductTypeTranslationCreateManyProductTypeInput {
  id: String
  languageCode: LanguageCode
  name: String!
}

input ProductTypeTranslationCreateManyProductTypeInputEnvelope {
  data: [ProductTypeTranslationCreateManyProductTypeInput!]!
  skipDuplicates: Boolean
}

input ProductTypeTranslationCreateNestedManyWithoutProductTypeInput {
  connect: [ProductTypeTranslationWhereUniqueInput!]
  connectOrCreate: [ProductTypeTranslationCreateOrConnectWithoutProductTypeInput!]
  create: [ProductTypeTranslationCreateWithoutProductTypeInput!]
  createMany: ProductTypeTranslationCreateManyProductTypeInputEnvelope
}

input ProductTypeTranslationCreateOrConnectWithoutProductTypeInput {
  create: ProductTypeTranslationCreateWithoutProductTypeInput!
  where: ProductTypeTranslationWhereUniqueInput!
}

input ProductTypeTranslationCreateWithoutProductTypeInput {
  id: String
  languageCode: LanguageCode
  name: String!
}

input ProductTypeTranslationListRelationFilter {
  every: ProductTypeTranslationWhereInput
  none: ProductTypeTranslationWhereInput
  some: ProductTypeTranslationWhereInput
}

type ProductTypeTranslationMaxAggregate {
  id: String
  languageCode: LanguageCode
  name: String
  productTypeId: String
}

type ProductTypeTranslationMinAggregate {
  id: String
  languageCode: LanguageCode
  name: String
  productTypeId: String
}

input ProductTypeTranslationScalarWhereInput {
  AND: [ProductTypeTranslationScalarWhereInput!]
  NOT: [ProductTypeTranslationScalarWhereInput!]
  OR: [ProductTypeTranslationScalarWhereInput!]
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  productTypeId: StringNullableFilter
}

input ProductTypeTranslationUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProductTypeTranslationUpdateManyWithWhereWithoutProductTypeInput {
  data: ProductTypeTranslationUpdateManyMutationInput!
  where: ProductTypeTranslationScalarWhereInput!
}

input ProductTypeTranslationUpdateManyWithoutProductTypeInput {
  connect: [ProductTypeTranslationWhereUniqueInput!]
  connectOrCreate: [ProductTypeTranslationCreateOrConnectWithoutProductTypeInput!]
  create: [ProductTypeTranslationCreateWithoutProductTypeInput!]
  createMany: ProductTypeTranslationCreateManyProductTypeInputEnvelope
  delete: [ProductTypeTranslationWhereUniqueInput!]
  deleteMany: [ProductTypeTranslationScalarWhereInput!]
  disconnect: [ProductTypeTranslationWhereUniqueInput!]
  set: [ProductTypeTranslationWhereUniqueInput!]
  update: [ProductTypeTranslationUpdateWithWhereUniqueWithoutProductTypeInput!]
  updateMany: [ProductTypeTranslationUpdateManyWithWhereWithoutProductTypeInput!]
  upsert: [ProductTypeTranslationUpsertWithWhereUniqueWithoutProductTypeInput!]
}

input ProductTypeTranslationUpdateWithWhereUniqueWithoutProductTypeInput {
  data: ProductTypeTranslationUpdateWithoutProductTypeInput!
  where: ProductTypeTranslationWhereUniqueInput!
}

input ProductTypeTranslationUpdateWithoutProductTypeInput {
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProductTypeTranslationUpsertWithWhereUniqueWithoutProductTypeInput {
  create: ProductTypeTranslationCreateWithoutProductTypeInput!
  update: ProductTypeTranslationUpdateWithoutProductTypeInput!
  where: ProductTypeTranslationWhereUniqueInput!
}

input ProductTypeTranslationWhereInput {
  AND: [ProductTypeTranslationWhereInput!]
  NOT: [ProductTypeTranslationWhereInput!]
  OR: [ProductTypeTranslationWhereInput!]
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  productType: ProductTypeRelationFilter
  productTypeId: StringNullableFilter
}

input ProductTypeTranslationWhereUniqueInput {
  id: String
}

input ProductTypeUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ProductTypeUpdateManyWithWhereWithoutCategoriesInput {
  data: ProductTypeUpdateManyMutationInput!
  where: ProductTypeScalarWhereInput!
}

input ProductTypeUpdateManyWithWhereWithoutProductsInput {
  data: ProductTypeUpdateManyMutationInput!
  where: ProductTypeScalarWhereInput!
}

input ProductTypeUpdateManyWithoutCategoriesInput {
  connect: [ProductTypeWhereUniqueInput!]
  connectOrCreate: [ProductTypeCreateOrConnectWithoutCategoriesInput!]
  create: [ProductTypeCreateWithoutCategoriesInput!]
  delete: [ProductTypeWhereUniqueInput!]
  deleteMany: [ProductTypeScalarWhereInput!]
  disconnect: [ProductTypeWhereUniqueInput!]
  set: [ProductTypeWhereUniqueInput!]
  update: [ProductTypeUpdateWithWhereUniqueWithoutCategoriesInput!]
  updateMany: [ProductTypeUpdateManyWithWhereWithoutCategoriesInput!]
  upsert: [ProductTypeUpsertWithWhereUniqueWithoutCategoriesInput!]
}

input ProductTypeUpdateManyWithoutProductsInput {
  connect: [ProductTypeWhereUniqueInput!]
  connectOrCreate: [ProductTypeCreateOrConnectWithoutProductsInput!]
  create: [ProductTypeCreateWithoutProductsInput!]
  delete: [ProductTypeWhereUniqueInput!]
  deleteMany: [ProductTypeScalarWhereInput!]
  disconnect: [ProductTypeWhereUniqueInput!]
  set: [ProductTypeWhereUniqueInput!]
  update: [ProductTypeUpdateWithWhereUniqueWithoutProductsInput!]
  updateMany: [ProductTypeUpdateManyWithWhereWithoutProductsInput!]
  upsert: [ProductTypeUpsertWithWhereUniqueWithoutProductsInput!]
}

input ProductTypeUpdateWithWhereUniqueWithoutCategoriesInput {
  data: ProductTypeUpdateWithoutCategoriesInput!
  where: ProductTypeWhereUniqueInput!
}

input ProductTypeUpdateWithWhereUniqueWithoutProductsInput {
  data: ProductTypeUpdateWithoutProductsInput!
  where: ProductTypeWhereUniqueInput!
}

input ProductTypeUpdateWithoutCategoriesInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: ProductUpdateManyWithoutTypesInput
  slug: StringFieldUpdateOperationsInput
  translations: ProductTypeTranslationUpdateManyWithoutProductTypeInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ProductTypeUpdateWithoutProductsInput {
  categories: ProductCategoryUpdateManyWithoutTypesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  translations: ProductTypeTranslationUpdateManyWithoutProductTypeInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ProductTypeUpsertWithWhereUniqueWithoutCategoriesInput {
  create: ProductTypeCreateWithoutCategoriesInput!
  update: ProductTypeUpdateWithoutCategoriesInput!
  where: ProductTypeWhereUniqueInput!
}

input ProductTypeUpsertWithWhereUniqueWithoutProductsInput {
  create: ProductTypeCreateWithoutProductsInput!
  update: ProductTypeUpdateWithoutProductsInput!
  where: ProductTypeWhereUniqueInput!
}

input ProductTypeWhereInput {
  AND: [ProductTypeWhereInput!]
  NOT: [ProductTypeWhereInput!]
  OR: [ProductTypeWhereInput!]
  categories: ProductCategoryListRelationFilter
  createdAt: DateTimeFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  products: ProductListRelationFilter
  slug: StringFilter
  translations: ProductTypeTranslationListRelationFilter
  updatedAt: DateTimeNullableFilter
}

input ProductTypeWhereUniqueInput {
  id: String
  name: String
  slug: String
}

input ProductUpdateInput {
  assets: FileUpdateManyWithoutProductInput
  brands: BrandUpdateManyWithoutProductsInput
  categories: ProductCategoryUpdateManyWithoutProductsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discription: NullableStringFieldUpdateOperationsInput
  draft: NullableBoolFieldUpdateOperationsInput
  featured: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  likes: LikeUpdateManyWithoutProductInput
  name: StringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutProductInput
  sku: StringFieldUpdateOperationsInput
  sold: NullableIntFieldUpdateOperationsInput
  stock: IntFieldUpdateOperationsInput
  translations: ProductTranslationUpdateManyWithoutProductInput
  types: ProductTypeUpdateManyWithoutProductsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  variants: ProductVariantUpdateManyWithoutProductInput
}

input ProductUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  discription: NullableStringFieldUpdateOperationsInput
  draft: NullableBoolFieldUpdateOperationsInput
  featured: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  sku: StringFieldUpdateOperationsInput
  sold: NullableIntFieldUpdateOperationsInput
  stock: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProductUpdateManyWithWhereWithoutBrandsInput {
  data: ProductUpdateManyMutationInput!
  where: ProductScalarWhereInput!
}

input ProductUpdateManyWithWhereWithoutCategoriesInput {
  data: ProductUpdateManyMutationInput!
  where: ProductScalarWhereInput!
}

input ProductUpdateManyWithWhereWithoutTypesInput {
  data: ProductUpdateManyMutationInput!
  where: ProductScalarWhereInput!
}

input ProductUpdateManyWithoutBrandsInput {
  connect: [ProductWhereUniqueInput!]
  connectOrCreate: [ProductCreateOrConnectWithoutBrandsInput!]
  create: [ProductCreateWithoutBrandsInput!]
  delete: [ProductWhereUniqueInput!]
  deleteMany: [ProductScalarWhereInput!]
  disconnect: [ProductWhereUniqueInput!]
  set: [ProductWhereUniqueInput!]
  update: [ProductUpdateWithWhereUniqueWithoutBrandsInput!]
  updateMany: [ProductUpdateManyWithWhereWithoutBrandsInput!]
  upsert: [ProductUpsertWithWhereUniqueWithoutBrandsInput!]
}

input ProductUpdateManyWithoutCategoriesInput {
  connect: [ProductWhereUniqueInput!]
  connectOrCreate: [ProductCreateOrConnectWithoutCategoriesInput!]
  create: [ProductCreateWithoutCategoriesInput!]
  delete: [ProductWhereUniqueInput!]
  deleteMany: [ProductScalarWhereInput!]
  disconnect: [ProductWhereUniqueInput!]
  set: [ProductWhereUniqueInput!]
  update: [ProductUpdateWithWhereUniqueWithoutCategoriesInput!]
  updateMany: [ProductUpdateManyWithWhereWithoutCategoriesInput!]
  upsert: [ProductUpsertWithWhereUniqueWithoutCategoriesInput!]
}

input ProductUpdateManyWithoutTypesInput {
  connect: [ProductWhereUniqueInput!]
  connectOrCreate: [ProductCreateOrConnectWithoutTypesInput!]
  create: [ProductCreateWithoutTypesInput!]
  delete: [ProductWhereUniqueInput!]
  deleteMany: [ProductScalarWhereInput!]
  disconnect: [ProductWhereUniqueInput!]
  set: [ProductWhereUniqueInput!]
  update: [ProductUpdateWithWhereUniqueWithoutTypesInput!]
  updateMany: [ProductUpdateManyWithWhereWithoutTypesInput!]
  upsert: [ProductUpsertWithWhereUniqueWithoutTypesInput!]
}

input ProductUpdateOneRequiredWithoutVariantsInput {
  connect: ProductWhereUniqueInput
  connectOrCreate: ProductCreateOrConnectWithoutVariantsInput
  create: ProductCreateWithoutVariantsInput
  update: ProductUpdateWithoutVariantsInput
  upsert: ProductUpsertWithoutVariantsInput
}

input ProductUpdateOneWithoutAssetsInput {
  connect: ProductWhereUniqueInput
  connectOrCreate: ProductCreateOrConnectWithoutAssetsInput
  create: ProductCreateWithoutAssetsInput
  delete: Boolean
  disconnect: Boolean
  update: ProductUpdateWithoutAssetsInput
  upsert: ProductUpsertWithoutAssetsInput
}

input ProductUpdateOneWithoutLikesInput {
  connect: ProductWhereUniqueInput
  connectOrCreate: ProductCreateOrConnectWithoutLikesInput
  create: ProductCreateWithoutLikesInput
  delete: Boolean
  disconnect: Boolean
  update: ProductUpdateWithoutLikesInput
  upsert: ProductUpsertWithoutLikesInput
}

input ProductUpdateOneWithoutReviewsInput {
  connect: ProductWhereUniqueInput
  connectOrCreate: ProductCreateOrConnectWithoutReviewsInput
  create: ProductCreateWithoutReviewsInput
  delete: Boolean
  disconnect: Boolean
  update: ProductUpdateWithoutReviewsInput
  upsert: ProductUpsertWithoutReviewsInput
}

input ProductUpdateWithWhereUniqueWithoutBrandsInput {
  data: ProductUpdateWithoutBrandsInput!
  where: ProductWhereUniqueInput!
}

input ProductUpdateWithWhereUniqueWithoutCategoriesInput {
  data: ProductUpdateWithoutCategoriesInput!
  where: ProductWhereUniqueInput!
}

input ProductUpdateWithWhereUniqueWithoutTypesInput {
  data: ProductUpdateWithoutTypesInput!
  where: ProductWhereUniqueInput!
}

input ProductUpdateWithoutAssetsInput {
  brands: BrandUpdateManyWithoutProductsInput
  categories: ProductCategoryUpdateManyWithoutProductsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discription: NullableStringFieldUpdateOperationsInput
  draft: NullableBoolFieldUpdateOperationsInput
  featured: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  likes: LikeUpdateManyWithoutProductInput
  name: StringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutProductInput
  sku: StringFieldUpdateOperationsInput
  sold: NullableIntFieldUpdateOperationsInput
  stock: IntFieldUpdateOperationsInput
  translations: ProductTranslationUpdateManyWithoutProductInput
  types: ProductTypeUpdateManyWithoutProductsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  variants: ProductVariantUpdateManyWithoutProductInput
}

input ProductUpdateWithoutBrandsInput {
  assets: FileUpdateManyWithoutProductInput
  categories: ProductCategoryUpdateManyWithoutProductsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discription: NullableStringFieldUpdateOperationsInput
  draft: NullableBoolFieldUpdateOperationsInput
  featured: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  likes: LikeUpdateManyWithoutProductInput
  name: StringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutProductInput
  sku: StringFieldUpdateOperationsInput
  sold: NullableIntFieldUpdateOperationsInput
  stock: IntFieldUpdateOperationsInput
  translations: ProductTranslationUpdateManyWithoutProductInput
  types: ProductTypeUpdateManyWithoutProductsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  variants: ProductVariantUpdateManyWithoutProductInput
}

input ProductUpdateWithoutCategoriesInput {
  assets: FileUpdateManyWithoutProductInput
  brands: BrandUpdateManyWithoutProductsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discription: NullableStringFieldUpdateOperationsInput
  draft: NullableBoolFieldUpdateOperationsInput
  featured: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  likes: LikeUpdateManyWithoutProductInput
  name: StringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutProductInput
  sku: StringFieldUpdateOperationsInput
  sold: NullableIntFieldUpdateOperationsInput
  stock: IntFieldUpdateOperationsInput
  translations: ProductTranslationUpdateManyWithoutProductInput
  types: ProductTypeUpdateManyWithoutProductsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  variants: ProductVariantUpdateManyWithoutProductInput
}

input ProductUpdateWithoutLikesInput {
  assets: FileUpdateManyWithoutProductInput
  brands: BrandUpdateManyWithoutProductsInput
  categories: ProductCategoryUpdateManyWithoutProductsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discription: NullableStringFieldUpdateOperationsInput
  draft: NullableBoolFieldUpdateOperationsInput
  featured: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutProductInput
  sku: StringFieldUpdateOperationsInput
  sold: NullableIntFieldUpdateOperationsInput
  stock: IntFieldUpdateOperationsInput
  translations: ProductTranslationUpdateManyWithoutProductInput
  types: ProductTypeUpdateManyWithoutProductsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  variants: ProductVariantUpdateManyWithoutProductInput
}

input ProductUpdateWithoutReviewsInput {
  assets: FileUpdateManyWithoutProductInput
  brands: BrandUpdateManyWithoutProductsInput
  categories: ProductCategoryUpdateManyWithoutProductsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discription: NullableStringFieldUpdateOperationsInput
  draft: NullableBoolFieldUpdateOperationsInput
  featured: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  likes: LikeUpdateManyWithoutProductInput
  name: StringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  sku: StringFieldUpdateOperationsInput
  sold: NullableIntFieldUpdateOperationsInput
  stock: IntFieldUpdateOperationsInput
  translations: ProductTranslationUpdateManyWithoutProductInput
  types: ProductTypeUpdateManyWithoutProductsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  variants: ProductVariantUpdateManyWithoutProductInput
}

input ProductUpdateWithoutTypesInput {
  assets: FileUpdateManyWithoutProductInput
  brands: BrandUpdateManyWithoutProductsInput
  categories: ProductCategoryUpdateManyWithoutProductsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discription: NullableStringFieldUpdateOperationsInput
  draft: NullableBoolFieldUpdateOperationsInput
  featured: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  likes: LikeUpdateManyWithoutProductInput
  name: StringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutProductInput
  sku: StringFieldUpdateOperationsInput
  sold: NullableIntFieldUpdateOperationsInput
  stock: IntFieldUpdateOperationsInput
  translations: ProductTranslationUpdateManyWithoutProductInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  variants: ProductVariantUpdateManyWithoutProductInput
}

input ProductUpdateWithoutVariantsInput {
  assets: FileUpdateManyWithoutProductInput
  brands: BrandUpdateManyWithoutProductsInput
  categories: ProductCategoryUpdateManyWithoutProductsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discription: NullableStringFieldUpdateOperationsInput
  draft: NullableBoolFieldUpdateOperationsInput
  featured: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  likes: LikeUpdateManyWithoutProductInput
  name: StringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutProductInput
  sku: StringFieldUpdateOperationsInput
  sold: NullableIntFieldUpdateOperationsInput
  stock: IntFieldUpdateOperationsInput
  translations: ProductTranslationUpdateManyWithoutProductInput
  types: ProductTypeUpdateManyWithoutProductsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProductUpsertWithWhereUniqueWithoutBrandsInput {
  create: ProductCreateWithoutBrandsInput!
  update: ProductUpdateWithoutBrandsInput!
  where: ProductWhereUniqueInput!
}

input ProductUpsertWithWhereUniqueWithoutCategoriesInput {
  create: ProductCreateWithoutCategoriesInput!
  update: ProductUpdateWithoutCategoriesInput!
  where: ProductWhereUniqueInput!
}

input ProductUpsertWithWhereUniqueWithoutTypesInput {
  create: ProductCreateWithoutTypesInput!
  update: ProductUpdateWithoutTypesInput!
  where: ProductWhereUniqueInput!
}

input ProductUpsertWithoutAssetsInput {
  create: ProductCreateWithoutAssetsInput!
  update: ProductUpdateWithoutAssetsInput!
}

input ProductUpsertWithoutLikesInput {
  create: ProductCreateWithoutLikesInput!
  update: ProductUpdateWithoutLikesInput!
}

input ProductUpsertWithoutReviewsInput {
  create: ProductCreateWithoutReviewsInput!
  update: ProductUpdateWithoutReviewsInput!
}

input ProductUpsertWithoutVariantsInput {
  create: ProductCreateWithoutVariantsInput!
  update: ProductUpdateWithoutVariantsInput!
}

"""子商品"""
type ProductVariant {
  assets: [File!]
  brands: String!
  channels: [Channel!]
  color: ProductVariantColor
  createdAt: DateTime!
  currencyCode: CurrencyCode!
  customFields: JSON
  draft: Boolean
  id: ID!
  languageCode: LanguageCode!
  name: String!
  price: Int!
  product: Product!
  productId: String!
  sale: Int
  size: ProductVariantSize
  sku: String!
  sold: Int!
  stock: Int
  style: ProductVariantStyle
  translations: [ProductVariantTranslation!]
  updatedAt: DateTime
}

type ProductVariantAvgAggregate {
  price: Float
  sale: Float
  sold: Float
  stock: Float
}

"""商品颜色"""
type ProductVariantColor {
  createdAt: DateTime!
  id: ID!
  languageCode: LanguageCode!
  name: String!
  productVariant: ProductVariant
  productVariantId: String
  translations: [ProductVariantColorTranslation!]
  updatedAt: DateTime
  value: String!
}

type ProductVariantColorCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  productVariantId: Int!
  updatedAt: Int!
  value: Int!
}

input ProductVariantColorCreateNestedOneWithoutProductVariantInput {
  connect: ProductVariantColorWhereUniqueInput
  connectOrCreate: ProductVariantColorCreateOrConnectWithoutProductVariantInput
  create: ProductVariantColorCreateWithoutProductVariantInput
}

input ProductVariantColorCreateOrConnectWithoutProductVariantInput {
  create: ProductVariantColorCreateWithoutProductVariantInput!
  where: ProductVariantColorWhereUniqueInput!
}

input ProductVariantColorCreateWithoutProductVariantInput {
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String!
  translations: ProductVariantColorTranslationCreateNestedManyWithoutProductVariantColorInput
  updatedAt: DateTime
  value: String!
}

type ProductVariantColorMaxAggregate {
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String
  productVariantId: String
  updatedAt: DateTime
  value: String
}

type ProductVariantColorMinAggregate {
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String
  productVariantId: String
  updatedAt: DateTime
  value: String
}

input ProductVariantColorRelationFilter {
  is: ProductVariantColorWhereInput
  isNot: ProductVariantColorWhereInput
}

type ProductVariantColorTranslation {
  ProductVariantColor: ProductVariantColor
  createdAt: DateTime!
  id: ID!
  languageCode: LanguageCode!
  name: String!
  productVariantColorId: String
}

type ProductVariantColorTranslationCountAggregate {
  _all: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  productVariantColorId: Int!
}

input ProductVariantColorTranslationCreateManyProductVariantColorInput {
  id: String
  languageCode: LanguageCode
  name: String!
}

input ProductVariantColorTranslationCreateManyProductVariantColorInputEnvelope {
  data: [ProductVariantColorTranslationCreateManyProductVariantColorInput!]!
  skipDuplicates: Boolean
}

input ProductVariantColorTranslationCreateNestedManyWithoutProductVariantColorInput {
  connect: [ProductVariantColorTranslationWhereUniqueInput!]
  connectOrCreate: [ProductVariantColorTranslationCreateOrConnectWithoutProductVariantColorInput!]
  create: [ProductVariantColorTranslationCreateWithoutProductVariantColorInput!]
  createMany: ProductVariantColorTranslationCreateManyProductVariantColorInputEnvelope
}

input ProductVariantColorTranslationCreateOrConnectWithoutProductVariantColorInput {
  create: ProductVariantColorTranslationCreateWithoutProductVariantColorInput!
  where: ProductVariantColorTranslationWhereUniqueInput!
}

input ProductVariantColorTranslationCreateWithoutProductVariantColorInput {
  id: String
  languageCode: LanguageCode
  name: String!
}

input ProductVariantColorTranslationListRelationFilter {
  every: ProductVariantColorTranslationWhereInput
  none: ProductVariantColorTranslationWhereInput
  some: ProductVariantColorTranslationWhereInput
}

type ProductVariantColorTranslationMaxAggregate {
  id: String
  languageCode: LanguageCode
  name: String
  productVariantColorId: String
}

type ProductVariantColorTranslationMinAggregate {
  id: String
  languageCode: LanguageCode
  name: String
  productVariantColorId: String
}

input ProductVariantColorTranslationScalarWhereInput {
  AND: [ProductVariantColorTranslationScalarWhereInput!]
  NOT: [ProductVariantColorTranslationScalarWhereInput!]
  OR: [ProductVariantColorTranslationScalarWhereInput!]
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  productVariantColorId: StringNullableFilter
}

input ProductVariantColorTranslationUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProductVariantColorTranslationUpdateManyWithWhereWithoutProductVariantColorInput {
  data: ProductVariantColorTranslationUpdateManyMutationInput!
  where: ProductVariantColorTranslationScalarWhereInput!
}

input ProductVariantColorTranslationUpdateManyWithoutProductVariantColorInput {
  connect: [ProductVariantColorTranslationWhereUniqueInput!]
  connectOrCreate: [ProductVariantColorTranslationCreateOrConnectWithoutProductVariantColorInput!]
  create: [ProductVariantColorTranslationCreateWithoutProductVariantColorInput!]
  createMany: ProductVariantColorTranslationCreateManyProductVariantColorInputEnvelope
  delete: [ProductVariantColorTranslationWhereUniqueInput!]
  deleteMany: [ProductVariantColorTranslationScalarWhereInput!]
  disconnect: [ProductVariantColorTranslationWhereUniqueInput!]
  set: [ProductVariantColorTranslationWhereUniqueInput!]
  update: [ProductVariantColorTranslationUpdateWithWhereUniqueWithoutProductVariantColorInput!]
  updateMany: [ProductVariantColorTranslationUpdateManyWithWhereWithoutProductVariantColorInput!]
  upsert: [ProductVariantColorTranslationUpsertWithWhereUniqueWithoutProductVariantColorInput!]
}

input ProductVariantColorTranslationUpdateWithWhereUniqueWithoutProductVariantColorInput {
  data: ProductVariantColorTranslationUpdateWithoutProductVariantColorInput!
  where: ProductVariantColorTranslationWhereUniqueInput!
}

input ProductVariantColorTranslationUpdateWithoutProductVariantColorInput {
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProductVariantColorTranslationUpsertWithWhereUniqueWithoutProductVariantColorInput {
  create: ProductVariantColorTranslationCreateWithoutProductVariantColorInput!
  update: ProductVariantColorTranslationUpdateWithoutProductVariantColorInput!
  where: ProductVariantColorTranslationWhereUniqueInput!
}

input ProductVariantColorTranslationWhereInput {
  AND: [ProductVariantColorTranslationWhereInput!]
  NOT: [ProductVariantColorTranslationWhereInput!]
  OR: [ProductVariantColorTranslationWhereInput!]
  ProductVariantColor: ProductVariantColorRelationFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  productVariantColorId: StringNullableFilter
}

input ProductVariantColorTranslationWhereUniqueInput {
  id: String
}

input ProductVariantColorUpdateOneWithoutProductVariantInput {
  connect: ProductVariantColorWhereUniqueInput
  connectOrCreate: ProductVariantColorCreateOrConnectWithoutProductVariantInput
  create: ProductVariantColorCreateWithoutProductVariantInput
  delete: Boolean
  disconnect: Boolean
  update: ProductVariantColorUpdateWithoutProductVariantInput
  upsert: ProductVariantColorUpsertWithoutProductVariantInput
}

input ProductVariantColorUpdateWithoutProductVariantInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  translations: ProductVariantColorTranslationUpdateManyWithoutProductVariantColorInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input ProductVariantColorUpsertWithoutProductVariantInput {
  create: ProductVariantColorCreateWithoutProductVariantInput!
  update: ProductVariantColorUpdateWithoutProductVariantInput!
}

input ProductVariantColorWhereInput {
  AND: [ProductVariantColorWhereInput!]
  NOT: [ProductVariantColorWhereInput!]
  OR: [ProductVariantColorWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  productVariant: ProductVariantRelationFilter
  productVariantId: StringNullableFilter
  translations: ProductVariantColorTranslationListRelationFilter
  updatedAt: DateTimeNullableFilter
  value: StringFilter
}

input ProductVariantColorWhereUniqueInput {
  id: String
  value: String
}

type ProductVariantCountAggregate {
  _all: Int!
  brands: Int!
  createdAt: Int!
  currencyCode: Int!
  customFields: Int!
  draft: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  price: Int!
  productId: Int!
  sale: Int!
  sku: Int!
  sold: Int!
  stock: Int!
  updatedAt: Int!
}

input ProductVariantCreateManyProductInput {
  brands: String!
  createdAt: DateTime
  currencyCode: CurrencyCode
  customFields: JSON
  draft: Boolean
  id: String
  languageCode: LanguageCode
  name: String!
  price: Int!
  sale: Int
  sku: String!
  sold: Int
  stock: Int
  updatedAt: DateTime
}

input ProductVariantCreateManyProductInputEnvelope {
  data: [ProductVariantCreateManyProductInput!]!
  skipDuplicates: Boolean
}

input ProductVariantCreateNestedManyWithoutProductInput {
  connect: [ProductVariantWhereUniqueInput!]
  connectOrCreate: [ProductVariantCreateOrConnectWithoutProductInput!]
  create: [ProductVariantCreateWithoutProductInput!]
  createMany: ProductVariantCreateManyProductInputEnvelope
}

input ProductVariantCreateNestedOneWithoutAssetsInput {
  connect: ProductVariantWhereUniqueInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutAssetsInput
  create: ProductVariantCreateWithoutAssetsInput
}

input ProductVariantCreateNestedOneWithoutChannelsInput {
  connect: ProductVariantWhereUniqueInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutChannelsInput
  create: ProductVariantCreateWithoutChannelsInput
}

input ProductVariantCreateNestedOneWithoutStyleInput {
  connect: ProductVariantWhereUniqueInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutStyleInput
  create: ProductVariantCreateWithoutStyleInput
}

input ProductVariantCreateOrConnectWithoutAssetsInput {
  create: ProductVariantCreateWithoutAssetsInput!
  where: ProductVariantWhereUniqueInput!
}

input ProductVariantCreateOrConnectWithoutChannelsInput {
  create: ProductVariantCreateWithoutChannelsInput!
  where: ProductVariantWhereUniqueInput!
}

input ProductVariantCreateOrConnectWithoutProductInput {
  create: ProductVariantCreateWithoutProductInput!
  where: ProductVariantWhereUniqueInput!
}

input ProductVariantCreateOrConnectWithoutStyleInput {
  create: ProductVariantCreateWithoutStyleInput!
  where: ProductVariantWhereUniqueInput!
}

input ProductVariantCreateWithoutAssetsInput {
  brands: String!
  channels: ChannelCreateNestedManyWithoutProductVariantInput
  color: ProductVariantColorCreateNestedOneWithoutProductVariantInput
  createdAt: DateTime
  currencyCode: CurrencyCode
  customFields: JSON
  draft: Boolean
  id: String
  languageCode: LanguageCode
  name: String!
  price: Int!
  product: ProductCreateNestedOneWithoutVariantsInput!
  sale: Int
  size: ProductVariantSizeCreateNestedOneWithoutProductVariantInput
  sku: String!
  sold: Int
  stock: Int
  style: ProductVariantStyleCreateNestedOneWithoutProductVariantInput
  translations: ProductVariantTranslationCreateNestedManyWithoutProductVariantInput
  updatedAt: DateTime
}

input ProductVariantCreateWithoutChannelsInput {
  assets: FileCreateNestedManyWithoutProductVariantInput
  brands: String!
  color: ProductVariantColorCreateNestedOneWithoutProductVariantInput
  createdAt: DateTime
  currencyCode: CurrencyCode
  customFields: JSON
  draft: Boolean
  id: String
  languageCode: LanguageCode
  name: String!
  price: Int!
  product: ProductCreateNestedOneWithoutVariantsInput!
  sale: Int
  size: ProductVariantSizeCreateNestedOneWithoutProductVariantInput
  sku: String!
  sold: Int
  stock: Int
  style: ProductVariantStyleCreateNestedOneWithoutProductVariantInput
  translations: ProductVariantTranslationCreateNestedManyWithoutProductVariantInput
  updatedAt: DateTime
}

input ProductVariantCreateWithoutProductInput {
  assets: FileCreateNestedManyWithoutProductVariantInput
  brands: String!
  channels: ChannelCreateNestedManyWithoutProductVariantInput
  color: ProductVariantColorCreateNestedOneWithoutProductVariantInput
  createdAt: DateTime
  currencyCode: CurrencyCode
  customFields: JSON
  draft: Boolean
  id: String
  languageCode: LanguageCode
  name: String!
  price: Int!
  sale: Int
  size: ProductVariantSizeCreateNestedOneWithoutProductVariantInput
  sku: String!
  sold: Int
  stock: Int
  style: ProductVariantStyleCreateNestedOneWithoutProductVariantInput
  translations: ProductVariantTranslationCreateNestedManyWithoutProductVariantInput
  updatedAt: DateTime
}

input ProductVariantCreateWithoutStyleInput {
  assets: FileCreateNestedManyWithoutProductVariantInput
  brands: String!
  channels: ChannelCreateNestedManyWithoutProductVariantInput
  color: ProductVariantColorCreateNestedOneWithoutProductVariantInput
  createdAt: DateTime
  currencyCode: CurrencyCode
  customFields: JSON
  draft: Boolean
  id: String
  languageCode: LanguageCode
  name: String!
  price: Int!
  product: ProductCreateNestedOneWithoutVariantsInput!
  sale: Int
  size: ProductVariantSizeCreateNestedOneWithoutProductVariantInput
  sku: String!
  sold: Int
  stock: Int
  translations: ProductVariantTranslationCreateNestedManyWithoutProductVariantInput
  updatedAt: DateTime
}

input ProductVariantListRelationFilter {
  every: ProductVariantWhereInput
  none: ProductVariantWhereInput
  some: ProductVariantWhereInput
}

type ProductVariantMaxAggregate {
  brands: String
  createdAt: DateTime
  currencyCode: CurrencyCode
  draft: Boolean
  id: String
  languageCode: LanguageCode
  name: String
  price: Int
  productId: String
  sale: Int
  sku: String
  sold: Int
  stock: Int
  updatedAt: DateTime
}

type ProductVariantMinAggregate {
  brands: String
  createdAt: DateTime
  currencyCode: CurrencyCode
  draft: Boolean
  id: String
  languageCode: LanguageCode
  name: String
  price: Int
  productId: String
  sale: Int
  sku: String
  sold: Int
  stock: Int
  updatedAt: DateTime
}

input ProductVariantRelationFilter {
  is: ProductVariantWhereInput
  isNot: ProductVariantWhereInput
}

input ProductVariantScalarWhereInput {
  AND: [ProductVariantScalarWhereInput!]
  NOT: [ProductVariantScalarWhereInput!]
  OR: [ProductVariantScalarWhereInput!]
  brands: StringFilter
  createdAt: DateTimeFilter
  currencyCode: EnumCurrencyCodeFilter
  customFields: JsonNullableFilter
  draft: BoolNullableFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  price: IntFilter
  productId: StringFilter
  sale: IntNullableFilter
  sku: StringFilter
  sold: IntFilter
  stock: IntNullableFilter
  updatedAt: DateTimeNullableFilter
}

type ProductVariantSize {
  createdAt: DateTime!
  id: ID!
  name: String!
  productVariant: ProductVariant
  productVariantId: String
  updatedAt: DateTime
}

type ProductVariantSizeCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  name: Int!
  productVariantId: Int!
  updatedAt: Int!
}

input ProductVariantSizeCreateNestedOneWithoutProductVariantInput {
  connect: ProductVariantSizeWhereUniqueInput
  connectOrCreate: ProductVariantSizeCreateOrConnectWithoutProductVariantInput
  create: ProductVariantSizeCreateWithoutProductVariantInput
}

input ProductVariantSizeCreateOrConnectWithoutProductVariantInput {
  create: ProductVariantSizeCreateWithoutProductVariantInput!
  where: ProductVariantSizeWhereUniqueInput!
}

input ProductVariantSizeCreateWithoutProductVariantInput {
  createdAt: DateTime
  id: String
  name: String!
  updatedAt: DateTime
}

type ProductVariantSizeMaxAggregate {
  createdAt: DateTime
  id: String
  name: String
  productVariantId: String
  updatedAt: DateTime
}

type ProductVariantSizeMinAggregate {
  createdAt: DateTime
  id: String
  name: String
  productVariantId: String
  updatedAt: DateTime
}

input ProductVariantSizeRelationFilter {
  is: ProductVariantSizeWhereInput
  isNot: ProductVariantSizeWhereInput
}

input ProductVariantSizeUpdateOneWithoutProductVariantInput {
  connect: ProductVariantSizeWhereUniqueInput
  connectOrCreate: ProductVariantSizeCreateOrConnectWithoutProductVariantInput
  create: ProductVariantSizeCreateWithoutProductVariantInput
  delete: Boolean
  disconnect: Boolean
  update: ProductVariantSizeUpdateWithoutProductVariantInput
  upsert: ProductVariantSizeUpsertWithoutProductVariantInput
}

input ProductVariantSizeUpdateWithoutProductVariantInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ProductVariantSizeUpsertWithoutProductVariantInput {
  create: ProductVariantSizeCreateWithoutProductVariantInput!
  update: ProductVariantSizeUpdateWithoutProductVariantInput!
}

input ProductVariantSizeWhereInput {
  AND: [ProductVariantSizeWhereInput!]
  NOT: [ProductVariantSizeWhereInput!]
  OR: [ProductVariantSizeWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  name: StringFilter
  productVariant: ProductVariantRelationFilter
  productVariantId: StringNullableFilter
  updatedAt: DateTimeNullableFilter
}

input ProductVariantSizeWhereUniqueInput {
  id: String
}

type ProductVariantStyle {
  asset: File!
  createdAt: DateTime!
  fileId: String!
  id: ID!
  languageCode: LanguageCode!
  name: String!
  productVariant: ProductVariant
  productVariantId: String
  translations: [ProductVariantStyleTranslation!]
  updatedAt: DateTime
}

type ProductVariantStyleCountAggregate {
  _all: Int!
  createdAt: Int!
  fileId: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  productVariantId: Int!
  updatedAt: Int!
}

input ProductVariantStyleCreateManyAssetInput {
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String!
  productVariantId: String
  updatedAt: DateTime
}

input ProductVariantStyleCreateManyAssetInputEnvelope {
  data: [ProductVariantStyleCreateManyAssetInput!]!
  skipDuplicates: Boolean
}

input ProductVariantStyleCreateNestedManyWithoutAssetInput {
  connect: [ProductVariantStyleWhereUniqueInput!]
  connectOrCreate: [ProductVariantStyleCreateOrConnectWithoutAssetInput!]
  create: [ProductVariantStyleCreateWithoutAssetInput!]
  createMany: ProductVariantStyleCreateManyAssetInputEnvelope
}

input ProductVariantStyleCreateNestedOneWithoutProductVariantInput {
  connect: ProductVariantStyleWhereUniqueInput
  connectOrCreate: ProductVariantStyleCreateOrConnectWithoutProductVariantInput
  create: ProductVariantStyleCreateWithoutProductVariantInput
}

input ProductVariantStyleCreateOrConnectWithoutAssetInput {
  create: ProductVariantStyleCreateWithoutAssetInput!
  where: ProductVariantStyleWhereUniqueInput!
}

input ProductVariantStyleCreateOrConnectWithoutProductVariantInput {
  create: ProductVariantStyleCreateWithoutProductVariantInput!
  where: ProductVariantStyleWhereUniqueInput!
}

input ProductVariantStyleCreateWithoutAssetInput {
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String!
  productVariant: ProductVariantCreateNestedOneWithoutStyleInput
  translations: ProductVariantStyleTranslationCreateNestedManyWithoutProductVariantStyleInput
  updatedAt: DateTime
}

input ProductVariantStyleCreateWithoutProductVariantInput {
  asset: FileCreateNestedOneWithoutProductVariantStyleInput!
  createdAt: DateTime
  id: String
  languageCode: LanguageCode
  name: String!
  translations: ProductVariantStyleTranslationCreateNestedManyWithoutProductVariantStyleInput
  updatedAt: DateTime
}

input ProductVariantStyleListRelationFilter {
  every: ProductVariantStyleWhereInput
  none: ProductVariantStyleWhereInput
  some: ProductVariantStyleWhereInput
}

type ProductVariantStyleMaxAggregate {
  createdAt: DateTime
  fileId: String
  id: String
  languageCode: LanguageCode
  name: String
  productVariantId: String
  updatedAt: DateTime
}

type ProductVariantStyleMinAggregate {
  createdAt: DateTime
  fileId: String
  id: String
  languageCode: LanguageCode
  name: String
  productVariantId: String
  updatedAt: DateTime
}

input ProductVariantStyleRelationFilter {
  is: ProductVariantStyleWhereInput
  isNot: ProductVariantStyleWhereInput
}

input ProductVariantStyleScalarWhereInput {
  AND: [ProductVariantStyleScalarWhereInput!]
  NOT: [ProductVariantStyleScalarWhereInput!]
  OR: [ProductVariantStyleScalarWhereInput!]
  createdAt: DateTimeFilter
  fileId: StringFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  productVariantId: StringNullableFilter
  updatedAt: DateTimeNullableFilter
}

type ProductVariantStyleTranslation {
  createdAt: DateTime!
  id: ID!
  languageCode: LanguageCode!
  name: String!
  productVariantStyle: ProductVariantStyle
  productVariantStyleId: String
}

type ProductVariantStyleTranslationCountAggregate {
  _all: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  productVariantStyleId: Int!
}

input ProductVariantStyleTranslationCreateManyProductVariantStyleInput {
  id: String
  languageCode: LanguageCode
  name: String!
}

input ProductVariantStyleTranslationCreateManyProductVariantStyleInputEnvelope {
  data: [ProductVariantStyleTranslationCreateManyProductVariantStyleInput!]!
  skipDuplicates: Boolean
}

input ProductVariantStyleTranslationCreateNestedManyWithoutProductVariantStyleInput {
  connect: [ProductVariantStyleTranslationWhereUniqueInput!]
  connectOrCreate: [ProductVariantStyleTranslationCreateOrConnectWithoutProductVariantStyleInput!]
  create: [ProductVariantStyleTranslationCreateWithoutProductVariantStyleInput!]
  createMany: ProductVariantStyleTranslationCreateManyProductVariantStyleInputEnvelope
}

input ProductVariantStyleTranslationCreateOrConnectWithoutProductVariantStyleInput {
  create: ProductVariantStyleTranslationCreateWithoutProductVariantStyleInput!
  where: ProductVariantStyleTranslationWhereUniqueInput!
}

input ProductVariantStyleTranslationCreateWithoutProductVariantStyleInput {
  id: String
  languageCode: LanguageCode
  name: String!
}

input ProductVariantStyleTranslationListRelationFilter {
  every: ProductVariantStyleTranslationWhereInput
  none: ProductVariantStyleTranslationWhereInput
  some: ProductVariantStyleTranslationWhereInput
}

type ProductVariantStyleTranslationMaxAggregate {
  id: String
  languageCode: LanguageCode
  name: String
  productVariantStyleId: String
}

type ProductVariantStyleTranslationMinAggregate {
  id: String
  languageCode: LanguageCode
  name: String
  productVariantStyleId: String
}

input ProductVariantStyleTranslationScalarWhereInput {
  AND: [ProductVariantStyleTranslationScalarWhereInput!]
  NOT: [ProductVariantStyleTranslationScalarWhereInput!]
  OR: [ProductVariantStyleTranslationScalarWhereInput!]
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  productVariantStyleId: StringNullableFilter
}

input ProductVariantStyleTranslationUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProductVariantStyleTranslationUpdateManyWithWhereWithoutProductVariantStyleInput {
  data: ProductVariantStyleTranslationUpdateManyMutationInput!
  where: ProductVariantStyleTranslationScalarWhereInput!
}

input ProductVariantStyleTranslationUpdateManyWithoutProductVariantStyleInput {
  connect: [ProductVariantStyleTranslationWhereUniqueInput!]
  connectOrCreate: [ProductVariantStyleTranslationCreateOrConnectWithoutProductVariantStyleInput!]
  create: [ProductVariantStyleTranslationCreateWithoutProductVariantStyleInput!]
  createMany: ProductVariantStyleTranslationCreateManyProductVariantStyleInputEnvelope
  delete: [ProductVariantStyleTranslationWhereUniqueInput!]
  deleteMany: [ProductVariantStyleTranslationScalarWhereInput!]
  disconnect: [ProductVariantStyleTranslationWhereUniqueInput!]
  set: [ProductVariantStyleTranslationWhereUniqueInput!]
  update: [ProductVariantStyleTranslationUpdateWithWhereUniqueWithoutProductVariantStyleInput!]
  updateMany: [ProductVariantStyleTranslationUpdateManyWithWhereWithoutProductVariantStyleInput!]
  upsert: [ProductVariantStyleTranslationUpsertWithWhereUniqueWithoutProductVariantStyleInput!]
}

input ProductVariantStyleTranslationUpdateWithWhereUniqueWithoutProductVariantStyleInput {
  data: ProductVariantStyleTranslationUpdateWithoutProductVariantStyleInput!
  where: ProductVariantStyleTranslationWhereUniqueInput!
}

input ProductVariantStyleTranslationUpdateWithoutProductVariantStyleInput {
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProductVariantStyleTranslationUpsertWithWhereUniqueWithoutProductVariantStyleInput {
  create: ProductVariantStyleTranslationCreateWithoutProductVariantStyleInput!
  update: ProductVariantStyleTranslationUpdateWithoutProductVariantStyleInput!
  where: ProductVariantStyleTranslationWhereUniqueInput!
}

input ProductVariantStyleTranslationWhereInput {
  AND: [ProductVariantStyleTranslationWhereInput!]
  NOT: [ProductVariantStyleTranslationWhereInput!]
  OR: [ProductVariantStyleTranslationWhereInput!]
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  productVariantStyle: ProductVariantStyleRelationFilter
  productVariantStyleId: StringNullableFilter
}

input ProductVariantStyleTranslationWhereUniqueInput {
  id: String
}

input ProductVariantStyleUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ProductVariantStyleUpdateManyWithWhereWithoutAssetInput {
  data: ProductVariantStyleUpdateManyMutationInput!
  where: ProductVariantStyleScalarWhereInput!
}

input ProductVariantStyleUpdateManyWithoutAssetInput {
  connect: [ProductVariantStyleWhereUniqueInput!]
  connectOrCreate: [ProductVariantStyleCreateOrConnectWithoutAssetInput!]
  create: [ProductVariantStyleCreateWithoutAssetInput!]
  createMany: ProductVariantStyleCreateManyAssetInputEnvelope
  delete: [ProductVariantStyleWhereUniqueInput!]
  deleteMany: [ProductVariantStyleScalarWhereInput!]
  disconnect: [ProductVariantStyleWhereUniqueInput!]
  set: [ProductVariantStyleWhereUniqueInput!]
  update: [ProductVariantStyleUpdateWithWhereUniqueWithoutAssetInput!]
  updateMany: [ProductVariantStyleUpdateManyWithWhereWithoutAssetInput!]
  upsert: [ProductVariantStyleUpsertWithWhereUniqueWithoutAssetInput!]
}

input ProductVariantStyleUpdateOneWithoutProductVariantInput {
  connect: ProductVariantStyleWhereUniqueInput
  connectOrCreate: ProductVariantStyleCreateOrConnectWithoutProductVariantInput
  create: ProductVariantStyleCreateWithoutProductVariantInput
  delete: Boolean
  disconnect: Boolean
  update: ProductVariantStyleUpdateWithoutProductVariantInput
  upsert: ProductVariantStyleUpsertWithoutProductVariantInput
}

input ProductVariantStyleUpdateWithWhereUniqueWithoutAssetInput {
  data: ProductVariantStyleUpdateWithoutAssetInput!
  where: ProductVariantStyleWhereUniqueInput!
}

input ProductVariantStyleUpdateWithoutAssetInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  productVariant: ProductVariantUpdateOneWithoutStyleInput
  translations: ProductVariantStyleTranslationUpdateManyWithoutProductVariantStyleInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ProductVariantStyleUpdateWithoutProductVariantInput {
  asset: FileUpdateOneRequiredWithoutProductVariantStyleInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  translations: ProductVariantStyleTranslationUpdateManyWithoutProductVariantStyleInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ProductVariantStyleUpsertWithWhereUniqueWithoutAssetInput {
  create: ProductVariantStyleCreateWithoutAssetInput!
  update: ProductVariantStyleUpdateWithoutAssetInput!
  where: ProductVariantStyleWhereUniqueInput!
}

input ProductVariantStyleUpsertWithoutProductVariantInput {
  create: ProductVariantStyleCreateWithoutProductVariantInput!
  update: ProductVariantStyleUpdateWithoutProductVariantInput!
}

input ProductVariantStyleWhereInput {
  AND: [ProductVariantStyleWhereInput!]
  NOT: [ProductVariantStyleWhereInput!]
  OR: [ProductVariantStyleWhereInput!]
  asset: FileRelationFilter
  createdAt: DateTimeFilter
  fileId: StringFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  productVariant: ProductVariantRelationFilter
  productVariantId: StringNullableFilter
  translations: ProductVariantStyleTranslationListRelationFilter
  updatedAt: DateTimeNullableFilter
}

input ProductVariantStyleWhereUniqueInput {
  id: String
}

type ProductVariantSumAggregate {
  price: Int
  sale: Int
  sold: Int
  stock: Int
}

type ProductVariantTranslation {
  ProductVariant: ProductVariant
  createdAt: DateTime!
  id: ID!
  languageCode: LanguageCode!
  name: String!
  productVariantId: String
}

type ProductVariantTranslationCountAggregate {
  _all: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  productVariantId: Int!
}

input ProductVariantTranslationCreateManyProductVariantInput {
  id: String
  languageCode: LanguageCode
  name: String!
}

input ProductVariantTranslationCreateManyProductVariantInputEnvelope {
  data: [ProductVariantTranslationCreateManyProductVariantInput!]!
  skipDuplicates: Boolean
}

input ProductVariantTranslationCreateNestedManyWithoutProductVariantInput {
  connect: [ProductVariantTranslationWhereUniqueInput!]
  connectOrCreate: [ProductVariantTranslationCreateOrConnectWithoutProductVariantInput!]
  create: [ProductVariantTranslationCreateWithoutProductVariantInput!]
  createMany: ProductVariantTranslationCreateManyProductVariantInputEnvelope
}

input ProductVariantTranslationCreateOrConnectWithoutProductVariantInput {
  create: ProductVariantTranslationCreateWithoutProductVariantInput!
  where: ProductVariantTranslationWhereUniqueInput!
}

input ProductVariantTranslationCreateWithoutProductVariantInput {
  id: String
  languageCode: LanguageCode
  name: String!
}

input ProductVariantTranslationListRelationFilter {
  every: ProductVariantTranslationWhereInput
  none: ProductVariantTranslationWhereInput
  some: ProductVariantTranslationWhereInput
}

type ProductVariantTranslationMaxAggregate {
  id: String
  languageCode: LanguageCode
  name: String
  productVariantId: String
}

type ProductVariantTranslationMinAggregate {
  id: String
  languageCode: LanguageCode
  name: String
  productVariantId: String
}

input ProductVariantTranslationScalarWhereInput {
  AND: [ProductVariantTranslationScalarWhereInput!]
  NOT: [ProductVariantTranslationScalarWhereInput!]
  OR: [ProductVariantTranslationScalarWhereInput!]
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  productVariantId: StringNullableFilter
}

input ProductVariantTranslationUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProductVariantTranslationUpdateManyWithWhereWithoutProductVariantInput {
  data: ProductVariantTranslationUpdateManyMutationInput!
  where: ProductVariantTranslationScalarWhereInput!
}

input ProductVariantTranslationUpdateManyWithoutProductVariantInput {
  connect: [ProductVariantTranslationWhereUniqueInput!]
  connectOrCreate: [ProductVariantTranslationCreateOrConnectWithoutProductVariantInput!]
  create: [ProductVariantTranslationCreateWithoutProductVariantInput!]
  createMany: ProductVariantTranslationCreateManyProductVariantInputEnvelope
  delete: [ProductVariantTranslationWhereUniqueInput!]
  deleteMany: [ProductVariantTranslationScalarWhereInput!]
  disconnect: [ProductVariantTranslationWhereUniqueInput!]
  set: [ProductVariantTranslationWhereUniqueInput!]
  update: [ProductVariantTranslationUpdateWithWhereUniqueWithoutProductVariantInput!]
  updateMany: [ProductVariantTranslationUpdateManyWithWhereWithoutProductVariantInput!]
  upsert: [ProductVariantTranslationUpsertWithWhereUniqueWithoutProductVariantInput!]
}

input ProductVariantTranslationUpdateWithWhereUniqueWithoutProductVariantInput {
  data: ProductVariantTranslationUpdateWithoutProductVariantInput!
  where: ProductVariantTranslationWhereUniqueInput!
}

input ProductVariantTranslationUpdateWithoutProductVariantInput {
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProductVariantTranslationUpsertWithWhereUniqueWithoutProductVariantInput {
  create: ProductVariantTranslationCreateWithoutProductVariantInput!
  update: ProductVariantTranslationUpdateWithoutProductVariantInput!
  where: ProductVariantTranslationWhereUniqueInput!
}

input ProductVariantTranslationWhereInput {
  AND: [ProductVariantTranslationWhereInput!]
  NOT: [ProductVariantTranslationWhereInput!]
  OR: [ProductVariantTranslationWhereInput!]
  ProductVariant: ProductVariantRelationFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  productVariantId: StringNullableFilter
}

input ProductVariantTranslationWhereUniqueInput {
  id: String
}

input ProductVariantUpdateManyMutationInput {
  brands: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  currencyCode: EnumCurrencyCodeFieldUpdateOperationsInput
  customFields: JSON
  draft: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  sale: NullableIntFieldUpdateOperationsInput
  sku: StringFieldUpdateOperationsInput
  sold: IntFieldUpdateOperationsInput
  stock: NullableIntFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ProductVariantUpdateManyWithWhereWithoutProductInput {
  data: ProductVariantUpdateManyMutationInput!
  where: ProductVariantScalarWhereInput!
}

input ProductVariantUpdateManyWithoutProductInput {
  connect: [ProductVariantWhereUniqueInput!]
  connectOrCreate: [ProductVariantCreateOrConnectWithoutProductInput!]
  create: [ProductVariantCreateWithoutProductInput!]
  createMany: ProductVariantCreateManyProductInputEnvelope
  delete: [ProductVariantWhereUniqueInput!]
  deleteMany: [ProductVariantScalarWhereInput!]
  disconnect: [ProductVariantWhereUniqueInput!]
  set: [ProductVariantWhereUniqueInput!]
  update: [ProductVariantUpdateWithWhereUniqueWithoutProductInput!]
  updateMany: [ProductVariantUpdateManyWithWhereWithoutProductInput!]
  upsert: [ProductVariantUpsertWithWhereUniqueWithoutProductInput!]
}

input ProductVariantUpdateOneWithoutAssetsInput {
  connect: ProductVariantWhereUniqueInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutAssetsInput
  create: ProductVariantCreateWithoutAssetsInput
  delete: Boolean
  disconnect: Boolean
  update: ProductVariantUpdateWithoutAssetsInput
  upsert: ProductVariantUpsertWithoutAssetsInput
}

input ProductVariantUpdateOneWithoutChannelsInput {
  connect: ProductVariantWhereUniqueInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutChannelsInput
  create: ProductVariantCreateWithoutChannelsInput
  delete: Boolean
  disconnect: Boolean
  update: ProductVariantUpdateWithoutChannelsInput
  upsert: ProductVariantUpsertWithoutChannelsInput
}

input ProductVariantUpdateOneWithoutStyleInput {
  connect: ProductVariantWhereUniqueInput
  connectOrCreate: ProductVariantCreateOrConnectWithoutStyleInput
  create: ProductVariantCreateWithoutStyleInput
  delete: Boolean
  disconnect: Boolean
  update: ProductVariantUpdateWithoutStyleInput
  upsert: ProductVariantUpsertWithoutStyleInput
}

input ProductVariantUpdateWithWhereUniqueWithoutProductInput {
  data: ProductVariantUpdateWithoutProductInput!
  where: ProductVariantWhereUniqueInput!
}

input ProductVariantUpdateWithoutAssetsInput {
  brands: StringFieldUpdateOperationsInput
  channels: ChannelUpdateManyWithoutProductVariantInput
  color: ProductVariantColorUpdateOneWithoutProductVariantInput
  createdAt: DateTimeFieldUpdateOperationsInput
  currencyCode: EnumCurrencyCodeFieldUpdateOperationsInput
  customFields: JSON
  draft: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutVariantsInput
  sale: NullableIntFieldUpdateOperationsInput
  size: ProductVariantSizeUpdateOneWithoutProductVariantInput
  sku: StringFieldUpdateOperationsInput
  sold: IntFieldUpdateOperationsInput
  stock: NullableIntFieldUpdateOperationsInput
  style: ProductVariantStyleUpdateOneWithoutProductVariantInput
  translations: ProductVariantTranslationUpdateManyWithoutProductVariantInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ProductVariantUpdateWithoutChannelsInput {
  assets: FileUpdateManyWithoutProductVariantInput
  brands: StringFieldUpdateOperationsInput
  color: ProductVariantColorUpdateOneWithoutProductVariantInput
  createdAt: DateTimeFieldUpdateOperationsInput
  currencyCode: EnumCurrencyCodeFieldUpdateOperationsInput
  customFields: JSON
  draft: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutVariantsInput
  sale: NullableIntFieldUpdateOperationsInput
  size: ProductVariantSizeUpdateOneWithoutProductVariantInput
  sku: StringFieldUpdateOperationsInput
  sold: IntFieldUpdateOperationsInput
  stock: NullableIntFieldUpdateOperationsInput
  style: ProductVariantStyleUpdateOneWithoutProductVariantInput
  translations: ProductVariantTranslationUpdateManyWithoutProductVariantInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ProductVariantUpdateWithoutProductInput {
  assets: FileUpdateManyWithoutProductVariantInput
  brands: StringFieldUpdateOperationsInput
  channels: ChannelUpdateManyWithoutProductVariantInput
  color: ProductVariantColorUpdateOneWithoutProductVariantInput
  createdAt: DateTimeFieldUpdateOperationsInput
  currencyCode: EnumCurrencyCodeFieldUpdateOperationsInput
  customFields: JSON
  draft: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  sale: NullableIntFieldUpdateOperationsInput
  size: ProductVariantSizeUpdateOneWithoutProductVariantInput
  sku: StringFieldUpdateOperationsInput
  sold: IntFieldUpdateOperationsInput
  stock: NullableIntFieldUpdateOperationsInput
  style: ProductVariantStyleUpdateOneWithoutProductVariantInput
  translations: ProductVariantTranslationUpdateManyWithoutProductVariantInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ProductVariantUpdateWithoutStyleInput {
  assets: FileUpdateManyWithoutProductVariantInput
  brands: StringFieldUpdateOperationsInput
  channels: ChannelUpdateManyWithoutProductVariantInput
  color: ProductVariantColorUpdateOneWithoutProductVariantInput
  createdAt: DateTimeFieldUpdateOperationsInput
  currencyCode: EnumCurrencyCodeFieldUpdateOperationsInput
  customFields: JSON
  draft: NullableBoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  product: ProductUpdateOneRequiredWithoutVariantsInput
  sale: NullableIntFieldUpdateOperationsInput
  size: ProductVariantSizeUpdateOneWithoutProductVariantInput
  sku: StringFieldUpdateOperationsInput
  sold: IntFieldUpdateOperationsInput
  stock: NullableIntFieldUpdateOperationsInput
  translations: ProductVariantTranslationUpdateManyWithoutProductVariantInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ProductVariantUpsertWithWhereUniqueWithoutProductInput {
  create: ProductVariantCreateWithoutProductInput!
  update: ProductVariantUpdateWithoutProductInput!
  where: ProductVariantWhereUniqueInput!
}

input ProductVariantUpsertWithoutAssetsInput {
  create: ProductVariantCreateWithoutAssetsInput!
  update: ProductVariantUpdateWithoutAssetsInput!
}

input ProductVariantUpsertWithoutChannelsInput {
  create: ProductVariantCreateWithoutChannelsInput!
  update: ProductVariantUpdateWithoutChannelsInput!
}

input ProductVariantUpsertWithoutStyleInput {
  create: ProductVariantCreateWithoutStyleInput!
  update: ProductVariantUpdateWithoutStyleInput!
}

input ProductVariantWhereInput {
  AND: [ProductVariantWhereInput!]
  NOT: [ProductVariantWhereInput!]
  OR: [ProductVariantWhereInput!]
  assets: FileListRelationFilter
  brands: StringFilter
  channels: ChannelListRelationFilter
  color: ProductVariantColorRelationFilter
  createdAt: DateTimeFilter
  currencyCode: EnumCurrencyCodeFilter
  customFields: JsonNullableFilter
  draft: BoolNullableFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  price: IntFilter
  product: ProductRelationFilter
  productId: StringFilter
  sale: IntNullableFilter
  size: ProductVariantSizeRelationFilter
  sku: StringFilter
  sold: IntFilter
  stock: IntNullableFilter
  style: ProductVariantStyleRelationFilter
  translations: ProductVariantTranslationListRelationFilter
  updatedAt: DateTimeNullableFilter
}

input ProductVariantWhereUniqueInput {
  id: String
  sku: String
}

input ProductWhereInput {
  AND: [ProductWhereInput!]
  NOT: [ProductWhereInput!]
  OR: [ProductWhereInput!]
  assets: FileListRelationFilter
  brands: BrandListRelationFilter
  categories: ProductCategoryListRelationFilter
  createdAt: DateTimeFilter
  discription: StringNullableFilter
  draft: BoolNullableFilter
  featured: BoolNullableFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  likes: LikeListRelationFilter
  name: StringFilter
  price: IntFilter
  reviews: ReviewListRelationFilter
  sku: StringFilter
  sold: IntNullableFilter
  stock: IntFilter
  translations: ProductTranslationListRelationFilter
  types: ProductTypeListRelationFilter
  updatedAt: DateTimeFilter
  variants: ProductVariantListRelationFilter
}

input ProductWhereUniqueInput {
  id: String
  sku: String
}

"""Profile"""
type Profile {
  addresses: [Address!]
  avatar: File
  brands: [Brand!]
  cards: [Card!]
  comments: [Comment!]
  createdAt: DateTime!
  followedBy: [Profile!]
  following: [Profile!]
  id: ID!
  level: Int
  likes: [Like!]
  name: String!
  phone: String
  point: Int
  reviews: [Review!]
  updatedAt: DateTime
  uploads: [File!]
  user: User!
  userId: String!
}

type ProfileAvgAggregate {
  level: Float
  phone: Float
  point: Float
}

type ProfileCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  level: Int!
  name: Int!
  phone: Int!
  point: Int!
  updatedAt: Int!
  userId: Int!
}

input ProfileCreateNestedManyWithoutBrandsInput {
  connect: [ProfileWhereUniqueInput!]
  connectOrCreate: [ProfileCreateOrConnectWithoutBrandsInput!]
  create: [ProfileCreateWithoutBrandsInput!]
}

input ProfileCreateNestedManyWithoutFollowedByInput {
  connect: [ProfileWhereUniqueInput!]
  connectOrCreate: [ProfileCreateOrConnectWithoutFollowedByInput!]
  create: [ProfileCreateWithoutFollowedByInput!]
}

input ProfileCreateNestedManyWithoutFollowingInput {
  connect: [ProfileWhereUniqueInput!]
  connectOrCreate: [ProfileCreateOrConnectWithoutFollowingInput!]
  create: [ProfileCreateWithoutFollowingInput!]
}

input ProfileCreateNestedOneWithoutAvatarInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutAvatarInput
  create: ProfileCreateWithoutAvatarInput
}

input ProfileCreateNestedOneWithoutLikesInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutLikesInput
  create: ProfileCreateWithoutLikesInput
}

input ProfileCreateNestedOneWithoutReviewsInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutReviewsInput
  create: ProfileCreateWithoutReviewsInput
}

input ProfileCreateNestedOneWithoutUploadsInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutUploadsInput
  create: ProfileCreateWithoutUploadsInput
}

input ProfileCreateNestedOneWithoutUserInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutUserInput
  create: ProfileCreateWithoutUserInput
}

input ProfileCreateOrConnectWithoutAvatarInput {
  create: ProfileCreateWithoutAvatarInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutBrandsInput {
  create: ProfileCreateWithoutBrandsInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutFollowedByInput {
  create: ProfileCreateWithoutFollowedByInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutFollowingInput {
  create: ProfileCreateWithoutFollowingInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutLikesInput {
  create: ProfileCreateWithoutLikesInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutReviewsInput {
  create: ProfileCreateWithoutReviewsInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutUploadsInput {
  create: ProfileCreateWithoutUploadsInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutUserInput {
  create: ProfileCreateWithoutUserInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateWithoutAvatarInput {
  addresses: AddressCreateNestedManyWithoutProfileInput
  brands: BrandCreateNestedManyWithoutFoundersInput
  cards: CardCreateNestedManyWithoutProfileInput
  comments: CommentCreateNestedManyWithoutByInput
  createdAt: DateTime
  followedBy: ProfileCreateNestedManyWithoutFollowingInput
  following: ProfileCreateNestedManyWithoutFollowedByInput
  id: String
  level: Int
  likes: LikeCreateNestedManyWithoutByInput
  name: String!
  phone: String
  point: Int
  reviews: ReviewCreateNestedManyWithoutByInput
  updatedAt: DateTime
  uploads: FileCreateNestedManyWithoutProfileInput
  user: UserCreateNestedOneWithoutProfileInput!
}

input ProfileCreateWithoutBrandsInput {
  addresses: AddressCreateNestedManyWithoutProfileInput
  avatar: FileCreateNestedOneWithoutProfileAvatarInput
  cards: CardCreateNestedManyWithoutProfileInput
  comments: CommentCreateNestedManyWithoutByInput
  createdAt: DateTime
  followedBy: ProfileCreateNestedManyWithoutFollowingInput
  following: ProfileCreateNestedManyWithoutFollowedByInput
  id: String
  level: Int
  likes: LikeCreateNestedManyWithoutByInput
  name: String!
  phone: String
  point: Int
  reviews: ReviewCreateNestedManyWithoutByInput
  updatedAt: DateTime
  uploads: FileCreateNestedManyWithoutProfileInput
  user: UserCreateNestedOneWithoutProfileInput!
}

input ProfileCreateWithoutFollowedByInput {
  addresses: AddressCreateNestedManyWithoutProfileInput
  avatar: FileCreateNestedOneWithoutProfileAvatarInput
  brands: BrandCreateNestedManyWithoutFoundersInput
  cards: CardCreateNestedManyWithoutProfileInput
  comments: CommentCreateNestedManyWithoutByInput
  createdAt: DateTime
  following: ProfileCreateNestedManyWithoutFollowedByInput
  id: String
  level: Int
  likes: LikeCreateNestedManyWithoutByInput
  name: String!
  phone: String
  point: Int
  reviews: ReviewCreateNestedManyWithoutByInput
  updatedAt: DateTime
  uploads: FileCreateNestedManyWithoutProfileInput
  user: UserCreateNestedOneWithoutProfileInput!
}

input ProfileCreateWithoutFollowingInput {
  addresses: AddressCreateNestedManyWithoutProfileInput
  avatar: FileCreateNestedOneWithoutProfileAvatarInput
  brands: BrandCreateNestedManyWithoutFoundersInput
  cards: CardCreateNestedManyWithoutProfileInput
  comments: CommentCreateNestedManyWithoutByInput
  createdAt: DateTime
  followedBy: ProfileCreateNestedManyWithoutFollowingInput
  id: String
  level: Int
  likes: LikeCreateNestedManyWithoutByInput
  name: String!
  phone: String
  point: Int
  reviews: ReviewCreateNestedManyWithoutByInput
  updatedAt: DateTime
  uploads: FileCreateNestedManyWithoutProfileInput
  user: UserCreateNestedOneWithoutProfileInput!
}

input ProfileCreateWithoutLikesInput {
  addresses: AddressCreateNestedManyWithoutProfileInput
  avatar: FileCreateNestedOneWithoutProfileAvatarInput
  brands: BrandCreateNestedManyWithoutFoundersInput
  cards: CardCreateNestedManyWithoutProfileInput
  comments: CommentCreateNestedManyWithoutByInput
  createdAt: DateTime
  followedBy: ProfileCreateNestedManyWithoutFollowingInput
  following: ProfileCreateNestedManyWithoutFollowedByInput
  id: String
  level: Int
  name: String!
  phone: String
  point: Int
  reviews: ReviewCreateNestedManyWithoutByInput
  updatedAt: DateTime
  uploads: FileCreateNestedManyWithoutProfileInput
  user: UserCreateNestedOneWithoutProfileInput!
}

input ProfileCreateWithoutReviewsInput {
  addresses: AddressCreateNestedManyWithoutProfileInput
  avatar: FileCreateNestedOneWithoutProfileAvatarInput
  brands: BrandCreateNestedManyWithoutFoundersInput
  cards: CardCreateNestedManyWithoutProfileInput
  comments: CommentCreateNestedManyWithoutByInput
  createdAt: DateTime
  followedBy: ProfileCreateNestedManyWithoutFollowingInput
  following: ProfileCreateNestedManyWithoutFollowedByInput
  id: String
  level: Int
  likes: LikeCreateNestedManyWithoutByInput
  name: String!
  phone: String
  point: Int
  updatedAt: DateTime
  uploads: FileCreateNestedManyWithoutProfileInput
  user: UserCreateNestedOneWithoutProfileInput!
}

input ProfileCreateWithoutUploadsInput {
  addresses: AddressCreateNestedManyWithoutProfileInput
  avatar: FileCreateNestedOneWithoutProfileAvatarInput
  brands: BrandCreateNestedManyWithoutFoundersInput
  cards: CardCreateNestedManyWithoutProfileInput
  comments: CommentCreateNestedManyWithoutByInput
  createdAt: DateTime
  followedBy: ProfileCreateNestedManyWithoutFollowingInput
  following: ProfileCreateNestedManyWithoutFollowedByInput
  id: String
  level: Int
  likes: LikeCreateNestedManyWithoutByInput
  name: String!
  phone: String
  point: Int
  reviews: ReviewCreateNestedManyWithoutByInput
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutProfileInput!
}

input ProfileCreateWithoutUserInput {
  addresses: AddressCreateNestedManyWithoutProfileInput
  avatar: FileCreateNestedOneWithoutProfileAvatarInput
  brands: BrandCreateNestedManyWithoutFoundersInput
  cards: CardCreateNestedManyWithoutProfileInput
  comments: CommentCreateNestedManyWithoutByInput
  createdAt: DateTime
  followedBy: ProfileCreateNestedManyWithoutFollowingInput
  following: ProfileCreateNestedManyWithoutFollowedByInput
  id: String
  level: Int
  likes: LikeCreateNestedManyWithoutByInput
  name: String!
  phone: String
  point: Int
  reviews: ReviewCreateNestedManyWithoutByInput
  updatedAt: DateTime
  uploads: FileCreateNestedManyWithoutProfileInput
}

input ProfileListRelationFilter {
  every: ProfileWhereInput
  none: ProfileWhereInput
  some: ProfileWhereInput
}

type ProfileMaxAggregate {
  createdAt: DateTime
  id: String
  level: Int
  name: String
  phone: String
  point: Int
  updatedAt: DateTime
  userId: String
}

type ProfileMinAggregate {
  createdAt: DateTime
  id: String
  level: Int
  name: String
  phone: String
  point: Int
  updatedAt: DateTime
  userId: String
}

input ProfileRelationFilter {
  is: ProfileWhereInput
  isNot: ProfileWhereInput
}

input ProfileScalarWhereInput {
  AND: [ProfileScalarWhereInput!]
  NOT: [ProfileScalarWhereInput!]
  OR: [ProfileScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  level: IntNullableFilter
  name: StringFilter
  phone: BigIntNullableFilter
  point: IntNullableFilter
  updatedAt: DateTimeNullableFilter
  userId: StringFilter
}

type ProfileSumAggregate {
  level: Int
  phone: String
  point: Int
}

input ProfileUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  level: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  phone: NullableBigIntFieldUpdateOperationsInput
  point: NullableIntFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input ProfileUpdateManyWithWhereWithoutBrandsInput {
  data: ProfileUpdateManyMutationInput!
  where: ProfileScalarWhereInput!
}

input ProfileUpdateManyWithWhereWithoutFollowedByInput {
  data: ProfileUpdateManyMutationInput!
  where: ProfileScalarWhereInput!
}

input ProfileUpdateManyWithWhereWithoutFollowingInput {
  data: ProfileUpdateManyMutationInput!
  where: ProfileScalarWhereInput!
}

input ProfileUpdateManyWithoutBrandsInput {
  connect: [ProfileWhereUniqueInput!]
  connectOrCreate: [ProfileCreateOrConnectWithoutBrandsInput!]
  create: [ProfileCreateWithoutBrandsInput!]
  delete: [ProfileWhereUniqueInput!]
  deleteMany: [ProfileScalarWhereInput!]
  disconnect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutBrandsInput!]
  updateMany: [ProfileUpdateManyWithWhereWithoutBrandsInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutBrandsInput!]
}

input ProfileUpdateManyWithoutFollowedByInput {
  connect: [ProfileWhereUniqueInput!]
  connectOrCreate: [ProfileCreateOrConnectWithoutFollowedByInput!]
  create: [ProfileCreateWithoutFollowedByInput!]
  delete: [ProfileWhereUniqueInput!]
  deleteMany: [ProfileScalarWhereInput!]
  disconnect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutFollowedByInput!]
  updateMany: [ProfileUpdateManyWithWhereWithoutFollowedByInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutFollowedByInput!]
}

input ProfileUpdateManyWithoutFollowingInput {
  connect: [ProfileWhereUniqueInput!]
  connectOrCreate: [ProfileCreateOrConnectWithoutFollowingInput!]
  create: [ProfileCreateWithoutFollowingInput!]
  delete: [ProfileWhereUniqueInput!]
  deleteMany: [ProfileScalarWhereInput!]
  disconnect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutFollowingInput!]
  updateMany: [ProfileUpdateManyWithWhereWithoutFollowingInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutFollowingInput!]
}

input ProfileUpdateOneRequiredWithoutLikesInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutLikesInput
  create: ProfileCreateWithoutLikesInput
  update: ProfileUpdateWithoutLikesInput
  upsert: ProfileUpsertWithoutLikesInput
}

input ProfileUpdateOneRequiredWithoutReviewsInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutReviewsInput
  create: ProfileCreateWithoutReviewsInput
  update: ProfileUpdateWithoutReviewsInput
  upsert: ProfileUpsertWithoutReviewsInput
}

input ProfileUpdateOneWithoutAvatarInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutAvatarInput
  create: ProfileCreateWithoutAvatarInput
  delete: Boolean
  disconnect: Boolean
  update: ProfileUpdateWithoutAvatarInput
  upsert: ProfileUpsertWithoutAvatarInput
}

input ProfileUpdateOneWithoutUploadsInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutUploadsInput
  create: ProfileCreateWithoutUploadsInput
  delete: Boolean
  disconnect: Boolean
  update: ProfileUpdateWithoutUploadsInput
  upsert: ProfileUpsertWithoutUploadsInput
}

input ProfileUpdateOneWithoutUserInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutUserInput
  create: ProfileCreateWithoutUserInput
  delete: Boolean
  disconnect: Boolean
  update: ProfileUpdateWithoutUserInput
  upsert: ProfileUpsertWithoutUserInput
}

input ProfileUpdateWithWhereUniqueWithoutBrandsInput {
  data: ProfileUpdateWithoutBrandsInput!
  where: ProfileWhereUniqueInput!
}

input ProfileUpdateWithWhereUniqueWithoutFollowedByInput {
  data: ProfileUpdateWithoutFollowedByInput!
  where: ProfileWhereUniqueInput!
}

input ProfileUpdateWithWhereUniqueWithoutFollowingInput {
  data: ProfileUpdateWithoutFollowingInput!
  where: ProfileWhereUniqueInput!
}

input ProfileUpdateWithoutAvatarInput {
  addresses: AddressUpdateManyWithoutProfileInput
  brands: BrandUpdateManyWithoutFoundersInput
  cards: CardUpdateManyWithoutProfileInput
  comments: CommentUpdateManyWithoutByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  followedBy: ProfileUpdateManyWithoutFollowingInput
  following: ProfileUpdateManyWithoutFollowedByInput
  id: StringFieldUpdateOperationsInput
  level: NullableIntFieldUpdateOperationsInput
  likes: LikeUpdateManyWithoutByInput
  name: StringFieldUpdateOperationsInput
  phone: NullableBigIntFieldUpdateOperationsInput
  point: NullableIntFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutByInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
  uploads: FileUpdateManyWithoutProfileInput
  user: UserUpdateOneRequiredWithoutProfileInput
}

input ProfileUpdateWithoutBrandsInput {
  addresses: AddressUpdateManyWithoutProfileInput
  avatar: FileUpdateOneWithoutProfileAvatarInput
  cards: CardUpdateManyWithoutProfileInput
  comments: CommentUpdateManyWithoutByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  followedBy: ProfileUpdateManyWithoutFollowingInput
  following: ProfileUpdateManyWithoutFollowedByInput
  id: StringFieldUpdateOperationsInput
  level: NullableIntFieldUpdateOperationsInput
  likes: LikeUpdateManyWithoutByInput
  name: StringFieldUpdateOperationsInput
  phone: NullableBigIntFieldUpdateOperationsInput
  point: NullableIntFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutByInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
  uploads: FileUpdateManyWithoutProfileInput
  user: UserUpdateOneRequiredWithoutProfileInput
}

input ProfileUpdateWithoutFollowedByInput {
  addresses: AddressUpdateManyWithoutProfileInput
  avatar: FileUpdateOneWithoutProfileAvatarInput
  brands: BrandUpdateManyWithoutFoundersInput
  cards: CardUpdateManyWithoutProfileInput
  comments: CommentUpdateManyWithoutByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  following: ProfileUpdateManyWithoutFollowedByInput
  id: StringFieldUpdateOperationsInput
  level: NullableIntFieldUpdateOperationsInput
  likes: LikeUpdateManyWithoutByInput
  name: StringFieldUpdateOperationsInput
  phone: NullableBigIntFieldUpdateOperationsInput
  point: NullableIntFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutByInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
  uploads: FileUpdateManyWithoutProfileInput
  user: UserUpdateOneRequiredWithoutProfileInput
}

input ProfileUpdateWithoutFollowingInput {
  addresses: AddressUpdateManyWithoutProfileInput
  avatar: FileUpdateOneWithoutProfileAvatarInput
  brands: BrandUpdateManyWithoutFoundersInput
  cards: CardUpdateManyWithoutProfileInput
  comments: CommentUpdateManyWithoutByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  followedBy: ProfileUpdateManyWithoutFollowingInput
  id: StringFieldUpdateOperationsInput
  level: NullableIntFieldUpdateOperationsInput
  likes: LikeUpdateManyWithoutByInput
  name: StringFieldUpdateOperationsInput
  phone: NullableBigIntFieldUpdateOperationsInput
  point: NullableIntFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutByInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
  uploads: FileUpdateManyWithoutProfileInput
  user: UserUpdateOneRequiredWithoutProfileInput
}

input ProfileUpdateWithoutLikesInput {
  addresses: AddressUpdateManyWithoutProfileInput
  avatar: FileUpdateOneWithoutProfileAvatarInput
  brands: BrandUpdateManyWithoutFoundersInput
  cards: CardUpdateManyWithoutProfileInput
  comments: CommentUpdateManyWithoutByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  followedBy: ProfileUpdateManyWithoutFollowingInput
  following: ProfileUpdateManyWithoutFollowedByInput
  id: StringFieldUpdateOperationsInput
  level: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  phone: NullableBigIntFieldUpdateOperationsInput
  point: NullableIntFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutByInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
  uploads: FileUpdateManyWithoutProfileInput
  user: UserUpdateOneRequiredWithoutProfileInput
}

input ProfileUpdateWithoutReviewsInput {
  addresses: AddressUpdateManyWithoutProfileInput
  avatar: FileUpdateOneWithoutProfileAvatarInput
  brands: BrandUpdateManyWithoutFoundersInput
  cards: CardUpdateManyWithoutProfileInput
  comments: CommentUpdateManyWithoutByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  followedBy: ProfileUpdateManyWithoutFollowingInput
  following: ProfileUpdateManyWithoutFollowedByInput
  id: StringFieldUpdateOperationsInput
  level: NullableIntFieldUpdateOperationsInput
  likes: LikeUpdateManyWithoutByInput
  name: StringFieldUpdateOperationsInput
  phone: NullableBigIntFieldUpdateOperationsInput
  point: NullableIntFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
  uploads: FileUpdateManyWithoutProfileInput
  user: UserUpdateOneRequiredWithoutProfileInput
}

input ProfileUpdateWithoutUploadsInput {
  addresses: AddressUpdateManyWithoutProfileInput
  avatar: FileUpdateOneWithoutProfileAvatarInput
  brands: BrandUpdateManyWithoutFoundersInput
  cards: CardUpdateManyWithoutProfileInput
  comments: CommentUpdateManyWithoutByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  followedBy: ProfileUpdateManyWithoutFollowingInput
  following: ProfileUpdateManyWithoutFollowedByInput
  id: StringFieldUpdateOperationsInput
  level: NullableIntFieldUpdateOperationsInput
  likes: LikeUpdateManyWithoutByInput
  name: StringFieldUpdateOperationsInput
  phone: NullableBigIntFieldUpdateOperationsInput
  point: NullableIntFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutByInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutProfileInput
}

input ProfileUpdateWithoutUserInput {
  addresses: AddressUpdateManyWithoutProfileInput
  avatar: FileUpdateOneWithoutProfileAvatarInput
  brands: BrandUpdateManyWithoutFoundersInput
  cards: CardUpdateManyWithoutProfileInput
  comments: CommentUpdateManyWithoutByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  followedBy: ProfileUpdateManyWithoutFollowingInput
  following: ProfileUpdateManyWithoutFollowedByInput
  id: StringFieldUpdateOperationsInput
  level: NullableIntFieldUpdateOperationsInput
  likes: LikeUpdateManyWithoutByInput
  name: StringFieldUpdateOperationsInput
  phone: NullableBigIntFieldUpdateOperationsInput
  point: NullableIntFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutByInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
  uploads: FileUpdateManyWithoutProfileInput
}

input ProfileUpsertWithWhereUniqueWithoutBrandsInput {
  create: ProfileCreateWithoutBrandsInput!
  update: ProfileUpdateWithoutBrandsInput!
  where: ProfileWhereUniqueInput!
}

input ProfileUpsertWithWhereUniqueWithoutFollowedByInput {
  create: ProfileCreateWithoutFollowedByInput!
  update: ProfileUpdateWithoutFollowedByInput!
  where: ProfileWhereUniqueInput!
}

input ProfileUpsertWithWhereUniqueWithoutFollowingInput {
  create: ProfileCreateWithoutFollowingInput!
  update: ProfileUpdateWithoutFollowingInput!
  where: ProfileWhereUniqueInput!
}

input ProfileUpsertWithoutAvatarInput {
  create: ProfileCreateWithoutAvatarInput!
  update: ProfileUpdateWithoutAvatarInput!
}

input ProfileUpsertWithoutLikesInput {
  create: ProfileCreateWithoutLikesInput!
  update: ProfileUpdateWithoutLikesInput!
}

input ProfileUpsertWithoutReviewsInput {
  create: ProfileCreateWithoutReviewsInput!
  update: ProfileUpdateWithoutReviewsInput!
}

input ProfileUpsertWithoutUploadsInput {
  create: ProfileCreateWithoutUploadsInput!
  update: ProfileUpdateWithoutUploadsInput!
}

input ProfileUpsertWithoutUserInput {
  create: ProfileCreateWithoutUserInput!
  update: ProfileUpdateWithoutUserInput!
}

input ProfileWhereInput {
  AND: [ProfileWhereInput!]
  NOT: [ProfileWhereInput!]
  OR: [ProfileWhereInput!]
  addresses: AddressListRelationFilter
  avatar: FileRelationFilter
  brands: BrandListRelationFilter
  cards: CardListRelationFilter
  comments: CommentListRelationFilter
  createdAt: DateTimeFilter
  followedBy: ProfileListRelationFilter
  following: ProfileListRelationFilter
  id: StringFilter
  level: IntNullableFilter
  likes: LikeListRelationFilter
  name: StringFilter
  phone: BigIntNullableFilter
  point: IntNullableFilter
  reviews: ReviewListRelationFilter
  updatedAt: DateTimeNullableFilter
  uploads: FileListRelationFilter
  user: UserRelationFilter
  userId: StringFilter
}

input ProfileWhereUniqueInput {
  id: String
  userId: String
}

"""Promotion"""
type Promotion {
  couponCode: String!
  createdAt: DateTime!
  enabled: Boolean!
  endAt: DateTime
  id: ID!
  name: String!
  perCustomerUsageLimit: Int
  promotionList: PromotionList!
  promotionListId: String!
  startAt: DateTime
  updatedAt: DateTime!
}

type PromotionAvgAggregate {
  perCustomerUsageLimit: Float
}

type PromotionCountAggregate {
  _all: Int!
  couponCode: Int!
  createdAt: Int!
  enabled: Int!
  endAt: Int!
  id: Int!
  name: Int!
  perCustomerUsageLimit: Int!
  promotionListId: Int!
  startAt: Int!
  updatedAt: Int!
}

type PromotionList {
  id: ID!
  items: [Promotion!]
  total: Int!
}

type PromotionListAvgAggregate {
  total: Float
}

type PromotionListCountAggregate {
  _all: Int!
  id: Int!
  total: Int!
}

type PromotionListMaxAggregate {
  id: String
  total: Int
}

type PromotionListMinAggregate {
  id: String
  total: Int
}

type PromotionListSumAggregate {
  total: Int
}

type PromotionMaxAggregate {
  couponCode: String
  createdAt: DateTime
  enabled: Boolean
  endAt: DateTime
  id: String
  name: String
  perCustomerUsageLimit: Int
  promotionListId: String
  startAt: DateTime
  updatedAt: DateTime
}

type PromotionMinAggregate {
  couponCode: String
  createdAt: DateTime
  enabled: Boolean
  endAt: DateTime
  id: String
  name: String
  perCustomerUsageLimit: Int
  promotionListId: String
  startAt: DateTime
  updatedAt: DateTime
}

type PromotionSumAggregate {
  perCustomerUsageLimit: Int
}

type Query {
  """根据 SKU 获取单个商品"""
  product(sku: String!): Product!

  """根据 slug 查询单个商品分类"""
  productType(slug: String!): ProductType!

  """查询所有商品分类"""
  productTypes: [ProductType!]!

  """获取多个商品，可指定条件"""
  products(cursor: ProductWhereUniqueInput, orderBy: ProductOrderByInput = {createdAt: desc}, skip: Int, take: Int, where: ProductWhereInput): [Product!]!
}

enum QueryMode {
  default
  insensitive
}

type RefundCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  reason: Int!
  updatedAt: Int!
}

type RefundMaxAggregate {
  createdAt: DateTime
  id: String
  reason: String
  updatedAt: DateTime
}

type RefundMinAggregate {
  createdAt: DateTime
  id: String
  reason: String
  updatedAt: DateTime
}

"""商品评价"""
type Review {
  by: Profile!
  createdAt: DateTime!
  description: String
  id: ID!
  product: Product
  productId: String
  profileId: String!
  rate: Int!
  updatedAt: DateTime!
  uploads: [File!]
}

type ReviewAvgAggregate {
  rate: Float
}

type ReviewCountAggregate {
  _all: Int!
  createdAt: Int!
  description: Int!
  id: Int!
  productId: Int!
  profileId: Int!
  rate: Int!
  updatedAt: Int!
}

input ReviewCreateManyByInput {
  createdAt: DateTime
  description: String
  id: String
  productId: String
  rate: Int!
  updatedAt: DateTime
}

input ReviewCreateManyByInputEnvelope {
  data: [ReviewCreateManyByInput!]!
  skipDuplicates: Boolean
}

input ReviewCreateManyProductInput {
  createdAt: DateTime
  description: String
  id: String
  profileId: String!
  rate: Int!
  updatedAt: DateTime
}

input ReviewCreateManyProductInputEnvelope {
  data: [ReviewCreateManyProductInput!]!
  skipDuplicates: Boolean
}

input ReviewCreateNestedManyWithoutByInput {
  connect: [ReviewWhereUniqueInput!]
  connectOrCreate: [ReviewCreateOrConnectWithoutByInput!]
  create: [ReviewCreateWithoutByInput!]
  createMany: ReviewCreateManyByInputEnvelope
}

input ReviewCreateNestedManyWithoutProductInput {
  connect: [ReviewWhereUniqueInput!]
  connectOrCreate: [ReviewCreateOrConnectWithoutProductInput!]
  create: [ReviewCreateWithoutProductInput!]
  createMany: ReviewCreateManyProductInputEnvelope
}

input ReviewCreateNestedOneWithoutUploadsInput {
  connect: ReviewWhereUniqueInput
  connectOrCreate: ReviewCreateOrConnectWithoutUploadsInput
  create: ReviewCreateWithoutUploadsInput
}

input ReviewCreateOrConnectWithoutByInput {
  create: ReviewCreateWithoutByInput!
  where: ReviewWhereUniqueInput!
}

input ReviewCreateOrConnectWithoutProductInput {
  create: ReviewCreateWithoutProductInput!
  where: ReviewWhereUniqueInput!
}

input ReviewCreateOrConnectWithoutUploadsInput {
  create: ReviewCreateWithoutUploadsInput!
  where: ReviewWhereUniqueInput!
}

input ReviewCreateWithoutByInput {
  createdAt: DateTime
  description: String
  id: String
  product: ProductCreateNestedOneWithoutReviewsInput
  rate: Int!
  updatedAt: DateTime
  uploads: FileCreateNestedManyWithoutReviewInput
}

input ReviewCreateWithoutProductInput {
  by: ProfileCreateNestedOneWithoutReviewsInput!
  createdAt: DateTime
  description: String
  id: String
  rate: Int!
  updatedAt: DateTime
  uploads: FileCreateNestedManyWithoutReviewInput
}

input ReviewCreateWithoutUploadsInput {
  by: ProfileCreateNestedOneWithoutReviewsInput!
  createdAt: DateTime
  description: String
  id: String
  product: ProductCreateNestedOneWithoutReviewsInput
  rate: Int!
  updatedAt: DateTime
}

input ReviewListRelationFilter {
  every: ReviewWhereInput
  none: ReviewWhereInput
  some: ReviewWhereInput
}

type ReviewMaxAggregate {
  createdAt: DateTime
  description: String
  id: String
  productId: String
  profileId: String
  rate: Int
  updatedAt: DateTime
}

type ReviewMinAggregate {
  createdAt: DateTime
  description: String
  id: String
  productId: String
  profileId: String
  rate: Int
  updatedAt: DateTime
}

input ReviewRelationFilter {
  is: ReviewWhereInput
  isNot: ReviewWhereInput
}

input ReviewScalarWhereInput {
  AND: [ReviewScalarWhereInput!]
  NOT: [ReviewScalarWhereInput!]
  OR: [ReviewScalarWhereInput!]
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  productId: StringNullableFilter
  profileId: StringFilter
  rate: IntFilter
  updatedAt: DateTimeFilter
}

type ReviewSumAggregate {
  rate: Int
}

input ReviewUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  rate: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ReviewUpdateManyWithWhereWithoutByInput {
  data: ReviewUpdateManyMutationInput!
  where: ReviewScalarWhereInput!
}

input ReviewUpdateManyWithWhereWithoutProductInput {
  data: ReviewUpdateManyMutationInput!
  where: ReviewScalarWhereInput!
}

input ReviewUpdateManyWithoutByInput {
  connect: [ReviewWhereUniqueInput!]
  connectOrCreate: [ReviewCreateOrConnectWithoutByInput!]
  create: [ReviewCreateWithoutByInput!]
  createMany: ReviewCreateManyByInputEnvelope
  delete: [ReviewWhereUniqueInput!]
  deleteMany: [ReviewScalarWhereInput!]
  disconnect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutByInput!]
  updateMany: [ReviewUpdateManyWithWhereWithoutByInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutByInput!]
}

input ReviewUpdateManyWithoutProductInput {
  connect: [ReviewWhereUniqueInput!]
  connectOrCreate: [ReviewCreateOrConnectWithoutProductInput!]
  create: [ReviewCreateWithoutProductInput!]
  createMany: ReviewCreateManyProductInputEnvelope
  delete: [ReviewWhereUniqueInput!]
  deleteMany: [ReviewScalarWhereInput!]
  disconnect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutProductInput!]
  updateMany: [ReviewUpdateManyWithWhereWithoutProductInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutProductInput!]
}

input ReviewUpdateOneWithoutUploadsInput {
  connect: ReviewWhereUniqueInput
  connectOrCreate: ReviewCreateOrConnectWithoutUploadsInput
  create: ReviewCreateWithoutUploadsInput
  delete: Boolean
  disconnect: Boolean
  update: ReviewUpdateWithoutUploadsInput
  upsert: ReviewUpsertWithoutUploadsInput
}

input ReviewUpdateWithWhereUniqueWithoutByInput {
  data: ReviewUpdateWithoutByInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpdateWithWhereUniqueWithoutProductInput {
  data: ReviewUpdateWithoutProductInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpdateWithoutByInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutReviewsInput
  rate: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploads: FileUpdateManyWithoutReviewInput
}

input ReviewUpdateWithoutProductInput {
  by: ProfileUpdateOneRequiredWithoutReviewsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  rate: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploads: FileUpdateManyWithoutReviewInput
}

input ReviewUpdateWithoutUploadsInput {
  by: ProfileUpdateOneRequiredWithoutReviewsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  product: ProductUpdateOneWithoutReviewsInput
  rate: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ReviewUpsertWithWhereUniqueWithoutByInput {
  create: ReviewCreateWithoutByInput!
  update: ReviewUpdateWithoutByInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpsertWithWhereUniqueWithoutProductInput {
  create: ReviewCreateWithoutProductInput!
  update: ReviewUpdateWithoutProductInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpsertWithoutUploadsInput {
  create: ReviewCreateWithoutUploadsInput!
  update: ReviewUpdateWithoutUploadsInput!
}

input ReviewWhereInput {
  AND: [ReviewWhereInput!]
  NOT: [ReviewWhereInput!]
  OR: [ReviewWhereInput!]
  by: ProfileRelationFilter
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  product: ProductRelationFilter
  productId: StringNullableFilter
  profileId: StringFilter
  rate: IntFilter
  updatedAt: DateTimeFilter
  uploads: FileListRelationFilter
}

input ReviewWhereUniqueInput {
  id: String
  profileId: String
}

"""角色"""
type Role {
  channels: [Channel!]
  createdAt: DateTime!
  description: String
  id: ID!
  isDefault: Boolean
  languageCode: LanguageCode!
  name: String!
  permissions: [Permission!]
  slug: String!
  status: RoleStatus
  translations: [RoleTranslation!]
  updatedAt: DateTime
  user: User
  userId: String
}

type RoleCountAggregate {
  _all: Int!
  createdAt: Int!
  description: Int!
  id: Int!
  isDefault: Int!
  languageCode: Int!
  name: Int!
  permissions: Int!
  slug: Int!
  status: Int!
  updatedAt: Int!
  userId: Int!
}

input RoleCreateManyUserInput {
  createdAt: DateTime
  description: String
  id: String
  isDefault: Boolean
  languageCode: LanguageCode
  name: String!
  permissions: RoleCreateManypermissionsInput
  slug: String!
  status: RoleStatus
  updatedAt: DateTime
}

input RoleCreateManyUserInputEnvelope {
  data: [RoleCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input RoleCreateManypermissionsInput {
  set: [Permission!]!
}

input RoleCreateNestedManyWithoutUserInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutUserInput!]
  create: [RoleCreateWithoutUserInput!]
  createMany: RoleCreateManyUserInputEnvelope
}

input RoleCreateNestedOneWithoutChannelsInput {
  connect: RoleWhereUniqueInput
  connectOrCreate: RoleCreateOrConnectWithoutChannelsInput
  create: RoleCreateWithoutChannelsInput
}

input RoleCreateOrConnectWithoutChannelsInput {
  create: RoleCreateWithoutChannelsInput!
  where: RoleWhereUniqueInput!
}

input RoleCreateOrConnectWithoutUserInput {
  create: RoleCreateWithoutUserInput!
  where: RoleWhereUniqueInput!
}

input RoleCreateWithoutChannelsInput {
  createdAt: DateTime
  description: String
  id: String
  isDefault: Boolean
  languageCode: LanguageCode
  name: String!
  permissions: RoleCreatepermissionsInput
  slug: String!
  status: RoleStatus
  translations: RoleTranslationCreateNestedManyWithoutRoleInput
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutRolesInput
}

input RoleCreateWithoutUserInput {
  channels: ChannelCreateNestedManyWithoutRoleInput
  createdAt: DateTime
  description: String
  id: String
  isDefault: Boolean
  languageCode: LanguageCode
  name: String!
  permissions: RoleCreatepermissionsInput
  slug: String!
  status: RoleStatus
  translations: RoleTranslationCreateNestedManyWithoutRoleInput
  updatedAt: DateTime
}

input RoleCreatepermissionsInput {
  set: [Permission!]!
}

input RoleListRelationFilter {
  every: RoleWhereInput
  none: RoleWhereInput
  some: RoleWhereInput
}

type RoleMaxAggregate {
  createdAt: DateTime
  description: String
  id: String
  isDefault: Boolean
  languageCode: LanguageCode
  name: String
  slug: String
  status: RoleStatus
  updatedAt: DateTime
  userId: String
}

type RoleMinAggregate {
  createdAt: DateTime
  description: String
  id: String
  isDefault: Boolean
  languageCode: LanguageCode
  name: String
  slug: String
  status: RoleStatus
  updatedAt: DateTime
  userId: String
}

input RoleRelationFilter {
  is: RoleWhereInput
  isNot: RoleWhereInput
}

input RoleScalarWhereInput {
  AND: [RoleScalarWhereInput!]
  NOT: [RoleScalarWhereInput!]
  OR: [RoleScalarWhereInput!]
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  isDefault: BoolNullableFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  permissions: EnumPermissionNullableListFilter
  slug: StringFilter
  status: EnumRoleStatusNullableFilter
  updatedAt: DateTimeNullableFilter
  userId: StringNullableFilter
}

"""角色状态"""
enum RoleStatus {
  normal
  terminated
}

type RoleTranslation {
  Role: Role
  description: String
  id: ID!
  languageCode: LanguageCode!
  name: String!
  roleId: String
}

type RoleTranslationCountAggregate {
  _all: Int!
  description: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  roleId: Int!
}

input RoleTranslationCreateManyRoleInput {
  description: String
  id: String
  languageCode: LanguageCode
  name: String!
}

input RoleTranslationCreateManyRoleInputEnvelope {
  data: [RoleTranslationCreateManyRoleInput!]!
  skipDuplicates: Boolean
}

input RoleTranslationCreateNestedManyWithoutRoleInput {
  connect: [RoleTranslationWhereUniqueInput!]
  connectOrCreate: [RoleTranslationCreateOrConnectWithoutRoleInput!]
  create: [RoleTranslationCreateWithoutRoleInput!]
  createMany: RoleTranslationCreateManyRoleInputEnvelope
}

input RoleTranslationCreateOrConnectWithoutRoleInput {
  create: RoleTranslationCreateWithoutRoleInput!
  where: RoleTranslationWhereUniqueInput!
}

input RoleTranslationCreateWithoutRoleInput {
  description: String
  id: String
  languageCode: LanguageCode
  name: String!
}

input RoleTranslationListRelationFilter {
  every: RoleTranslationWhereInput
  none: RoleTranslationWhereInput
  some: RoleTranslationWhereInput
}

type RoleTranslationMaxAggregate {
  description: String
  id: String
  languageCode: LanguageCode
  name: String
  roleId: String
}

type RoleTranslationMinAggregate {
  description: String
  id: String
  languageCode: LanguageCode
  name: String
  roleId: String
}

input RoleTranslationScalarWhereInput {
  AND: [RoleTranslationScalarWhereInput!]
  NOT: [RoleTranslationScalarWhereInput!]
  OR: [RoleTranslationScalarWhereInput!]
  description: StringNullableFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  roleId: StringNullableFilter
}

input RoleTranslationUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input RoleTranslationUpdateManyWithWhereWithoutRoleInput {
  data: RoleTranslationUpdateManyMutationInput!
  where: RoleTranslationScalarWhereInput!
}

input RoleTranslationUpdateManyWithoutRoleInput {
  connect: [RoleTranslationWhereUniqueInput!]
  connectOrCreate: [RoleTranslationCreateOrConnectWithoutRoleInput!]
  create: [RoleTranslationCreateWithoutRoleInput!]
  createMany: RoleTranslationCreateManyRoleInputEnvelope
  delete: [RoleTranslationWhereUniqueInput!]
  deleteMany: [RoleTranslationScalarWhereInput!]
  disconnect: [RoleTranslationWhereUniqueInput!]
  set: [RoleTranslationWhereUniqueInput!]
  update: [RoleTranslationUpdateWithWhereUniqueWithoutRoleInput!]
  updateMany: [RoleTranslationUpdateManyWithWhereWithoutRoleInput!]
  upsert: [RoleTranslationUpsertWithWhereUniqueWithoutRoleInput!]
}

input RoleTranslationUpdateWithWhereUniqueWithoutRoleInput {
  data: RoleTranslationUpdateWithoutRoleInput!
  where: RoleTranslationWhereUniqueInput!
}

input RoleTranslationUpdateWithoutRoleInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input RoleTranslationUpsertWithWhereUniqueWithoutRoleInput {
  create: RoleTranslationCreateWithoutRoleInput!
  update: RoleTranslationUpdateWithoutRoleInput!
  where: RoleTranslationWhereUniqueInput!
}

input RoleTranslationWhereInput {
  AND: [RoleTranslationWhereInput!]
  NOT: [RoleTranslationWhereInput!]
  OR: [RoleTranslationWhereInput!]
  Role: RoleRelationFilter
  description: StringNullableFilter
  id: StringFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  roleId: StringNullableFilter
}

input RoleTranslationWhereUniqueInput {
  id: String
}

input RoleUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isDefault: NullableBoolFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  permissions: RoleUpdatepermissionsInput
  slug: StringFieldUpdateOperationsInput
  status: NullableEnumRoleStatusFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input RoleUpdateManyWithWhereWithoutUserInput {
  data: RoleUpdateManyMutationInput!
  where: RoleScalarWhereInput!
}

input RoleUpdateManyWithoutUserInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutUserInput!]
  create: [RoleCreateWithoutUserInput!]
  createMany: RoleCreateManyUserInputEnvelope
  delete: [RoleWhereUniqueInput!]
  deleteMany: [RoleScalarWhereInput!]
  disconnect: [RoleWhereUniqueInput!]
  set: [RoleWhereUniqueInput!]
  update: [RoleUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [RoleUpdateManyWithWhereWithoutUserInput!]
  upsert: [RoleUpsertWithWhereUniqueWithoutUserInput!]
}

input RoleUpdateOneWithoutChannelsInput {
  connect: RoleWhereUniqueInput
  connectOrCreate: RoleCreateOrConnectWithoutChannelsInput
  create: RoleCreateWithoutChannelsInput
  delete: Boolean
  disconnect: Boolean
  update: RoleUpdateWithoutChannelsInput
  upsert: RoleUpsertWithoutChannelsInput
}

input RoleUpdateWithWhereUniqueWithoutUserInput {
  data: RoleUpdateWithoutUserInput!
  where: RoleWhereUniqueInput!
}

input RoleUpdateWithoutChannelsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isDefault: NullableBoolFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  permissions: RoleUpdatepermissionsInput
  slug: StringFieldUpdateOperationsInput
  status: NullableEnumRoleStatusFieldUpdateOperationsInput
  translations: RoleTranslationUpdateManyWithoutRoleInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutRolesInput
}

input RoleUpdateWithoutUserInput {
  channels: ChannelUpdateManyWithoutRoleInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isDefault: NullableBoolFieldUpdateOperationsInput
  languageCode: EnumLanguageCodeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  permissions: RoleUpdatepermissionsInput
  slug: StringFieldUpdateOperationsInput
  status: NullableEnumRoleStatusFieldUpdateOperationsInput
  translations: RoleTranslationUpdateManyWithoutRoleInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input RoleUpdatepermissionsInput {
  push: [Permission!]
  set: [Permission!]
}

input RoleUpsertWithWhereUniqueWithoutUserInput {
  create: RoleCreateWithoutUserInput!
  update: RoleUpdateWithoutUserInput!
  where: RoleWhereUniqueInput!
}

input RoleUpsertWithoutChannelsInput {
  create: RoleCreateWithoutChannelsInput!
  update: RoleUpdateWithoutChannelsInput!
}

input RoleWhereInput {
  AND: [RoleWhereInput!]
  NOT: [RoleWhereInput!]
  OR: [RoleWhereInput!]
  channels: ChannelListRelationFilter
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  isDefault: BoolNullableFilter
  languageCode: EnumLanguageCodeFilter
  name: StringFilter
  permissions: EnumPermissionNullableListFilter
  slug: StringFilter
  status: EnumRoleStatusNullableFilter
  translations: RoleTranslationListRelationFilter
  updatedAt: DateTimeNullableFilter
  user: UserRelationFilter
  userId: StringNullableFilter
}

input RoleWhereUniqueInput {
  id: String
  slug: String
}

type ShippingMethod {
  code: String!
  createdAt: DateTime!
  description: String
  id: ID!
  languageCode: LanguageCode!
  name: String!
  translations: [ShippingMethodTranslation!]
  updatedAt: DateTime!
}

type ShippingMethodCountAggregate {
  _all: Int!
  code: Int!
  createdAt: Int!
  description: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  updatedAt: Int!
}

type ShippingMethodMaxAggregate {
  code: String
  createdAt: DateTime
  description: String
  id: String
  languageCode: LanguageCode
  name: String
  updatedAt: DateTime
}

type ShippingMethodMinAggregate {
  code: String
  createdAt: DateTime
  description: String
  id: String
  languageCode: LanguageCode
  name: String
  updatedAt: DateTime
}

type ShippingMethodTranslation {
  createdAt: DateTime!
  description: String
  id: ID!
  languageCode: LanguageCode!
  name: String!
  shippingMethod: ShippingMethod!
  shippingMethodId: String!
}

type ShippingMethodTranslationCountAggregate {
  _all: Int!
  description: Int!
  id: Int!
  languageCode: Int!
  name: Int!
  shippingMethodId: Int!
}

type ShippingMethodTranslationMaxAggregate {
  description: String
  id: String
  languageCode: LanguageCode
  name: String
  shippingMethodId: String
}

type ShippingMethodTranslationMinAggregate {
  description: String
  id: String
  languageCode: LanguageCode
  name: String
  shippingMethodId: String
}

enum SortOrder {
  asc
  desc
}

"""文章、图片、视频等来源"""
type Source {
  File: [File!]
  id: ID!
  link: String
  name: String!
}

type SourceCountAggregate {
  _all: Int!
  id: Int!
  link: Int!
  name: Int!
}

input SourceCreateNestedOneWithoutFileInput {
  connect: SourceWhereUniqueInput
  connectOrCreate: SourceCreateOrConnectWithoutFileInput
  create: SourceCreateWithoutFileInput
}

input SourceCreateOrConnectWithoutFileInput {
  create: SourceCreateWithoutFileInput!
  where: SourceWhereUniqueInput!
}

input SourceCreateWithoutFileInput {
  id: String
  link: String
  name: String!
}

type SourceMaxAggregate {
  id: String
  link: String
  name: String
}

type SourceMinAggregate {
  id: String
  link: String
  name: String
}

input SourceRelationFilter {
  is: SourceWhereInput
  isNot: SourceWhereInput
}

input SourceUpdateOneWithoutFileInput {
  connect: SourceWhereUniqueInput
  connectOrCreate: SourceCreateOrConnectWithoutFileInput
  create: SourceCreateWithoutFileInput
  delete: Boolean
  disconnect: Boolean
  update: SourceUpdateWithoutFileInput
  upsert: SourceUpsertWithoutFileInput
}

input SourceUpdateWithoutFileInput {
  id: StringFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input SourceUpsertWithoutFileInput {
  create: SourceCreateWithoutFileInput!
  update: SourceUpdateWithoutFileInput!
}

input SourceWhereInput {
  AND: [SourceWhereInput!]
  File: FileListRelationFilter
  NOT: [SourceWhereInput!]
  OR: [SourceWhereInput!]
  id: StringFilter
  link: StringNullableFilter
  name: StringFilter
}

input SourceWhereUniqueInput {
  id: String
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

"""User 用户"""
type User {
  authenticationMethods: [AuthenticationMethod!]
  createdAt: DateTime!
  customFields: JSON
  email: String!
  id: ID!
  lastLoginAt: DateTime
  profile: Profile
  refreshToken: String
  updatedAt: DateTime
  username: String
}

type UserCountAggregate {
  _all: Int!
  createdAt: Int!
  customFields: Int!
  email: Int!
  id: Int!
  identifierToken: Int!
  jwtToken: Int!
  lastLoginAt: Int!
  refreshToken: Int!
  resetPasswordToken: Int!
  updatedAt: Int!
  username: Int!
}

input UserCreateNestedOneWithoutProfileInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutProfileInput
  create: UserCreateWithoutProfileInput
}

input UserCreateNestedOneWithoutRolesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutRolesInput
  create: UserCreateWithoutRolesInput
}

input UserCreateOrConnectWithoutProfileInput {
  create: UserCreateWithoutProfileInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutRolesInput {
  create: UserCreateWithoutRolesInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutProfileInput {
  authenticationMethods: AuthenticationMethodCreateNestedManyWithoutUserInput
  createdAt: DateTime
  customFields: JSON
  email: String!
  id: String
  identifierToken: String
  jwtToken: String!
  lastLoginAt: DateTime
  password: String!
  refreshToken: String
  resetPasswordToken: String
  roles: RoleCreateNestedManyWithoutUserInput
  updatedAt: DateTime
  username: String
}

input UserCreateWithoutRolesInput {
  authenticationMethods: AuthenticationMethodCreateNestedManyWithoutUserInput
  createdAt: DateTime
  customFields: JSON
  email: String!
  id: String
  identifierToken: String
  jwtToken: String!
  lastLoginAt: DateTime
  password: String!
  profile: ProfileCreateNestedOneWithoutUserInput
  refreshToken: String
  resetPasswordToken: String
  updatedAt: DateTime
  username: String
}

type UserMaxAggregate {
  createdAt: DateTime
  email: String
  id: String
  identifierToken: String
  jwtToken: String
  lastLoginAt: DateTime
  refreshToken: String
  resetPasswordToken: String
  updatedAt: DateTime
  username: String
}

type UserMinAggregate {
  createdAt: DateTime
  email: String
  id: String
  identifierToken: String
  jwtToken: String
  lastLoginAt: DateTime
  refreshToken: String
  resetPasswordToken: String
  updatedAt: DateTime
  username: String
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input UserUpdateOneRequiredWithoutProfileInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutProfileInput
  create: UserCreateWithoutProfileInput
  update: UserUpdateWithoutProfileInput
  upsert: UserUpsertWithoutProfileInput
}

input UserUpdateOneWithoutRolesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutRolesInput
  create: UserCreateWithoutRolesInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutRolesInput
  upsert: UserUpsertWithoutRolesInput
}

input UserUpdateWithoutProfileInput {
  authenticationMethods: AuthenticationMethodUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  customFields: JSON
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  identifierToken: NullableStringFieldUpdateOperationsInput
  jwtToken: StringFieldUpdateOperationsInput
  lastLoginAt: NullableDateTimeFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  refreshToken: NullableStringFieldUpdateOperationsInput
  resetPasswordToken: NullableStringFieldUpdateOperationsInput
  roles: RoleUpdateManyWithoutUserInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
}

input UserUpdateWithoutRolesInput {
  authenticationMethods: AuthenticationMethodUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  customFields: JSON
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  identifierToken: NullableStringFieldUpdateOperationsInput
  jwtToken: StringFieldUpdateOperationsInput
  lastLoginAt: NullableDateTimeFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  profile: ProfileUpdateOneWithoutUserInput
  refreshToken: NullableStringFieldUpdateOperationsInput
  resetPasswordToken: NullableStringFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
}

input UserUpsertWithoutProfileInput {
  create: UserCreateWithoutProfileInput!
  update: UserUpdateWithoutProfileInput!
}

input UserUpsertWithoutRolesInput {
  create: UserCreateWithoutRolesInput!
  update: UserUpdateWithoutRolesInput!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  authenticationMethods: AuthenticationMethodListRelationFilter
  createdAt: DateTimeFilter
  customFields: JsonNullableFilter
  email: StringFilter
  id: StringFilter
  identifierToken: StringNullableFilter
  jwtToken: StringFilter
  lastLoginAt: DateTimeNullableFilter
  password: StringFilter
  profile: ProfileRelationFilter
  refreshToken: StringNullableFilter
  resetPasswordToken: StringNullableFilter
  roles: RoleListRelationFilter
  updatedAt: DateTimeNullableFilter
  username: StringNullableFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
  identifierToken: String
  jwtToken: String
  refreshToken: String
  resetPasswordToken: String
  username: String
}
